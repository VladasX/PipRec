{"2020": "", "2048": "Quantum's version of the 2048 game, with multi-instance support,restored from an old high school project.", "3to2": "Refactors valid 3.x syntax into valid 2.x syntax, if a syntactical conversion is possible", "42": "", "42cc-pystyle": "flake8 checks for 42 Coffee Cups style guide", "69": "Handy module for 2", "aa": "aaa", "aaargh": "An astonishingly awesome application argument helper", "aafigure": "ASCII art to image converter", "abcd": "AeroGear Build Cli for Digger", "abclient": "Python client library for EISOO AnyBackup API", "abjad": "Abjad is a Python API for Formalized Score Control.", "able": "", "ablog": "A Sphinx extension that converts any documentation or personal website project into a full-fledged blog.", "abodepy": "An Abode alarm Python library running on Python 3.", "about": "Software Metadata for Humans", "absl-py": "Abseil Python Common Libraries, see https://github.com/abseil/abseil-py.", "abstract": "Python library for creating and drawing graphs and taking advantage of graph properties", "ac": "A python library for writing C/C++ configure files.", "academic": "The website designer for Hugo", "access": "Calculate spatial accessibility metrics.", "accesscontrol": "Security framework for Zope.", "accordion": "Make flat dict and back from dict", "acme": "ACME protocol implementation in Python", "acora": "Fast multi-keyword search engine for text strings", "acorn": "Automated computational research notebook.", "acquisition": "Acquisition is a mechanism that allows objects to obtain attributes from the containment hierarchy they're in.", "across": "Run Python code across different machines", "actdiag": "actdiag generates activity-diagram image from text", "action": "A command-line parser you won't hate", "actions": "Declarative actions", "activity": "", "activitystream": "", "ad": "Fast, transparent first- and second-order automatic differentiation", "adafruit-ampy": "ampy (Adafruit MicroPython tool) is a command line tool to interact with a CircuitPython or MicroPython board over a serial connection.", "adafruit-blinka": "CircuitPython APIs for non-CircuitPython versions of Python such as CPython on Linux and MicroPython.", "adafruit-circuitpython-busdevice": "CircuitPython bus device classes to manage bus sharing.", "adafruit-circuitpython-mcp230xx": "CircuitPython library for controlling a MCP23008 or MCP23017 I2C GPIO expander.", "adafruit-circuitpython-register": "CircuitPython data descriptor classes to represent hardware registers on I2C and SPI devices.", "adafruit-dht": "Library to get readings from the DHT11, DHT22, and AM2302 humidity and temperature sensors on a Raspberry Pi or Beaglebone Black.", "adafruit-gpio": "Library to provide a cross-platform GPIO interface on the Raspberry Pi and Beaglebone Black using the RPi.GPIO and Adafruit_BBIO libraries.", "adafruit-platformdetect": "Platform detection for use by libraries like Adafruit-Blinka.", "adafruit-pureio": "Pure python (i.e. no native extensions) access to Linux IO including I2C and SPI.  Drop in replacement for smbus and spidev modules.", "adafruit-sht31": "Python Library for Adafruit SHT31 module", "adafruit-ssd1306": "Python library to use SSD1306-based 128x64 or 128x32 pixel OLED displays with a Raspberry Pi or Beaglebone Black.", "adal": "The ADAL for Python library makes it easy for python application to authenticate to Azure Active Directory (AAD) in order to access AAD protected web resources.", "adam": "Adam programming language implemented in python", "adapt-parser": "A text-to-intent parsing framework.", "adb-shell": "A Python implementation of ADB with shell and FileSync functionality.", "adblockparser": "Parser for Adblock Plus rules", "add": "UNKNOWN", "addict": "Addict is a dictionary whose items can be set using both attribute and item syntax.", "addons": "Dynamically extend other objects with AddOns (formerly ObjectRoles)", "address": "address is an address parsing library, taking the guesswork out of using addresses in your applications.", "adguardhome": "Asynchronous Python client for the AdGuard Home API.", "adjacent": "Centrifuge integration with Django framework", "adjusttext": "Iteratively adjust text position in matplotlib plots to minimize overlaps", "admin_bootstrap": "Django admin templates that are compatible with Twitter Bootstrap version 2.1.0", "adns-python": "An interface to GNU adns", "adodbapi": "A pure Python package implementing PEP 249 DB-API using Microsoft ADO.", "ads": "A Python module for NASA's ADS that doesn't suck.", "advancedhttpserver": "A standalone web server built on Python's BaseHTTPServer.", "ae": "Python accoustic emission tools", "aeidon": "aeidon is a Python package for reading, writing and manipulating text-based subtitle files. It is used by the gaupol package, which provides a subtitle editor with a GTK+ user interface.", "aeltei": "UNKNOWN", "aenum": "Advanced Enumerations (compatible with Python's stdlib Enum), NamedTuples, and NamedConstants", "aero": "aero adds django-like apps support to tornado and automates common actions", "aerospike": "Aerospike Client Library for Python", "aexpect": "Aexpect", "af": "Af format tools", "affine": "Matrices describing affine transformation of the plane.", "affinegap": "A Cython implementation of the affine gap string distance", "africastalkinggateway": "An Official Python library for communicating with the AfricasTalking REST API", "afsapi": "Asynchronous Implementation of the Frontier Silicon API", "aftership": "Python SDK of AfterShip API", "ag": "AlgoLib Project", "again": "Python decorators for type and value checking at runtime. Also, some boilerplate code for making classes that support event registration and firing.", "agate": "A data analysis library that is optimized for humans instead of machines.", "agate-dbf": "agate-dbf adds read support for dbf files to agate.", "agate-excel": "agate-excel adds read support for Excel files (xls and xlsx) to agate.", "agate-sql": "agate-sql adds SQL read/write support to agate.", "agate-stats": "agate-stats adds additional statistical methods to agate.", "aggdraw": "High quality drawing interface for PIL.", "ago": "ago: Human readable timedeltas", "agon-ratings": "a user ratings app", "ai": "Ai lib.", "aiml": "An interpreter package for AIML, the Artificial Intelligence Markup Language", "aio-pika": "Wrapper for the aiormq for asyncio and humans.", "aioambient": "A clean, async-friendly library for the Ambient Weather API", "aioamqp": "AMQP implementation using asyncio", "aioasuswrt": "Api wrapper for Asuswrt https://www.asus.com/ASUSWRT/", "aioautomatic": "Asyncio library for the Automatic API", "aiobotocore": "Async client for aws services using botocore and aiohttp", "aiocache": "multi backend asyncio cache", "aiocoap": "Python CoAP library", "aioconsole": "Asynchronous console and interfaces for asyncio", "aiocontextvars": "Asyncio support for PEP-567 contextvars backport.", "aiocron": "Crontabs for asyncio", "aiodns": "Simple DNS resolver for asyncio", "aiodocker": "Docker API client for asyncio", "aioesphomeapi": "", "aioeventlet": "asyncio event loop scheduling callbacks in eventlet.", "aiofiles": "File support for asyncio.", "aiofreepybox": "Provides asynchronous authentication and access to Freebox servers", "aioftp": "ftp client/server for asyncio", "aiogithubauth": "github auth middleware for aiohttp", "aiogram": "Is a pretty simple and fully asynchronous framework for Telegram Bot API", "aiogremlin": "An asynchronous DSL for the Gremlin-Python driver", "aioharmony": "Asyncio Python library for connecting to and controlling the Logitech Harmony", "aiohttp": "Async http client/server framework (asyncio)", "aiohttp-debugtoolbar": "debugtoolbar for aiohttp", "aiohttp-devtools": "Dev tools for aiohttp", "aiohttp-jinja2": "jinja2 template renderer for aiohttp.web (http server for asyncio)", "aiohttp-session": "sessions for aiohttp.web", "aiohttp-socks": "Proxy connector for aiohttp", "aiohttp-swagger": "Swagger API Documentation builder for aiohttp server", "aiohttp-theme": "A configurable sidebar-enabled Sphinx theme", "aiohttp_cors": "CORS support for aiohttp", "aiohttp_session_flash": "Session flash messages for aiohttp.web", "aiohue": "Python module to talk to Philips Hue.", "aioice": "An implementation of Interactive Connectivity Establishment (RFC 5245)", "aioiliad": "A python package that can be installed with pip.", "aioimaplib": "Python asyncio IMAP4rev1 client library", "aiojobs": "Jobs scheduler for managing background task (asyncio).", "aiokafka": "Kafka integration with asyncio.", "aiolifx": "API for local communication with LIFX devices over a LAN with asyncio.", "aiomcache": "Minimal pure python memcached client", "aiomysql": "MySQL driver for asyncio.", "aionotify": "Asyncio-powered inotify library", "aionotion": "A simple Python 3 library for Notion Home Monitoring", "aiopg": "Postgres integration with asyncio.", "aiopogo": "Asynchronous Pokemon API lib", "aiopvapi": "Powerview blinds API wrapper", "aioredis": "asyncio (PEP 3156) Redis support", "aioresponses": "Mock out requests made by ClientSession from aiohttp package", "aiorpcx": "Generic async RPC implementation, including JSON-RPC", "aiosmtpd": "aiosmtpd - asyncio based SMTP server", "aiosmtplib": "asyncio SMTP client", "aiosocks": "SOCKS proxy client for asyncio and aiohttp", "aiosqlite": "asyncio bridge to the standard sqlite3 module", "aioswitcher": "Switcher Boiler Unofficial Bridge and API.", "aiotg": "Asynchronous Python API for building Telegram bots", "aiounifi": "An asynchronous Python library for communicating with Unifi Controller API", "aiounittest": "Test asyncio code more easily.", "aiowwlln": "A simple Python API for the WWLLN", "aiozmq": "ZeroMQ integration with asyncio.", "airflow": "Placeholder for the old Airflow package", "airly": "Python wrapper for getting air quality data from Airly sensors.", "airspeed": "Airspeed is a powerful and easy-to-use templating engine for Python that aims for a high level of compatibility with the popular Velocity library for Java.", "airtable-python-wrapper": "Python API Wrapper for the Airtable API", "ajax": "A simple framework for creating AJAX endpoints in Django.", "ajaxuploader": "AJAX file uploader for django", "akad": "", "akismet": "A Python interface to the Akismet spam-filtering API.", "alabaster": "A configurable sidebar-enabled Sphinx theme", "alabaster_jupyterhub": "The JupyterHub Alabaster theme", "alagitpull": "Cleverly-named alabaster sub-theme for git-pull projects", "alarmdecoder": "Python interface for the AlarmDecoder (AD2) family of alarm devices which includes the AD2USB, AD2SERIAL and AD2PI.", "albumentations": "Fast image augmentation library and easy to use wrapper around other libraries", "aldjemy": "SQLAlchemy to Django integration library", "aldryn-apphooks-config": "Namespaces based configuration for Apphooks", "aldryn-boilerplates": "An extension that allows re-usable apps to provide sets of templates and staticfiles for different boilerplates.", "aldryn-bootstrap3": "Adds Bootstrap 3 components as plugins.", "aldryn-categories": "Hierarchical categories/taxonomies for your Django project", "aldryn-common": "Common utilities", "aldryn-newsblog": "Adds blogging and newsing capabilities to django CMS", "aldryn-people": "Aldryn People publishes profile pages for people in your organisation including team members, collaborators, partners, clients, and so on, including photographs and address information.", "aldryn-reversion": "Support for django-reversion on models with translatable fields and django-cms placeholder fields.", "aldryn-search": "An extension to django CMS to provide multilingual Haystack indexes", "aldryn-style": "Style Plugin for django CMS", "aldryn-translation-tools": "Collection of helpers and mixins for translated projects", "ale-python-interface": "Arcade Learning Environment Python Interface", "alembic": "A database migration tool for SQLAlchemy.", "alex": "Natural language access to command line", "alexander": "Test", "alexis": "", "alfred-workflow": "Full-featured helper library for writing Alfred 2/3/4 workflows", "algoliasearch": "Algolia Search API Client for Python.", "algopy": "ALGOPY: Taylor Arithmetic Computation and Algorithmic Differentiation", "algorithm": "Model an algorithm as a list of functions.", "algorithmia": "Algorithmia Python Client", "algorithms": "Pythonic Data Structures and Algorithms", "alibi": "Algorithms for monitoring and explaining machine learning models", "alignlib-lite": "alignlib-lite - simple wrapper around alignlib C++ library for sequence alignment", "alignment": "Native Python library for generic sequence alignment.", "aliyun-python-sdk-core": "The core module of Aliyun Python SDK.", "aliyun-python-sdk-core-v3": "The core module of Aliyun Python SDK.", "aliyun-python-sdk-ecs": "The ecs module of Aliyun Python sdk.", "aliyun-python-sdk-kms": "The kms module of Aliyun Python sdk.", "aliyun-python-sdk-rds": "The rds module of Aliyun Python sdk.", "aliyun-python-sdk-slb": "The slb module of Aliyun Python sdk.", "aliyun-python-sdk-sts": "The sts module of Aliyun Python sdk.", "aliyun-python-sdk-vpc": "The vpc module of Aliyun Python sdk.", "aliyuncli": "Universal Command Line Environment for aliyun", "allennlp": "An open-source NLP research library, built on PyTorch.", "allow": "Personal Website Safe and Block List Management Script", "allows": "Easier mock configuration and assertions in Python", "allpairs": "Pairwise test combinations generator", "allure-pytest": "Allure pytest integration", "allure-python-commons": "Common module for integrate allure with python-based frameworks", "almost": "A helper to compare two numbers generously", "aloe": "Gherkin runner compatible with Lettuce", "alone": "Metaclass that defines a class as a singleton", "alpaca-trade-api": "Alpaca API python client", "alpha-vantage": "Python module to get stock data from the Alpha Vantage Api", "also": "UNKNOWN", "altair": "Altair: A declarative statistical visualization library for Python.", "altgraph": "Python graph (network) package", "amara": "Library for XML processing in Python", "amazon-kclpy": "A python interface for the Amazon Kinesis Client Library MultiLangDaemon", "amazon_kclpy-ext": "A python interface for the Amazon Kinesis Client Library MultiLangDaemon", "ambiclimate": "A python3 library to communicate with Ambiclimate", "ambikesh13491": "Printer of nested lists", "ambition-ae": "Adverse Event models and handling.", "ambition-labs": "Lab configuration for ambition/edc", "ambition-lists": "List models for the ambition trial", "ambition-prn": "PRN forms such as offstudy, protocol violation, etc", "ambition-rando": "Randomization class and models for ambition/edc", "ambition-screening": "Determine a subject's eligibility for ambition/edc.", "ambition-sites": "ambition sites", "ambition-subject": "Subject/Participant models for ambition/edc.", "ambition-visit-schedule": "Visit schedule for ambition/edc project", "amcrest": "Python wrapper implementation for Amcrest cameras.", "amo-validator": "Validates add-ons for Mozilla products.", "amongo": "UNKNOWN", "amqp": "Low-level AMQP client for Python (fork of amqplib).", "amqplib": "AMQP Client Library", "ams": "Painless queue management", "amulet": "Tools to help with writing Juju Charm Functional tests", "ana": "", "anaconda": "Please use the Anaconda installer.", "anaconda-client": "Anaconda Cloud command line client library", "anaconda-navigator": "", "analysis": "Source code analysis of Python programs", "analytics": "Library for efficiently adding analytics to your project.", "analytics-python": "The hassle-free way to integrate analytics into any python application.", "androguard": "Androguard is a full python tool to play with Android files.", "android": "Python for iran.", "android-asset-resizer": "A command-line utility for generating Android drawables in the required densities.", "androidtv": "Communicate with an Android TV or Fire TV device via ADB over a network.", "angles": "Classes for representing angles, and positions on a unit sphere.", "angr": "A multi-architecture binary analysis toolkit, with the ability to perform dynamic symbolic execution and various static analyses on binaries", "angular-gettext-babel": "A plugin for babel to work with angular-gettext templates", "animation": "Tools for terminal-based await animations", "aniso8601": "A library for parsing ISO 8601 strings.", "anndata": "Annotated Data.", "annotator": "Database backend for Annotator (http://annotatorjs.org)", "annoy": "Approximate Nearest Neighbors in C++/Python optimized for memory usage and loading/saving to disk.", "anora": "Anora is a simple_tag for Django that determines whether or not a word should have an \"a\" or \"an\" in front of it. Adds either one of these depending on the phoentic value of the given text.", "ansi": "ANSI cursor movement and graphics", "ansi2html": "Convert text with ANSI color codes to HTML", "ansible": "Radically simple IT automation", "ansible-lint": "Checks playbooks for practices and behaviour that could potentially be improved", "ansible-modules-hashivault": "Ansible Modules for Hashicorp Vault", "ansible-runner": "", "ansicolor": "A library to produce ansi color output and colored highlighting and diffing", "ansicolors": "ANSI colors for Python", "ansiconv": "Converts ANSI coded text and converts it to either plain text or to HTML.", "ansimarkup": "Produce colored terminal text with an xml-like markup", "ansiwrap": "textwrap, but savvy to ANSI colors and styles", "anthemav": "Python API for controlling Anthem Receivers", "antiorm": "A Pythonic Helper for DBAPI-2.0 SQL Access", "antlr4-python2-runtime": "ANTLR 4.8 runtime for Python 2.7.12", "antlr4-python3-runtime": "ANTLR 4.8 runtime for Python 3.7", "antlr_python_runtime": "Runtime package for ANTLR3", "any": "Command Line Interface for Anyscale", "anyconfig": "Library provides common APIs to load and dump configuration files in various formats", "anyio": "High level compatibility layer for multiple asynchronous event loop implementations", "anyjson": "Wraps the best available JSON implementation available in a common interface", "anykeystore": "A key-value store supporting multiple backends.", "anymarkup": "Parse/serialize any markup format", "anymarkup-core": "Core library for anymarkup", "anyone": "anyone lived in a pretty how town - the poem", "anyqt": "PyQt4/PyQt5 compatibility layer.", "anything": "Python constants that consider themselves equal to everything else. Useful for unit testing and more.", "anytree": "Powerful and Lightweight Python Tree Data Structure..", "anyvc": "Library to access any version control system.", "anywhere": "Turn logical sentences into serializable, executable queries.", "anz.dashboard": "Plone netvibes like dashboard implementation", "aodhclient": "Python client library for Aodh", "apache-airflow": "Programmatically author, schedule and monitor data pipelines", "apache-beam": "Apache Beam SDK for Python", "apache-libcloud": "A standard Python library that abstracts away differences among multiple cloud provider APIs. For more information and documentation, please see http://libcloud.apache.org", "apache-log-parser": "Parse lines from an apache log file", "apachemiddleware": "Useful Python middleware for use with mod_wsgi deployments", "apcaccess": "This project implements the apcaccess tool in pure Python and provides", "apex": "Pyramid toolkit to add Velruse, Flash Messages,CSRF, ReCaptcha and Sessions", "api": "Consume an API from ReadMe Build", "apiai": "The API.AI iOS SDK makes it easy to integrate speech recognition with API.AI natural language processing API on iOS devices.", "apiclient": "Framework for making good API client libraries using urllib3.", "apikit": "A set of utility functions for RESTful Flask applications.", "apipkg": "apipkg: namespace control and lazy-import mechanism", "apispec": "A pluggable API specification generator. Currently supports the OpenAPI Specification (f.k.a. the Swagger specification).", "apistar": "API documentation, validation, mocking, and clients.", "aplpy": "The Astronomical Plotting Library in Python", "apns": "A python library for interacting with the Apple Push Notification Service", "apns-client": "Python client for Apple Push Notification service (APNs)", "apns2": "A python library for interacting with the Apple Push Notification Service via HTTP/2 protocol", "app": "a simple egg", "app_version": "A tiny utility to get application version from pkg_resouces", "appdirs": "A small Python module for determining appropriate platform-specific dirs, e.g. a \"user data dir\".", "appear": "Make program internals appear in the browser", "appier": "Appier Framework", "appinst": "cross platform APIs to install applications menu items", "appium-python-client": "Python client for Appium", "appjar": "An easy-to-use, feature-rich GUI wrapper for tKinter. Designed specifically for use in the classroom, but powerful enough to be used anywhere.", "application": "", "applicationinsights": "This project extends the Application Insights API surface to support Python.", "apply": "An apply function for Python 2 and 3", "apply-defaults": "Apply values to optional params", "appmode": "A Jupyter extensions that turns notebooks into web applications.", "appnope": "Disable App Nap on OS X 10.9", "apprise": "Push Notifications that work with just about every platform!", "appscript": "Control AppleScriptable applications from Python.", "apptools": "application tools", "appy": "The Appy framework", "aprslib": "Module for accessing APRS-IS and parsing APRS packets", "apscheduler": "In-process task scheduler with Cron-like capabilities", "apsw": "Another Python SQLite Wrapper", "aq": "Query AWS resources with SQL", "aqualogic": "Library for interfacing with a Hayward/Goldline AquaLogic/ProLogic pool controller.", "arcam-fmj": "A python library for speaking to Arcam receivers", "arch": "ARCH for Python", "archetypes.kss": "KSS (Kinetic Style Sheets) for Archetypes", "archetypes.multilingual": "Multilingual support for archetypes.", "archetypes.querywidget": "Archetypes.querywidget implements a widget for creating catalog queries using an email-filtering-like interface, as found in GMail or Apple Mail.", "archetypes.referencebrowserwidget": "A referencebrowser implementation for Archetypes", "archetypes.schemaextender": "Dynamically extend Archetypes schemas with named adapters.", "archinfo": "", "arctic": "AHL Research Versioned TimeSeries and Tick store", "area": "Calculate the area inside of any GeoJSON geometry. This is a port of Mapbox'sgeojson-area for Python", "aresponses": "Asyncio testing server. Similar to the responses library used for 'requests'", "argcomplete": "Bash tab completion for argparse", "argh": "An unobtrusive argparse wrapper with natural syntax", "argon2": "Bindings for the argon2 password hasher", "argon2-cffi": "The secure Argon2 password hashing algorithm.", "argopen": "open() for argparse", "argparse": "Python command-line parsing library", "args": "Command Arguments for Humans.", "aria2p": "Command-line tool and library to interact with an aria2c daemon process with JSON-RPC.", "armstrong.dev": "Tools needed for development and testing of Armstrong", "arpeggio": "Packrat parser interpreter", "arrays": "Python library for storing and reading stored arrays.", "arrow": "Better dates & times for Python", "art": "ASCII Art Library For Python", "artellapipe": "Framework to create generic Artella based pipelines", "artifacts": "ForensicArtifacts.com Artifact Repository.", "arviz": "Exploratory analysis of Bayesian models", "as": "Invalid syntax", "asana": "Asana API client", "ascii_graph": "A simple python lib to print data as ascii histograms.", "asciidoc": "", "asciimatics": "A cross-platform package to replace curses (mouse/keyboard input & text colours/positioning) and create ASCII animations", "asciinema": "Terminal session recorder", "asciitree": "Draws ASCII trees.", "ase": "Atomic Simulation Environment", "asgi_redis": "Redis-backed ASGI channel layer implementation", "asgiref": "ASGI specs, helper code, and adapters", "ashes": "Lightweight templating for Python (a la dust.js)", "ask": "Easy input validation for python", "ask-sdk-core": "The ASK SDK Core package provides core Alexa Skills Kit functionality, for building Alexa Skills.", "asks": "asks - async http", "asmog": "Python API for Ampio Smog Sensors", "asn1crypto": "Fast ASN.1 parser and serializer with definitions for private keys, public keys, certificates, CRL, OCSP, CMS, PKCS#3, PKCS#7, PKCS#8, PKCS#12, PKCS#5, X.509 and TSP", "asnhistory": "Query a redis database to access to the ASNs descriptions.", "aspen": "Aspen is a Python web framework. Simplates are the main attraction.", "aspen-jinja2": "jinja2 plugin for Aspen", "aspy.yaml": "A few extensions to pyyaml.", "assertpy": "Simple assertion library for unit testing in python with a fluent API", "ast": "Conversion between protobuf3 and srcML.", "asterisk_mbox": "The client side of a client/server to interact with Asterisk voicemail mailboxes", "asteval": "Safe, minimalistic evaluator of python expression using ast module", "astor": "Read/rewrite/write Python ASTs", "astral": "Calculations for the position of the sun and moon.", "astrocalc": "An astronomer's calculator used to perform common calculations, conversions and measurements.", "astroid": "An abstract syntax tree for Python with inference support.", "astroml": "tools for machine learning and data mining in Astronomy", "astroml_addons": "Performance add-ons for the astroML package", "astroplan": "Observation planning package for astronomers", "astropy": "Community-developed python astronomy tools", "astropy-helpers": "Utilities for building and installing packages in the Astropy ecosystem", "astroquery": "Functions and classes to access online astronomical data resources", "asttokens": "Annotate AST trees with source code positions", "astunparse": "An AST unparser for Python", "asv": "Airspeed Velocity: A simple Python history benchmarking tool", "async": "Async Framework", "async-timeout": "Timeout context manager for asyncio programs", "async-upnp-client": "Async UPnP Client", "async_generator": "Async generators and context managers for Python 3.5+", "asyncinit": "Class decorator to enable async __init__", "asyncio": "reference implementation of PEP 3156", "asyncio-ipython-magic": "An extension for IPython that help to run AsyncIO code in your interactive session.", "asyncio-nats-client": "NATS client for Python Asyncio", "asyncio_redis": "PEP 3156 implementation of the redis protocol.", "asyncmongo": "Asynchronous library for accessing mongodb built upon the tornado IOLoop.", "asyncpg": "An asyncio PostgreSQL driver", "asyncpushbullet": "A synchronous and asyncio-based client for pushbullet.com", "asyncssh": "AsyncSSH: Asynchronous SSHv2 client and server library", "asynctest": "Enhance the standard unittest package with features for testing asyncio libraries", "asynmsg": "A library help to build tcp server/client application", "at": "A set of utilities I use frequently in interactive environments", "atari-py": "Python bindings to Atari games", "atc_thrift": "ATC Thrift Library", "atcd": "ATC Daemon", "atelier": "A collection of tools for software artists", "atom": "Memory efficient Python objects", "atomicfile": "Writeable file object that atomically updates a file.", "atomicpress": "AtomicPress is a static blog generator for python developers.", "atomicwrites": "Atomic file writes.", "atpublic": "public -- @public for populating __all__", "attr": "Simple decorator to set attributes of target function or class in a DRY way.", "attrdict": "A dict with attribute-style access", "attrs": "Classes Without Boilerplate", "audioread": "multi-library, cross-platform audio decoding", "auditwheel": "Cross-distribution Linux wheels", "augmentor": "Image augmentation library for Machine Learning", "augustus": "A small example package", "aurorapy": "Python implementation of Aurora Protocol", "auth0-python": "Auth0 Python SDK", "authkit": "An authentication and authorization toolkit for WSGI applications and frameworks", "authlib": "The ultimate Python library in building OAuth and OpenID Connect servers.", "authomatic": "Authorization / authentication client library for Python web applications", "authy": "Authy API Client", "auto": "auto package", "auto-py-to-exe": "Converts .py to .exe using a simple graphical interface.", "autoapi": "Automatic API reference documentation generation for Sphinx inspired by Doxygen", "autobahn": "WebSocket client & server library, WAMP real-time framework", "autobahntestsuite": "AutobahnTestSuite - WebSocket/WAMP protocol implementation test suite.", "autocomplete": "tiny 'autocomplete' tool using a \"hidden markov model\"", "autoconf": "Configuration parsing for the auto* family", "autodoc": "Autodoc Python implementation.", "autoenv": "Directory-based environments.", "autoflake": "Removes unused imports and unused variables", "autograd": "Efficiently computes derivatives of numpy code.", "autologging": "Autologging makes logging and tracing Python classes easy.", "automat": "Self-service finite-state machines for the programmer on the go.", "automationhat": "Automation HAT Driver", "automaton": "Friendly state machines for python.", "automium": "Automium System", "autonetkit": "Automatic configuration generation for emulated networks", "autopep8": "A tool that automatically formats Python code to conform to the PEP 8 style guide", "autopy": "A simple, cross-platform GUI automation library for Python.", "autosemver": "Tools to handle automatic semantic versioning in python", "autotest": "Autotest test framework", "autovizwidget": "AutoVizWidget: An Auto-Visualization library for pandas dataframes", "av": "Pythonic bindings for FFmpeg's libraries.", "avea": "Control an Elgato Avea bulb using python3", "aver": "Active Vision models, built with the Nengo neural simulator", "avocado-framework": "Avocado Test Framework", "avro": "Avro is a serialization and RPC framework.", "avro-python3": "Avro is a serialization and RPC framework.", "awacs": "AWS Access Policy Language creation library", "awesome-slugify": "Python flexible slugify function", "awesomelib": "Awesome Python Utils.", "aws": "Utility to manage your Amazon Web Services and run Fabric against filtered set of EC2 instances.", "aws-cdk.aws-autoscaling": "The CDK Construct Library for AWS::AutoScaling", "aws-cdk.aws-ec2": "CDK Constructs for AWS EC2", "aws-cdk.aws-events": "AWS CloudWatch Events Construct Library", "aws-cdk.aws-iam": "CDK routines for easily assigning correct and minimal IAM permissions", "aws-cdk.aws-lambda": "CDK Constructs for AWS Lambda", "aws-cdk.aws-s3": "CDK Constructs for AWS S3", "aws-cdk.aws-ssm": "The CDK Construct Library for AWS::SSM", "aws-cdk.core": "AWS Cloud Development Kit Core Library", "aws-lambda-builders": "Python library to compile, build & package AWS Lambda functions for several runtimes & frameworks.", "aws-requests-auth": "AWS signature version 4 signing process for the python requests module", "aws-sam-cli": "AWS SAM CLI is a CLI tool for local development and testing of Serverless applications", "aws-sam-translator": "AWS SAM Translator is a library that transform SAM templates into AWS CloudFormation templates", "aws-shell": "AWS Shell", "aws-xray-sdk": "The AWS X-Ray SDK for Python (the SDK) enables Python developers to record and emit information from within their applications to the AWS X-Ray service.", "awscli": "Universal Command Line Environment for AWS.", "awscli-cwlogs": "AWSCLI CloudWatch Logs plugin", "awsebcli": "Command Line Interface for AWS EB.", "awsiotpythonsdk": "SDK for connecting to AWS IoT using Python.", "awslogs": "awslogs is a simple command line tool to read aws cloudwatch logs.", "ax": "Ax - workflow apps builder", "axiom": "An in-process object-relational database", "axis": "A Python library for communicating with devices from Axis Communications", "aylien-apiclient": "AYLIEN Text API Client Library for Python", "az": "AZ - simple command line tools", "azure": "Microsoft Azure Client Libraries for Python", "azure-applicationinsights": "Microsoft Azure Application Insights Client Library for Python", "azure-batch": "Microsoft Azure Batch Client Library for Python", "azure-cli": "Microsoft Azure Command-Line Tools", "azure-cli-acr": "Microsoft Azure Command-Line Tools ACR Command Module", "azure-cli-acs": "Microsoft Azure Command-Line Tools ACS Command Module", "azure-cli-appservice": "Microsoft Azure Command-Line Tools AppService Command Module", "azure-cli-batch": "Microsoft Azure Command-Line Tools Batch Command Module", "azure-cli-cdn": "Microsoft Azure Command-Line Tools Content Delivery Network (CDN) Command Module", "azure-cli-cloud": "Microsoft Azure Command-Line Tools Cloud Command Module", "azure-cli-cognitiveservices": "Microsoft Azure Command-Line Tools Cognitive Services Command Module", "azure-cli-command-modules-nspkg": "Microsoft Azure CLI Command Modules Namespace Package", "azure-cli-configure": "Microsoft Azure Command-Line Tools Configure Command Module", "azure-cli-core": "Microsoft Azure Command-Line Tools Core Module", "azure-cli-cosmosdb": "Microsoft Azure Command-Line Tools Cosmos DB Command Module", "azure-cli-dla": "Microsoft Azure Command-Line Tools Data Lake Analytics Command Module", "azure-cli-dls": "Microsoft Azure Command-Line Tools Data Lake Store Command Module", "azure-cli-feedback": "Microsoft Azure Command-Line Tools Feedback Command Module", "azure-cli-find": "Intelligent querying for CLI Example information.", "azure-cli-interactive": "Microsoft Azure Command-Line Interactive Shell", "azure-cli-iot": "Microsoft Azure Command-Line Tools IoT Command Module", "azure-cli-keyvault": "Microsoft Azure Command-Line Tools Keyvault Command Module", "azure-cli-lab": "Microsoft Azure Command-Line Tools DevTestLabs Command Module", "azure-cli-monitor": "Microsoft Azure Command-Line Tools Monitor Command Module", "azure-cli-network": "Microsoft Azure Command-Line Tools Network Command Module", "azure-cli-nspkg": "Microsoft Azure CLI Namespace Package", "azure-cli-profile": "Microsoft Azure Command-Line Tools Profile Command Module", "azure-cli-rdbms": "Microsoft Azure Command-Line Tools MySQL and PostgreSQL Command Module", "azure-cli-redis": "Microsoft Azure Command-Line Tools Redis Command Module", "azure-cli-resource": "Microsoft Azure Command-Line Tools Resource Command Module", "azure-cli-role": "Microsoft Azure Command-Line Tools Role Command Module", "azure-cli-sql": "Microsoft Azure Command-Line Tools SQL Command Module", "azure-cli-storage": "Microsoft Azure Command-Line Tools Storage Command Module", "azure-cli-telemetry": "Microsoft Azure CLI Telemetry Package", "azure-cli-vm": "Microsoft Azure Command-Line Tools VM Command Module", "azure-cognitiveservices-knowledge-nspkg": "Microsoft Azure Cognitive Services Knowledge Namespace Package [Internal]", "azure-cognitiveservices-language-nspkg": "Microsoft Azure Cognitive Services Language Namespace Package [Internal]", "azure-cognitiveservices-nspkg": "Microsoft Azure Cognitive Services Namespace Package [Internal]", "azure-cognitiveservices-search-nspkg": "Microsoft Azure Cognitive Services Search Namespace Package [Internal]", "azure-cognitiveservices-vision-nspkg": "Microsoft Azure Cognitive Services Vision Namespace Package [Internal]", "azure-common": "Microsoft Azure Client Library for Python (Common)", "azure-core": "Microsoft Azure Core Library for Python", "azure-cosmos": "Azure Cosmos Python SDK", "azure-cosmosdb-nspkg": "Microsoft Azure CosmosDB Namespace Package [Internal]", "azure-cosmosdb-table": "Microsoft Azure CosmosDB Table Client Library for Python", "azure-datalake-store": "Azure Data Lake Store Filesystem Client Library for Python", "azure-eventgrid": "Microsoft Azure Event Grid Client Library for Python", "azure-eventhub": "Microsoft Azure Event Hubs Client Library for Python", "azure-functions": "Azure Functions for Python", "azure-functions-worker": "Python Language Worker for Azure Functions Host", "azure-graphrbac": "Microsoft Azure Graph RBAC Client Library for Python", "azure-identity": "Microsoft Azure Identity Library for Python", "azure-keyvault": "Microsoft Azure Key Vault Client Libraries for Python", "azure-keyvault-secrets": "Microsoft Azure Key Vault Secrets Client Library for Python", "azure-kusto-data": "Kusto Data Client", "azure-loganalytics": "Microsoft Azure Log Analytics Client Library for Python", "azure-mgmt": "Microsoft Azure Resource Management Client Libraries for Python", "azure-mgmt-advisor": "Microsoft Azure Advisor Client Library for Python", "azure-mgmt-applicationinsights": "Microsoft Azure Application Insights Management Client Library for Python", "azure-mgmt-authorization": "Microsoft Azure Authorization Management Client Library for Python", "azure-mgmt-automation": "Microsoft Azure Automation Client Library for Python", "azure-mgmt-batch": "Microsoft Azure Batch Management Client Library for Python", "azure-mgmt-batchai": "Microsoft Azure Batch AI Management Client Library for Python", "azure-mgmt-billing": "Microsoft Azure Billing Client Library for Python", "azure-mgmt-botservice": "Microsoft Azure Bot Service Client Library for Python", "azure-mgmt-cdn": "Microsoft Azure CDN Management Client Library for Python", "azure-mgmt-cognitiveservices": "Microsoft Azure Cognitive Services Management Client Library for Python", "azure-mgmt-commerce": "Microsoft Azure Commerce Client Library for Python", "azure-mgmt-common": "Microsoft Azure Resource Management Client Library for Python (Common)", "azure-mgmt-compute": "Microsoft Azure Compute Management Client Library for Python", "azure-mgmt-consumption": "Microsoft Azure Consumption Client Library for Python", "azure-mgmt-containerinstance": "Microsoft Azure Container Instance Client Library for Python", "azure-mgmt-containerregistry": "Microsoft Azure Container Registry Client Library for Python", "azure-mgmt-containerservice": "Microsoft Azure Container Service Management Client Library for Python", "azure-mgmt-cosmosdb": "Microsoft Azure Cosmos DB Management Client Library for Python", "azure-mgmt-datafactory": "Microsoft Azure Data Factory Management Client Library for Python", "azure-mgmt-datalake-analytics": "Microsoft Azure Data Lake Analytics Management Client Library for Python", "azure-mgmt-datalake-nspkg": "Microsoft Azure Data Lake Management Namespace Package [Internal]", "azure-mgmt-datalake-store": "Microsoft Azure Data Lake Store Management Client Library for Python", "azure-mgmt-datamigration": "Microsoft Azure Data Migration Client Library for Python", "azure-mgmt-devspaces": "Microsoft Azure Dev Spaces Client Library for Python", "azure-mgmt-devtestlabs": "Microsoft Azure DevTestLabs Management Client Library for Python", "azure-mgmt-dns": "Microsoft Azure DNS Management Client Library for Python", "azure-mgmt-documentdb": "Microsoft Azure DocumentDB Management Client Library for Python", "azure-mgmt-eventgrid": "Microsoft Azure EventGrid Management Client Library for Python", "azure-mgmt-eventhub": "Microsoft Azure EventHub Management Client Library for Python", "azure-mgmt-hanaonazure": "Microsoft Azure SAP Hana on Azure Management Client Library for Python", "azure-mgmt-hdinsight": "Microsoft Azure HDInsight Management Client Library for Python", "azure-mgmt-iotcentral": "Microsoft Azure IoTCentral Management Client Library for Python", "azure-mgmt-iothub": "Microsoft Azure IoTHub Management Client Library for Python", "azure-mgmt-iothubprovisioningservices": "Microsoft Azure IoTHub Provisioning Services Client Library for Python", "azure-mgmt-keyvault": "Microsoft Azure Key Vault Management Client Library for Python", "azure-mgmt-loganalytics": "Microsoft Azure Log Analytics Management Client Library for Python", "azure-mgmt-logic": "Microsoft Azure Logic Apps Management Client Library for Python", "azure-mgmt-machinelearningcompute": "Microsoft Azure Machine Learning Compute Management Client Library for Python", "azure-mgmt-managementgroups": "Microsoft Azure Management Groups Client Library for Python", "azure-mgmt-managementpartner": "Microsoft Azure ManagementPartner Management Client Library for Python", "azure-mgmt-maps": "Microsoft Azure Maps Client Library for Python", "azure-mgmt-marketplaceordering": "Microsoft Azure Market Place Ordering Client Library for Python", "azure-mgmt-media": "Microsoft Azure Media Services Client Library for Python", "azure-mgmt-monitor": "Microsoft Azure Monitor Client Library for Python", "azure-mgmt-msi": "Microsoft Azure MSI Management Client Library for Python", "azure-mgmt-network": "Microsoft Azure Network Management Client Library for Python", "azure-mgmt-notificationhubs": "Microsoft Azure Notification Hubs Management Client Library for Python", "azure-mgmt-nspkg": "Microsoft Azure Resource Management Namespace Package [Internal]", "azure-mgmt-policyinsights": "Microsoft Azure Policy Insights Client Library for Python", "azure-mgmt-powerbiembedded": "Microsoft Azure Power BI Embedded Management Client Library for Python", "azure-mgmt-privatedns": "Microsoft Azure DNS Private Zones Client Library for Python", "azure-mgmt-rdbms": "Microsoft Azure RDBMS Management Client Library for Python", "azure-mgmt-recoveryservices": "Microsoft Azure Recovery Services Client Library for Python", "azure-mgmt-recoveryservicesbackup": "Microsoft Azure Recovery Services Backup Management Client Library for Python", "azure-mgmt-redis": "Microsoft Azure Redis Cache Management Client Library for Python", "azure-mgmt-relay": "Microsoft Azure Relay Client Library for Python", "azure-mgmt-reservations": "Microsoft Azure Reservations Client Library for Python", "azure-mgmt-resource": "Microsoft Azure Resource Management Client Library for Python", "azure-mgmt-scheduler": "Microsoft Azure Scheduler Management Client Library for Python", "azure-mgmt-search": "Microsoft Azure Search Management Client Library for Python", "azure-mgmt-servermanager": "Microsoft Azure Server Manager Management Client Library for Python", "azure-mgmt-servicebus": "Microsoft Azure Service Bus Management Client Library for Python", "azure-mgmt-servicefabric": "Microsoft Azure Service Fabric Management Client Library for Python", "azure-mgmt-signalr": "Microsoft Azure SignalR Client Library for Python", "azure-mgmt-sql": "Microsoft Azure SQL Management Client Library for Python", "azure-mgmt-storage": "Microsoft Azure Storage Management Client Library for Python", "azure-mgmt-subscription": "Microsoft Azure Subscription Management Client Library for Python", "azure-mgmt-trafficmanager": "Microsoft Azure Traffic Manager Client Library for Python", "azure-mgmt-web": "Microsoft Azure Web Apps Management Client Library for Python", "azure-multiapi-storage": "Microsoft Azure Storage Client Library for Python with multi API version support.", "azure-nspkg": "Microsoft Azure Namespace Package [Internal]", "azure-servicebus": "Microsoft Azure Service Bus Client Library for Python", "azure-servicefabric": "Microsoft Azure Service Fabric Client Library for Python", "azure-servicemanagement-legacy": "Microsoft Azure Legacy Service Management Client Library for Python", "azure-storage": "Microsoft Azure Storage Client Library for Python", "azure-storage-blob": "Microsoft Azure Blob Storage Client Library for Python", "azure-storage-common": "Microsoft Azure Storage Common Client Library for Python", "azure-storage-file": "Microsoft Azure Storage File Client Library for Python", "azure-storage-nspkg": "Microsoft Azure Storage Namespace Package [Internal]", "azure-storage-queue": "Microsoft Azure Azure Queue Storage Client Library for Python", "azureml-sdk": "Microsoft Azure Machine Learning Python SDK", "b3j0f.aop": "Python Aspect Oriented Programming", "b3j0f.utils": "Set of tools and utilities useful in python projects", "babel": "Internationalization utilities", "babeldjango": "Utilities for using Babel in Django", "babelfish": "A module to work with countries and languages", "back": "Backbone for PyTorch training loop", "backcall": "Specifications for callback functions passed in to an API", "backend": "Backend Utility Tools", "backends": "A generic interface for linear algebra backends", "background": "It does what it says it does.", "backlash": "Standalone WebOb port of the Werkzeug Debugger with Python3 support meant to replace WebError in future TurboGears2", "backoff": "Function decoration for backoff and retry", "backpack": "Useful utilities for Python.", "backports": "Namespace for backported Python features", "backports.csv": "Backport of Python 3 csv module", "backports.functools-lru-cache": "Backport of functools.lru_cache", "backports.lzma": "Backport of Python 3.3's 'lzma' module for XZ/LZMA compressed files.", "backports.os": "Backport of new features in Python's os module", "backports.shutil_get_terminal_size": "A backport of the get_terminal_size function from Python 3.3's shutil.", "backports.ssl": "The Python 3.4 standard `ssl` module API implemented on top of pyOpenSSL", "backports.ssl_match_hostname": "The ssl.match_hostname() function from Python 3.5", "backports.tempfile": "Backport of new features in Python's tempfile module", "backports.weakref": "Backport of new features in Python's weakref module", "backports_abc": "A backport of recent additions to the 'collections.abc' module.", "backtrace": "Makes tracebacks humanly readable", "backtrader": "BackTesting Engine", "bacman": "Easily take snapshots of Postgres and MySQL databases and upload to AWS S3.", "bacpypes": "BACnet Communications Library", "bagit": "Create and validate BagIt packages", "baidu-aip": "Baidu AIP SDK", "baker": "Easy, powerful access to Python functions from the command line", "balanced": "Payments platform for marketplaces", "banal": "Commons of banal micro-functions for Python.", "bandit": "Security oriented static analyser for python code.", "bar": "Configurable progress bars/status monitors for Python console applications.", "barenecessities": "Provides the ``bn`` module containing a dictionary allowing attribute access to values - I use it so much I've made into a package.", "baron": "Full Syntax Tree for python to make writing refactoring code a realist task", "bart": "UNKNOWN", "base": "this is a test package for packing python liberaries tutorial.", "base58": "Base58 and Base58Check implementation", "baselines": "OpenAI baselines: high quality implementations of reinforcement learning algorithms", "basemap": "Plot data on map projections with matplotlib", "baserip": "The alkali version of acidrip (ffmpeg based).", "bash": "Bash for Python", "bash_kernel": "A bash kernel for Jupyter", "bashate": "A pep8 equivalent for bash scripts", "bashlex": "Python parser for bash", "bashplotlib": "plotting in the terminal", "basicauth": "An incredibly simple HTTP basic auth implementation.", "basicmodem": "A basic modem implementation for receiving caller id.", "basicrpc": "A very simple Python RPC client", "basictracer": "", "basilica": "Client bindings for basilica.ai embeddings.", "basket-client": "A Python client for Mozilla's basket service.", "batinfo": "A simple Python module to retrieve battery information", "bayesian-optimization": "Bayesian Optimization package", "bazaar": "Agnostic file storage", "bb": "bitbucket simple CLI interface", "bbcode": "A pure python bbcode parser and formatter.", "bbqsql": "Rapid Blind SQL Injection Exploitation Tool", "bc": "A small example package", "bcbio-gff": "Read and write Generic Feature Format (GFF) with Biopython integration.", "bcbio-nextgen": "Best-practice pipelines for fully automated high throughput sequencing analysis", "bcbio_monitor": "bcbio-monitor is an extension of bcbio-nextgen to visualize its progress", "bcdoc": "ReST document generation tools for botocore.", "bcolz": "columnar and compressed data containers.", "bcrypt": "Modern password hashing for your software and your servers", "bd2k-python-lib": "The BD2K Python module kitchen sink", "bdmusic": "Baidu Music Download Helper", "be": "Minimal asset management system", "beaker": "A Session and Caching library with WSGI Middleware", "beakerx": "BeakerX: Beaker Extensions for Jupyter Notebook", "beanbag-docutils": "Sphinx utility modules for Beanbag's documentation format.", "beancount": "Command-line Double-Entry Accounting", "beanstalkc": "A simple beanstalkd client library", "beautifulsoup": "Screen-scraping library", "beautifulsoup4": "Screen-scraping library", "beautifultable": "Print ASCII tables for terminals", "beaver_sqs": "python daemon that munches on logs and sends their contents to logstash", "beefish": "simple file encryption using pycrypto", "beepboop": "Beep Boop client and Bot Manager", "beets": "music tagger and library organizer", "before_after": "before_after provides utilities for testing race conditions", "beginning": "Basic utils for Python.", "begins": "Command line programs for busy developers", "behave": "behave is behaviour-driven development, Python style", "behave-django": "Behave BDD integration for Django", "behaving": "Behavior-Driven-Development testing for multi-user web/mail/sms apps", "bellows": "Library implementing EZSP", "bellows-homeassistant": "Library implementing EZSP", "ben": "A simple prunter of nested lists", "bencode": "The BitTorrent bencode module as light-weight, standalone package.", "bencode.py": "Simple bencode parser (for Python 2, Python 3 and PyPy)", "bencodepy": "Bencode encoder/decoder written in Python 3 under the GPLv2.", "bernhard": "Python client for Riemann", "bernoulli": "A Python API for Bernoulli", "best": "Bayesian estimation supersedes the t-test", "betamax": "A VCR imitation for python-requests", "betamax-matchers": "A VCR imitation for python-requests", "betamax-serializers": "A set of third-party serializers for Betamax", "better": "Python builtins, just better.", "better-apidoc": "A version of sphinx-apidoc with support for templating", "better-exceptions": "Pretty and helpful exceptions, automatically", "better-exceptions-fork": "Pretty and helpful exceptions, automatically", "between": "Between of VCNC for Python", "beyond": "Flight Dynamic Library", "bf": "File interface library", "bg": "Implementation of Breakpoint Graph data structure", "bi": "bi", "biblion": "a Django blog app", "bibtexparser": "Bibtex parser for python 2.7 and 3.3 and newer", "bidict": "The bidirectional mapping library for Python.", "bigchaindb": "BigchainDB: The Blockchain Database", "bigchaindb-driver": "Python driver for BigchainDB", "biggus": "Virtual large arrays and lazy evaluation", "bigml": "An open source binding to BigML.io, the public BigML API", "bigquery-python": "Simple Python client for interacting with Google BigQuery.", "bigsuds": "Library for F5 Networks iControl API", "billiard": "Python multiprocessing fork with improvements and bugfixes", "billy": "scraping, storing, and sharing legislative information", "binaryornot": "Ultra-lightweight pure Python package to check if a file is binary or text.", "bincopy": "Mangling of various file formats that conveys binary information (Motorola S-Record, Intel HEX and binary files).", "binplist": "A binary plist parser", "binstar": "Binstar command line client library", "bintrees": "Package provides Binary-, RedBlack- and AVL-Trees in Python and Cython.", "binwalk": "Firmware analysis tool", "bioblend": "CloudMan and Galaxy API library", "biom-format": "Biological Observation Matrix (BIOM) format", "biopython": "Freely available tools for computational molecular biology.", "bioservices": "Access to Biological Web Services from Python", "biosppy": "A toolbox for biosignal processing written in Python.", "biplist": "biplist is a library for reading/writing binary plists.", "birdy": "birdy is a super awesome Twitter API client for Python.", "bison": "Python application configuration", "bit": "Bitcoin made easy.", "bit9-api": "Bit9 API for their Cyber Forensics Service", "bitarray": "efficient arrays of booleans -- C extension", "bitbucket-api": "Bitbucket API", "bitcoin": "Python Bitcoin Tools", "bitcoin-python": "Friendly Bitcoin JSON-RPC API binding for Python", "bitcointools": "Python Bitcoin Tools", "bitly_api": "An API for bit.ly", "bitlyapi": "A thin wrapper for the bit.ly REST API", "bitmath": "Pythonic module for representing and manipulating file sizes with different prefix notations (file size unit conversion)", "bitmerchant": "Bitcoin/altcoin merchant tools", "bitshares": "Python library for bitshares", "bitstring": "Simple construction, analysis and modification of binary data.", "bitstruct": "This module performs conversions between Python values and C bit field structs represented as Python byte strings.", "bizkaibus": "Online information for buses of Biscay bus services (Basque Country, Spain).", "bjoern": "A screamingly fast Python 2 + 3 WSGI server written in C.", "bkcharts": "High level chart types built on top of Bokeh", "black": "The uncompromising code formatter.", "blaze": "Blaze", "bleach": "An easy safelist-based HTML-sanitizing tool.", "bleach-whitelist": "Curated lists of tags and attributes for sanitizing html", "blessed": "Easy, practical library for making terminal apps, by providing an elegant, well-documented interface to Colors, Keyboard input, and screen Positioning capabilities.", "blessings": "A thin, practical wrapper around terminal coloring, styling, and positioning", "blinker": "Fast, simple object-to-object and broadcast signaling", "blinkpy": "A Blink camera Python library running on Python 3.", "blinkstick": "Python package to control BlinkStick USB devices.", "blinkt": "Python library for driving Pimoroni Blinkt!", "blis": "The Blis BLAS-like linear algebra library, as a self-contained C-extension.", "blist": "a list-like type with better asymptotic performance and similar performance on small lists", "blitzdb": "A document-oriented database written purely in Python.", "blockcanvas": "visual environment for creating simulation experiments", "blockchain": "Blockchain API library (v1)", "blockcypher": "BlockCypher Python Library", "blockdiag": "blockdiag generates block-diagram image from text", "blocks": "Conversion tools for block devices", "blockstack": "Name registrations on the Bitcoin blockchain with external storage", "blockstack-client": "Python client library for Blockstack", "blockstack-file": "Blockstack encrypted file sharing", "blockstack-gpg": "GPG integration for Blockstack client applications", "blockstack-profiles": "Library for blockstack profile generation and validation", "blockstack-proofs": "Python library for verifying proofs (twitter, github, domains etc) linked to a blockchain ID", "blockstack-storage-drivers": "Back-end storage drivers for Blockstack", "blockstack-utxo": "Python library for interacting with various UTXO providers", "blockstack-zones": "Library for creating and parsing DNS zone files", "blockstore": "Name registrations on the Bitcoin blockchain with external storage", "blockstore-client": "Python client library for Blockstore", "blosc": "Blosc data compressor", "bloscpack": "Command line interface to and serialization format for Blosc", "blueprint": "reverse engineer server configuration", "bluesky": "", "blurb": "Command-line tool to manage CPython Misc/NEWS.d entries.", "blz": "blz: a compressed data container", "bm": "Simple command line bookmark and/or tagging utility.", "bnclient": "Blade Network Technologies Netconf Python Client", "bo": "A simple, multi-protocol, extendable and embeddable chatbot", "bob": "Bob is a free signal-processing and machine learning toolbox originally developed by the Biometrics group at Idiap Research Institute, in Switzerland.", "bob-ajax-selects": "jQuery-powered auto-complete fields for editing ForeignKey, ManyToManyField and CharField", "bob-builder": "Binary Build Toolkit.", "bob.ap": "Bob's audio processing utilities", "bob.bio.base": "Tools for running biometric recognition experiments", "bob.blitz": "Bindings for Blitz++ (a C++ array template library)", "bob.core": "Core utilities required on all Bob modules", "bob.db.atnt": "ATNT/ORL Database Access API for Bob", "bob.db.base": "Basic Database Frontend API for Bob", "bob.db.iris": "Bob access API for Fisher's Iris Flower Dataset", "bob.db.mnist": "MNIST Database Access API for Bob", "bob.db.mobio": "MOBIO Database Access API for Bob", "bob.db.verification.filelist": "Verification File List Database Access API for Bob", "bob.db.verification.utils": "Utilities for bob.db verification databases", "bob.db.wine": "Wine Database for bob", "bob.extension": "Building of Python/C++ extensions for Bob", "bob.io.audio": "Audio I/O support for Bob", "bob.io.base": "Basic IO for Bob", "bob.io.image": "Image I/O support for Bob", "bob.io.matlab": "Handling of Matlab(R) files via bob.io.base", "bob.io.video": "Video I/O support for Bob", "bob.ip.base": "Basic Image Processing Utilities for Bob", "bob.ip.color": "Color Conversion Utilities of Bob", "bob.ip.draw": "Line and Box drawing utilities of Bob", "bob.ip.facedetect": "Face detection using boosted LBP features", "bob.ip.flandmark": "Flandmark keypoint localization library", "bob.ip.gabor": "Gabor wavelet analysis tools for Bob", "bob.ip.optflow.hornschunck": "Optical Flow framework based on Horn & Schunck", "bob.ip.optflow.liu": "Ce Liu's Optical Flow Framework for Bob", "bob.learn.activation": "Bindings for Activation functors", "bob.learn.boosting": "Boosting framework for Bob", "bob.learn.em": "Bindings for EM machines and trainers of Bob", "bob.learn.libsvm": "Python bindings to LIBSVM for Bob", "bob.learn.linear": "Linear Machine and Trainers for Bob", "bob.learn.mlp": "Multi-layer Perceptron and Trainers for Bob", "bob.math": "Mathematical functions of Bob", "bob.measure": "Evaluation metrics for Bob", "bob.sp": "Core signal processing utilities for Bob", "bobo": "Web application framework for the impatient", "boilerpipe": "Python interface to Boilerpipe, Boilerplate Removal and Fulltext Extraction from HTML pages", "bok-choy": "UI-level acceptance test framework", "bokeh": "Interactive plots and applications in the browser from Python", "bolacha": "Bolacha is a simple http client that allows you testing http requests, handling cookies and file upload.", "boltons": "When they're not builtins, they're boltons.", "bomradarloop": "Create animated GIFs from BOM radar imagery", "bondpy": "A Python library for the BOND API with Python 3+", "bonobo": "Bonobo, a simple, modern and atomic extract-transform-load toolkit for python 3.5+.", "bookmarkd": "Convert between IPython notebooks and markdown", "booleanoperations": "Boolean operations on paths.", "boom": "Simple HTTP Load tester", "boost": "Boost automatically toots from Mastodon users", "bootstrap": "", "bootstrap-admin": "Responsive Theme for Django Admin With Sidebar Menu (Django 1.11)", "bootstrap-flask": "Bootstrap helper for Flask/Jinja2.", "bootstrap-modeltranslation": "Tabbable translation fields for django-admin-bootstrapped and django-modeltranslation", "bootstrap3-datetime": "Bootstrap3 compatible datetimepicker for Django projects.", "bootstrap4": "Bootstrap 4, packaged for Python.", "bootstrap_admin_legacy": "Bootstrap theme for Django admin", "borg.localrole": "A PAS plugin which can manage local roles via an adapter lookup on the current context", "borgmatic": "Simple, configuration-driven backup software for servers and workstations", "both": "Python compatibility layer", "boto": "Amazon Web Services Library", "boto3": "The AWS SDK for Python", "botocore": "Low-level, data-driven core of boto 3.", "bottle": "Fast and simple WSGI-framework for small web-applications.", "bottle-auth": "Bootle authentication, for Personal, Google, Twitter and facebook.", "bottle-beaker": "Bottle plugin beaker, WSGI middleware for sessions and caching", "bottle-cork": "Authentication/Authorization library for Bottle", "bottle-haml": "UNKNOWN", "bottle-mongo": "MongoDB integration for Bottle", "bottle-sqlalchemy": "SQLAlchemy integration for Bottle.", "bottle-sqlite": "SQLite3 integration for Bottle.", "bottle-websocket": "WebSockets for bottle", "bottlechest": "Fast NumPy array functions written in Cython", "bottleneck": "Fast NumPy array functions written in C", "bottlenose": "A Python hook into the Amazon.com Product Advertising API", "box.py": "Python client for Box", "box2d": "Python Box2D", "box2d-kengz": "Python Box2D", "box2d-py": "Python Box2D", "boxsdk": "Official Box Python SDK", "bpemb": "Byte-pair embeddings in 275 languages", "bpython": "Fancy Interface to the Python Interpreter", "bqplot": "Interactive plotting for the Jupyter notebook, using d3.js and ipywidgets.", "br": "batch rename", "braceexpand": "Bash-style brace expansion for Python", "brackets": "Use curly braces instead of indenting, plus much more sugar added to Python's syntax.", "braintree": "Braintree Python Library", "branca": "Generate complex HTML+JS pages with Python", "bravado": "Library for accessing Swagger-enabled API's", "bravado-core": "Library for adding Swagger support to clients and servers", "braviarc-homeassistant": "# BraviaRC Python Package", "breadability": "Port of Readability HTML parser in Python", "breathe": "Sphinx Doxygen renderer", "bresenham": "An implementation of Bresenham's line drawing algorithm", "brevity": "Tweet shortening and autolinking utility", "brewblox-service": "Scaffolding for BrewBlox backend services", "brewer2mpl": "Connect colorbrewer2.org color maps to Python and matplotlib", "brewery": "Framework for analysing data and measuring quality of data using structured data streams", "brian2": "A clock-driven simulator for spiking neural networks", "brief": "Text Summarizer", "brightway2": "", "broadcast": "A Python Package which can be used to BroadCast email .", "broadlink": "Python API for controlling Broadlink IR controllers", "broken": "The broken Python data structure", "brother-ql": "Python package to talk to Brother QL label printers", "brotli": "Python bindings for the Brotli compression library", "brotlipy": "Python binding to the Brotli library", "brottsplatskartan": "Simple API wrapper to brottsplatskartan.se.", "brownie": "Common utilities and datastructures for Python applications.", "browsermob-proxy": "A library for interacting with the Browsermob Proxy", "bruno": "Bruno Rocha Utilities, Magics and Gambiarras", "brunt": "Unofficial API for Brunt", "bs": "", "bs4": "Dummy package for Beautiful Soup", "bsddb3": "Python bindings for Oracle Berkeley DB", "bsdiff4": "binary diff and patch using the BSDIFF4-format", "bsdploy": "A tool to remotely provision, configure and maintain FreeBSD jails", "bsnstacklib": "Big Switch Networks Plugins for OpenStack Networking", "bson": "BSON codec for Python", "bt": "A flexible backtesting framework for Python", "btchip-python": "Python library to communicate with Ledger Nano dongle", "btctxstore": "Library to read/write data to bitcoin transaction outputs.", "bthomehub5-devicelist": "A library that returns a list of devices currently connected to a BT Home Hub 5", "btrees": "Scalable persistent object containers", "bugsnag": "Automatic error monitoring for django, flask, etc.", "bugsy": "A library for interacting Bugzilla Native REST API", "bugzilla": "A client library for Bugzilla", "buienradar": "Library and CLI tools for interacting with buienradar.", "build": "A tiny base class for fluent builders", "build_commands": "build_commands", "buildbot": "The Continuous Integration Framework", "buildbot-console-view": "Buildbot Console View plugin", "buildbot-slave": "BuildBot Slave Daemon", "buildbot-waterfall-view": "Buildbot Waterfall View plugin", "buildbot-worker": "Buildbot Worker Daemon", "buildbot-www": "Buildbot UI", "builders": "Lightweight test data generation framework", "buildozer": "Generic Python packager for Android / iOS and Desktop", "buildutils": "Distutils extensions for developing Python libraries and applications.", "builtwith": "Detect the technology used by a website, such as Apache, JQuery, and Wordpress.", "bump2version": "Version-bump your software with a single command!", "bumplus": "Bump the version in the project files.", "bumpr": "Version bumper and Python package releaser", "bumpversion": "Version-bump your software with a single command!", "bunch": "A dot-accessible dictionary (a la JavaScript objects)", "bundle": "Create and manage bundle packages.", "bundletester": "A juju charm and bundle test runner", "bunny": "Hop around the experiment space", "bushy": "A git workflow plugin.", "button": "Tiny automation tool written by Python", "buttonshim": "Button SHIM Driver", "bw": "A fast backtest framework", "bw2speedups": "Cython functions to speed up Brightway2 LCA calculations", "bwb": "bwb", "bx-python": "Tools for manipulating biological data, particularly multiple sequence alignments", "byte": "Modular data-model framework, and object-relational mapper", "bytecode": "Python module to generate and modify bytecode", "bytecodeassembler": "Generate Python code objects by \"assembling\" bytecode (Now includes a functional/AST-oriented API, too!)", "byteformat": "Generate human-readable representations of numbers of bytes.", "byteplay3": "bytecode manipulation (byteplay) library for Python 3", "bytes": "Bytes: Serialization and deserialization utilities.", "bz2file": "Read and write bzip2-compressed files.", "bzr": "Friendly distributed version control system", "c2.patch.jashortname": "This product is patching for Japanese shortname for Plone files", "c7n": "Cloud Custodian - Policy Rules Engine", "c7n-org": "Cloud Custodian - Multi Account", "ca": "", "cache": "caching for humans", "cachecontrol": "httplib2 caching for requests", "cached": "cached(function) - cache function", "cached-property": "A decorator for caching properties in classes.", "cachetools": "Extensible memoizing collections and decorators", "caching": "Python utils and decorators for c\u0430ching with TTL, maxsize and file-based storage.", "cairocffi": "cffi-based cairo bindings for Python", "cairosvg": "A Simple SVG Converter based on Cairo", "caktus-sphinx-theme": "Custom Sphinx theme for projects written and maintained by Caktus Consulting Group.", "calculate": "a calculator", "caldav": "CalDAV (RFC4791) client library", "call": "Pure-python reimplementation of python call semantics", "camelcase": "Converts a string to Camel Case", "canari": "Canari Framework - Maltego rapid transform development and execution framework.", "candv": "Constants and Values: create grouped non-standard named constants, add values, verbose names, help texts or anything you like to them", "caniusepython3": "Determine what projects are blocking you from porting to Python 3", "canonicalize": "canonicalize a cluster of records", "canopy": "Python Client for the Canopy Simulation API", "cant": "Can't Remember!", "cap1xxx": "A module to drive various Microchip cap1xxx touch ICs", "capa": "Librairie Capa", "capacity": "Data types to describe capacity", "capnpy": "", "capstone": "Capstone disassembly engine", "captcha": "A captcha library that generates audio and image CAPTCHAs.", "capturer": "Easily capture stdout/stderr of the current process and subprocesses", "carbon": "Backend data caching and persistence daemon for Graphite", "care": "Made with care", "carrot": "AMQP Messaging Framework for Python", "cart": "CaRT Neutering format", "cartodb": "client to access cartodb api", "cartopy": "A cartographic python library with Matplotlib support for visualisation", "cartridge": "A Django shopping cart application.", "case": "Python unittest Utilities", "cases": "Test cases generation tool", "cassandra-driver": "DataStax Driver for Apache Cassandra", "casscache": "Casscache is a python-memcached compatible API for interfacing with Cassandra", "castellan": "Generic Key Manager interface for OpenStack", "castle.theme": "CastleCMS Theme Package", "casuarius": "Cython bindings for the Cassowary constraint solver.", "cat": "Treat your Python objects to a thought experiment from 1935", "catalogue": "Super lightweight function registries for your library", "catalyst": "Catalyst. High-level utils for PyTorch DL & RL research.", "catboost": "Catboost Python Package", "categorical-distance": "Compare two categorical variables", "category-encoders": "A collection sklearn transformers to encode categorical variables as numeric", "catkin": "Low-level build system macros and infrastructure for ROS.", "catkin-pkg": "catkin package library", "cattle": "Python API and CLI for Cattle", "cattrs": "Composable complex class support for attrs.", "catwalk": "A way to view your models using TurboGears", "cbapi": "Carbon Black REST API Python Bindings", "cbor": "RFC 7049 - Concise Binary Object Representation", "cbor2": "Pure Python CBOR (de)serializer with extensive tag support", "cc": "UNKNOWN", "ccdproc": "Astropy affiliated package", "cchardet": "cChardet is high speed universal character encoding detector.", "ccm": "Cassandra Cluster Manager", "ccnmtlsettings": "CCNMTL common Django base settings", "ccxt": "A JavaScript / Python / PHP cryptocurrency trading library with support for 130+ exchanges", "cd": "A simple printer of nester lists", "cdecimal": "Fast drop-in replacement for decimal.py", "cef": "Module that emits CEF logs", "ceilometermiddleware": "OpenStack Telemetry middleware for generating metrics", "celementtree": "A fast C implementation of the ElementTree API.", "celery": "Distributed Task Queue.", "celery-haystack": "An app for integrating Celery with Haystack.", "celery-redbeat": "A Celery Beat Scheduler using Redis for persistent storage", "celery-tasktree": "Celery Tasktree module", "celery-with-mongodb": "Bundle installing the dependencies for Celery and MongoDB", "celery-with-redis": "Bundle installing the dependencies for Celery and Redis", "celerybeat-mongo": "A Celery Beat Scheduler that uses MongoDB to store both schedule definitions and status information", "celerymon": "Real-time monitoring of Celery workers.", "cement": "Application Framework for Python", "census": "A wrapper for the US Census Bureau's API", "censys": "Python library for interacting with Censys Search Engine (censys.io)", "centrosome": "An open source image processing library", "ceph-deploy": "Deploy Ceph with minimal infrastructure", "cerberus": "Lightweight, extensible schema and data validation tool for Python dictionaries.", "certauth": "Simple Certificate Authority for MITM proxies", "certbot": "ACME client", "certbot-apache": "Apache plugin for Certbot", "certbot-nginx": "Nginx plugin for Certbot", "certifi": "Python package for providing Mozilla's CA Bundle.", "certstream": "CertStream is a library for receiving certificate transparency list updates in real time.", "cf": "A command line client to Rackspace Cloud Files", "cfe": "Coding For Entrepreneurs // Command Line Interface", "cfenv": "Python wrapper for Cloud Foundry environments", "cffi": "Foreign Function Interface for Python calling C code.", "cfgv": "Validate configuration and produce human readable error messages.", "cfn-flip": "Convert AWS CloudFormation templates between JSON and YAML formats", "cfn-lint": "checks cloudformation for practices and behaviour         that could potentially be improved", "cfn-response": "cfn-response is a micro package which exposes some\n    helpers to talk with CloudFormation from within python Lambda functions.\n    This package is intentionally small in order to be embedded lambda functions.\n    If you are looking to create aws-lambda backed Custom CloudFormation\n    resources using python, you are going to need this.", "cfscrape": "A simple Python module to bypass Cloudflare's anti-bot page. See https://github.com/Anorov/cloudflare-scrape for more information.", "cftime": "Time-handling functionality from netcdf4-python", "cg": "Clinical Genomics command center.", "cgcloud-spark": "Setup and manage a Apache Spark cluster in EC2", "cgen": "C/C++ source generation from an AST", "cgroupspy": "Python library for managing cgroups", "ch": "utils", "chaco": "interactive 2-dimensional plotting", "chai": "Easy to use mocking, stubbing and spying framework.", "chainer": "A flexible framework of neural networks", "chainercv": "", "chainmap": "Backport/clone of ChainMap for py26, py32, and pypy3.", "chalice": "Microframework", "chameleon": "Fast HTML/XML Template Compiler.", "chameleon.genshi": "Genshi template engine based on Chameleon", "chan": "Chan for Python, lovingly stolen from Go", "change": "", "changelog": "Provides simple Sphinx markup to render changelog displays.", "changes": "Generates a github changelog, tags and uploads your python library", "chanjo": "Coverage analysis tool for clinical sequencing", "channels": "Brings async, event-driven capabilities to Django. Django 2.2 and up only.", "channels-redis": "Redis-backed ASGI channel layer implementation", "chaostoolkit": "Chaos Engineering Toolkit", "chaostoolkit-lib": "Chaos engineering toolkit core library", "chapter1": "A simple printer of nested lists", "characteristic": "Python attributes without boilerplate.", "characters": "Tools for manipulating characters, strings, and character sets.", "charade": "Universal encoding detector for python 2 and 3", "chardet": "Universal encoding detector for Python 2 and 3", "chardet2": "Character encoding auto-detection in Python 3", "charm-tools": "Tools for building and maintaining Juju charms", "charmhelpers": "Helpers for Juju Charm development", "charms.reactive": "Framework for writing reactive-style Juju Charms", "charset": "Clases for charset detection. Uses chardet and mozilla universal charset detection.", "chart": "chart", "chart-studio": "Utilities for interfacing with plotly's Chart Studio", "chartkick": "Create beautiful Javascript charts with minimal code", "charts": "Use the highcharts js library in Python", "chatterbot": "", "chatterbot-corpus": "", "chaussette": "A WSGI Server for Circus", "chaversine": "Fast haversine calculation", "check": "Check your server like a boss.", "check-manifest": "Check MANIFEST.in in a Python source package for completeness", "check50": "This is check50, with which you can check solutions to problems for CS50.", "checkbox-ng": "Checkbox - Command Line Test Runner", "checkbox-support": "CheckBox support library", "checks": "Easy and clean way to add conditions to function arguments", "checksumdir": "Compute a single hash of the file contents of a directory.", "cheetah": "Cheetah is a template engine and code generation tool.", "cheetah3": "Cheetah is a template engine and code generation tool", "cheroot": "Highly-optimized, pure-python HTTP server", "cherrypy": "Object-Oriented HTTP framework", "chest": "Simple on-disk dictionary", "chevron": "Mustache templating language renderer", "chief-james": "UNKNOWN", "chirp": "Analyze and compare bioacoustic recordings", "chkcrontab": "A tool to detect crontab errors", "chmod": "chmod", "choice": "Easy request and response GUI for Python", "chrisapp": "(Python) Base module for Chris plugin apps", "chroma": "Color handling made simple.", "chromedriver": "Tool for downloading chromedriver", "chromedriver-binary": "Installer for chromedriver.", "chromedriver_installer": "Chromedriver Installer", "chromelogger": "Python library for logging data to Google Chrome console.", "chrono": "A (BSD licensed) context manager for timing execution.", "chronos-python": "A Python client libary for the Chronos Job Scheduler.", "chumpy": "chumpy", "ci": "Easily run common CI tasks for Python builds.", "cioppino.twothumbs": "Rating widget based on thumbs up and down.", "circle": "UNKNOWN", "circuitbreaker": "Python Circuit Breaker pattern implementation", "circuits": "Asynchronous Component based Event Application Framework", "circus": "Circus is a program that will let you run and watch  multiple processes and sockets.", "circus-web": "Circus Web Dashboard", "ciscoconfparse": "Parse, Audit, Query, Build, and Modify Cisco IOS-style configurations", "ciscomobilityexpress": "Module to interact with Cisco Mobility Express APIs to fetch connected devices.", "ciscosparkapi": "Simple, lightweight, scalable Python API wrapper for the Cisco Spark APIs", "ciso8601": "Fast ISO8601 date time parser for Python written in C", "citeproc-py": "Citations and bibliography formatter", "citeproc-py-styles": "CSL styles.", "citipy": "Look for nearest city with geo coordinates.", "ckan": "CKAN Software", "ckanapi": "A command line interface and Python module for accessing the CKAN Action API", "ckanclient": "Python client for the CKAN API.", "ckanserviceprovider": "A library for making web services that make functions available as synchronous or asynchronous jobs", "ckantoolkit": "", "ckcc-protocol": "Communicate with your Coldcard using Python", "cl": "Kombu actor framework", "clamd": "Clamd is a python interface to Clamd (Clamav daemon).", "clan": "A command line utility for working with Google Analytics.", "clang": "", "clarifai": "Clarifai API Python Client", "claripy": "An abstraction layer for constraint solvers", "class": "A simple class!", "classes": "Smart, pythonic, ad-hoc, typed polymorphism for Python", "classified": "Classified data scanner", "clastic": "A functional Python web framework that streamlines explicit development practices while eliminating global state.", "cld2-cffi": "CFFI bindings around Google Chromium's embedded compact language detection library (CLD2)", "cldfbench": "Python library implementing a CLDF workbench", "cldfcatalog": "Python library to access CLDF reference catalogs", "cle": "CLE Loads Everything (at least, many binary formats!) and provides a pythonic interface to analyze what they are and what they would look like in memory.", "cleancat": "Validation library for Python designed to be used with JSON REST frameworks", "clearbit": "Clearbit python bindings", "clearly": "Simple and accurate real-time monitor for celery", "clearpasspy": "ClearPass API Python Library", "cleo": "Cleo allows you to create beautiful and testable command-line interfaces.", "cleverbot": "An unofficial library to access the Cleverbot service", "clevercss": "funky css preprocessor dammit", "cleverwrap": "A wrapper for the official cleverbot.com API", "cli-helpers": "Helpers for building command-line apps", "click": "Composable command line interface toolkit", "click-completion": "Fish, Bash, Zsh and PowerShell completion for Click", "click-datetime": "Datetime type support for click.", "click-default-group": "Extends click.Group to invoke a command without explicit subcommand name", "click-didyoumean": "Enable git-like did-you-mean feature in click.", "click-help-colors": "Colorization of help messages in Click", "click-log": "Logging integration for Click", "click-plugins": "An extension module for click to enable registering CLI commands via setuptools entry-points.", "click-spinner": "Spinner for Click", "clickclick": "Click utility functions", "clicking": "Convenience function for Click.", "clicrud": "Brocade CLI CRUD Operations Library.", "client": "A Python package - client", "clients": "HTTP for humanitarians.", "cliff": "Command Line Interface Formulation Framework", "cliff-tablib": "tablib formatters for cliff", "cligj": "Click params for commmand line interfaces to GeoJSON", "clik": "A tool for writing complex command-line interfaces with minimal boilerplate and bookkeeping.", "climate": "Command line arguments parsing", "clint": "Python Command Line Interface Tools", "clipboard": "A cross platform clipboard operation library of Python. Works for Windows, Mac and Linux.", "clize": "Turn functions into command-line interfaces", "clldutils": "Utilities for clld apps", "clock": "A minimalist datetime library for Python", "clonedigger": "Clone Digger aimed to detect similar code in Python and Java programs.", "closure": "Closure compiler packaged for Python", "cloud": "PiCloud client-side library", "cloud_sptheme": "a nice sphinx theme named 'Cloud', and some related extensions", "cloudant": "Cloudant / CouchDB Client Library", "cloudaux": "Cloud Auxiliary is a python wrapper and orchestration module for interacting with cloud providers", "cloudera-director-python-client": "Cloudera Altus Director API", "cloudflare": "Python wrapper for the Cloudflare v4 API", "cloudformation": "Tools for creating CloudFormation templates.", "cloudify": "Cloudify's Command Line Interface", "cloudify-dsl-parser": "Cloudify DSL parser", "cloudify-plugins-common": "Contains necessary decorators and utility methods for writing Cloudify plugins", "cloudify-rest-client": "Cloudify REST client", "cloudify-script-plugin": "Plugin for running scripts", "cloudinary": "Python and Django SDK for Cloudinary", "cloudlib": "general purpose library for in application use", "cloudpickle": "Extended pickling support for Python objects", "cloudshell-automation-api": "QualiSystems CloudShell API package", "cloudshell-cli": "QualiSystems CloudShell CLI support package", "cloudshell-core": "Core package for CloudShell Python orchestration and automation. This package contains commoncode for CloudShell packages, including logging, basic interfaces and other utilities", "cloudshell-cp-vcenter": "This Shell enables setting up vCenter as a cloud provider in CloudShell. It supports connectivity, and adds new deployment types for apps which can be used in CloudShell sandboxes.", "cloudshell-networking-devices": "QualiSystems Python package", "cloudshell-shell-core": "Core package for all CloudShell Shells. This package contains the basic driver interfaces and metadata definitions as well as utilities and helpers created specifically for Shells", "cloudstack": "CloudStack API v2.2 Client", "cloudtask": "Parallel batch execution with auto-launched cloud servers", "cltk": "NLP for the ancient world", "cluster": "", "clustershell": "ClusterShell library and tools", "clx-sdk-xms": "Library for CLX Communications HTTP REST Messaging API", "clyent": "Command line client Library for windwos and posix", "cm": "Commandline Magic", "cma": "CMA-ES, Covariance Matrix Adaptation Evolution Strategy for non-linear numerical optimization in Python", "cmake": "CMake is an open-source, cross-platform family of tools designed to build, test and package software", "cmakelint": "Static code checker for CMake files", "cmarkgfm": "Minimal bindings to GitHub's fork of cmark", "cmd2": "cmd2 - quickly build feature-rich and user-friendly interactive command line applications in Python", "cmdln": "An improved cmd.py for writing multi-command scripts and shells.", "cmocean": "Colormaps for Oceanography", "cms": "Eraple CMS (Content Management System)", "cmsplugin-blog": "This is a blog app/plugin for django-cms 2.2", "cmsplugin-contact": "Extendable contact form plugin for Django CMS with spam protection and i18n", "cmsplugin-filer": "django-cms plugins for django-filer", "cmuclmtk": "Wrapper library for accessing the language model tools for CMU Sphinx (CMUCLMTK).", "cn": "algorhythms", "cntk": "CNTK is an open-source, commercial-grade deep learning framework.", "cnvkit": "Copy number variation toolkit for high-throughput sequencing.", "co": "Python library for making and tracking mutated copies of DNA components", "co2signal": "A package to access the co2signal API", "coala": "Linting and Fixing Code for All Languages", "coala-bears": "Bears for coala (Code Analysis Application)", "coala_utils": "A collection of coala utilities.", "coards": "A parser for COADS-compliant dates", "cobra": "COBRApy is a package for constraints-based modeling of biological networks", "cocaine-cli": "Cocaine Cloud Management Tool.", "cocos2d": "a 2D framework for games and multimedia", "codacy-coverage": "Codacy coverage reporter for Python", "code-annotations": "Extensible tools for parsing annotations in codebases", "codeclimate-test-reporter": "Report test coverage to Code Climate", "codecov": "Hosted coverage reports for Github, Bitbucket and Gitlab", "codegen": "Extension to ast that allow ast -> python code generation.", "codeintel": "Komodo Edit CodeIntel", "codepy": "Generate and execute native code at run time.", "codernitydb": "Pure python, fast, schema-less, NoSQL database", "codespell": "Codespell", "codetools": "code analysis and execution tools", "coffeehouse": "Official CoffeeHouse API Wrapper for Python", "coffeescript": "A bridge to the JS CoffeeScript compiler", "coffin": "Jinja2 adapter for Django", "cogapp": "Cog: A content generator for executing Python snippets in source files.", "cogent": "COmparative GENomics Toolkit", "coil": "A user-friendly CMS frontend for Nikola.", "coinbase": "Coinbase API client library", "coincurve": "Cross-platform Python CFFI bindings for libsecp256k1", "coinkit": "Tools for Bitcoin & other cryptocurrencies (incl. Namecoin, Litecoin, Dogecoin, etc.).", "coinmarketcap": "Python wrapper around the coinmarketcap.com API.", "coinor.pulp": "This is a package that wraps pulp and imports it into the namespace\npackage coinor.", "colander": "A simple schema-based serialization and deserialization library", "colanderalchemy": "Autogenerate Colander schemas based on SQLAlchemy models.", "collectfast": "A Faster Collectstatic", "collective": "The core for the Masonite framework", "collective.anysurfer": "Anysurfer (Belgian accessibility standard) support for Plone", "collective.autopermission": "Create permissions in Zope 2 on demand when a <permission /> directive is used", "collective.celery": "Celery for Plone", "collective.checkdocs": "Distutils command to view and validate restructured text in package's long_description", "collective.checktranslated": "This products make a table with all your content and their translation.", "collective.ckeditor": "CKEditor for Plone", "collective.codemirror": "Integrate codemirror with Zope.", "collective.collage.easyslider": "Collage view for content slide.", "collective.collage.portlets": "Add-on that allows displaying portlets inside a collage.", "collective.contact.widget": "Contact widget", "collective.contemplate": "Add content from existing content templates", "collective.contentrules.template": "A Plone content rule for creating content based on templates", "collective.contentstats": "A configlet for Plone showing some content statistics (type/state)", "collective.cover": "A sane, working, editor-friendly way of creating front pages and other composite pages. Working now, for mere mortals.", "collective.dexteritytextindexer": "Dynamic SearchableText index for dexterity content types", "collective.documentviewer": "Document cloud's document viewer integration into plone.", "collective.easyslider": "The product will allow you to apply an easyslider to any page with the ability to create each slide using a WYSIWYG editor. It also provides a slider view for Folders and Collections.", "collective.elasticsearch": "elasticsearch integration with plone", "collective.elephantvocabulary": "type of zope vocabularies that dont \"forget\", like                    elephants", "collective.galleriffic": "Galleriffic integration into Plone", "collective.gallery": "Base gallery for plone with external services support", "collective.geo.contentlocations": "geo reference for plone contents", "collective.geo.geographer": "Geographic annotation for Plone", "collective.geo.kml": "Kml view for collective.geo", "collective.geo.mapwidget": "collective.geo mapwidget", "collective.geo.openlayers": "openlayers support for Plone", "collective.geo.settings": "collective.geo settings", "collective.indexing": "Abstract framework for queueing, optimizing and dispatching index operations for Plone content.", "collective.js.bootstrap": "Get twitter bootstrap as browser resources", "collective.js.colorpicker": "UNKNOWN", "collective.js.datatables": "Plone Integration of jquery.dataTables plugin", "collective.js.fullcalendar": "Plone package for integrating fullcalendar JS", "collective.js.galleria": "UNKNOWN", "collective.js.jqueryui": "JQueryUI ready for Plone", "collective.js.showmore": "JS add-on to show/hide parts of a page.", "collective.jsonmigrator": "JSON based migrations for Plone", "collective.languagemovefolders": "Move Into Language Folder", "collective.linguafaq": "A simple multilanguage faq", "collective.logbook": "Advanced Persistent Error Log", "collective.mediaelementjs": "A simple integration of the MediaElementJS video player for Plone.", "collective.monkeypatcher": "Support for applying monkey patches late in the startup cycle by using ZCML configuration actions", "collective.nitf": "A content type inspired on the IPTC's News Industry Text Format specification.", "collective.plonefinder": "A finder to search/select portal objects for Plone", "collective.plonetruegallery": "A gallery/slideshow product for Plone that can aggregate from Picasa (add collective.ptg.flickr) and Flickr (add collective.ptg.flickr) or use Plone images.", "collective.polls": "A content type, workflow, and portlet for conducting online polls, for anonymous and logged-in users.", "collective.portlet.explore": "A navigation portlet", "collective.portlet.videoanysurfer": "Portlet to display video compliant with anysurfer", "collective.prettydate": "Represents a date on a relative format so, instead of '01/02/2012', it would be displayed as '4 hours ago', 'yesterday' or 'last week', which is easier to read and understand for most people.", "collective.progressbar": "HTML and Javascript progress bar for Plone", "collective.quickupload": "Pure javascript files upload tool for Plone, with drag and drop, multi selection, and progress bar.", "collective.recaptcha": "Wraps the recaptcha-client library to provide a drop-in replacement for collective.captcha.", "collective.recipe.sphinxbuilder": "ZC.buildout recipe to generate and build Sphinx-based documentation in the buildout.", "collective.recipe.template": "Buildout recipe to generate a text file from a template", "collective.testcaselayer": "Use test cases as zope.testing layers", "collective.transmogrifier": "A configurable pipeline, aimed at transforming content for import and export", "collective.twitter.accounts": "Provide Twitter integration for a Plone Site", "collective.upload": "File upload widget for Plone with multiple file selection.", "collective.videoanysurfer": "Youtube Integration to be AnySurfer compliant", "collective.watcherlist": "Send emails from Plone to interested members (watchers)", "collective.wtf": "GenericSetup importer and exporter for workflow definitions that uses CSV instead of XML", "collective.z3cform.datagridfield": "Fields with repeatable data grid (table-like) for z3.cform", "collective.z3cform.datetimewidget": "z3c.form date and datetime widgets", "collectors": "Monitor your (SimPy) simulation models or other objects and collect data from them.", "colorama": "Cross-platform colored terminal text.", "colorcet": "Collection of perceptually uniform colormaps", "colorclass": "Colorful worry-free console applications for Linux, Mac OS X, and Windows.", "colored": "Simple library for color and formatting to terminal", "coloredlogs": "Colored terminal output for Python's logging module", "colorful": "Terminal string styling done right, in Python.", "colorhash": "Generate a color based on a value", "colorize": "Command line utility to colorize other commands output", "colorlog": "Log formatting with colors!", "colorlover": "Color scales for IPython notebook", "colormap": "Utilities to ease manipulation of matplotlib colormaps and color codecs (e.g., hex2rgb)", "colormath": "Color math and conversion library.", "colorspacious": "A powerful, accurate, and easy-to-use Python library for doing colorspace conversions", "colorthief": "A module for grabbing the color palette from an image.", "colorzero": "Yet another Python color library.", "colosseum": "An independent implementation of the CSS layout algorithm.", "colour": "converts and manipulates various color representation (HSL, RVB, web, X11, ...)", "colour-runner": "Colour formatting for unittest tests", "combination": "Song's tools", "combomethod": "Decorator indicating a method is both a class and an instance method", "comet-git-pure": "Python Git Library", "comet-ml": "Supercharging Machine Learning", "command": "Command runner with debug capabilities", "commando": "A declarative interface to argparse and extras.", "commentjson": "Add Python and JavaScript style comments in your JSON files.", "comments": "Python wrapper for the https://comments.bot API", "commis": "Create command line applications like Django management commands.", "common": "Common tools and data structures implemented in pure python.", "commonmark": "Python parser for the CommonMark Markdown spec", "commonregex": "Find all dates, times, emails, phone numbers, links, emails, ip addresses, prices, bitcoin address, and street addresses in a string.", "commontools": "Common functions that are often needed but don't really belong anywhere", "commonware": "A place to keep stuff we want to share, like middleware.", "community": "merge together wellness checks to unify your shit", "companies": "simple printer of company list", "company": "Reconcile company names with OpenCorporates.", "comparable": "Base class to enable objects to be compared for similarity.", "compare": "Alternative syntax for comparing/asserting expressions in Python. Supports pluggable matchers for custom comparisons.", "compass": "Compass is a geolocation API client library offering you a flexible set of lookup strategies across a range of web services.", "compile": "Compiling Python source code into bytecode in production environment", "complex": "Compute complex numbers operations such as addition, substraction, multiplication , division and modulus.", "complexity": "A refreshingly simple static site generator, for those who like to work in HTML.", "component": "A python library that makes is easy to consume bower components with python.", "components": "HTML template components", "compreffor": "A CFF subroutinizer for fontTools.", "compress": "All in one data compression library.", "computer": "Perform calculations and comparisons from user input", "comtypes": "Pure Python COM package", "conan": "Conan C/C++ package manager", "concord232": "GE Concord 4 RS232 Serial Interface Library and Server", "concurrencytest": "testtools extension for running unittest suites concurrently", "concurrentloghandler": "Concurrent logging handler (drop-in replacement for RotatingFileHandler) Python 2.6+", "conda": "OS-agnostic, system-level binary package manager.", "conda-build": "tools for building conda packages", "conda-env": "tools for interacting with conda environments", "conda-manager": "A stand alone PyQt/PySide GUI application for managing conda packages and environments.", "conditional": "Conditionally enter a context manager", "conditions": "Implementation of the Common Lisp's conditions system in Python.", "conf_d": "read configuration files, conf.d style", "confidential": "Manage secrets in your projects using AWS Secrets Manager", "config": "A hierarchical, easy-to-use, powerful configuration module for Python", "configargparse": "A drop-in replacement for argparse that allows options to also be set via config files and/or environment variables.", "configglue": "Glue to stick OptionParser and ConfigParser together", "configlib": "wrapper for ConfigParser allowing for simple get calls to set options.", "configman": "Flexible reading and writing of namespaced configuration options", "configobj": "Config file reading, writing and validation.", "configparser": "Updated configparser from Python 3.7 for Python 2.6+.", "configshell-fb": "A framework to implement simple but nice CLIs.", "configspace": "Creation and manipulation of parameter configuration spaces for automated algorithm configuration and hyperparameter tuning.", "configuration": "multi-level unified configuration", "confire": "A simple app configuration scheme using YAML and class based defaults.", "confluent-kafka": "Confluent's Python client for Apache Kafka", "confmodel": "Declarative configuration access and validation system.", "confuse": "painless YAML configuration", "conllu": "CoNLL-U Parser parses a CoNLL-U formatted string into a nested python dictionary", "connect-box": "Python client for interacting with Compal CH7465LG devices.", "connection": "check network connection", "connexion": "Connexion - API first applications with OpenAPI/Swagger and Flask", "cons": "An implementation of Lisp/Scheme-like cons in Python.", "consider": "Consider is a parser for the ThinkGear protocol used by NeuroSky devices.", "consistent_hash": "Implements consistent hashing with Python and the algorithm is the same as libketama.", "constantly": "Symbolic constants in Python", "construct": "A powerful declarative symmetric parser/builder for binary data", "consulate": "A Client library for the Consul", "content": "Nothing", "contentful": "Contentful Delivery API Client", "contents": "Put a table of contents in your files!", "context": "A profiler that tells it how it is", "contextdecorator": "Create APIs that work as decorators and as context managers.", "contexter": "Contexter is a full replacement of the contextlib standard library\nmodule. It comes with more features, a nicer API and full support for\nPython 2.5 up to 3.x from a single source file.", "contextlib2": "Backports and enhancements for the contextlib module", "contexttimer": "A timer context manager measuring the clock wall time of the code block it contains.", "contextvars": "PEP 567 Backport", "contract": "Programming by Contract for Python", "contractions": "Fixes contractions such as `you're` to you `are`", "contributions": "Generate the most coolest github/gitlab timelines contributions", "contributors": "A command-line script to get all the contributors for one or more GitHub projects.", "control": "Python control systems library", "controllers": "", "convertdate": "Converts between Gregorian dates and other calendar systems.Calendars included: Baha'i, French Republican, Hebrew, Indian Civil, Islamic, ISO, Julian, Mayan and Persian.", "convey": "CSV processing and mutual conversion of web related data types", "convoy": "A combo-loader for Javascript and CSS.", "cookiecutter": "A command-line utility that creates projects from project templates, e.g. creating a Python package project from a Python package project template.", "cookiejar": "Cookiecutter templates discovery and management.", "cookies": "Friendlier RFC 6265-compliant cookie parser/renderer", "cooldict": "Some useful dict-like structures", "coollogger": "Keep Log files zipped and cleaned.", "coolprop": "Open-source thermodynamic and transport properties database", "coop": "Standard base to build Wagtail sites from", "cooper": "Easy and safe cooperative methods", "copyright": "Add or replace license boilerplate in source code files.", "copytext": "A library for accessing a spreadsheet as a native Python object suitable for templating.", "core": "", "core-explore-common-app": "Base exploration function for the curator core project", "core-main-app": "Main functionalities for the curator core project", "core-parser-app": "XSD parser tools for the curator core project", "coreapi": "Python client library for Core API.", "coreapi-cli": "An interactive command line client for Core API.", "coremltools": "Community Tools for Core ML", "coreschema": "Core Schema.", "corner": "Make some beautiful corner plots of samples.", "cornice": "Define Web Services in Pyramid.", "cornice-swagger": "Generate swagger from a Cornice application", "cotyledon": "Cotyledon provides a framework for defining long-running services.", "couchbase": "Python Client for Couchbase", "couchdb": "Python library for working with CouchDB", "couchdb-schematics": "UNKNOWN", "couchdbkit": "Python couchdb kit", "could": "", "couleur": "ANSI terminal tool for python, colored shell and other handy fancy features", "counter": "Counter package defines the \"counter.Counter\" class similar to bags or multisets in other languages.", "countries": "Provides models for a \"complete\" list of countries", "country": "country package", "cov-core": "plugin core for use by pytest-cov, nose-cov and nose2-cov", "coverage": "Code coverage measurement for Python", "coverage-badge": "Generate coverage badges for Coverage.py.", "coverage-config-reload-plugin": "coverage.py config reload plugin", "coverage-env-plugin": "coverage.py environment plugin", "coveralls": "Show coverage stats online via coveralls.io", "cowpy": "A cowsay clone for python in one file.", "coz-bytecode": "Python module to generate and modify bytecode (Temporary CoZ Fork)", "cozmo": "SDK for Anki Cozmo, the small robot with the big personality", "cppclean": "Find problems in C++ source that slow development of large code bases.", "cpplint": "Automated checker to ensure C++ files follow Google's style guide", "cprofilev": "An easier way to use cProfile", "cpu_affinity": "This is to support set/get CPU affinity in python2.", "cql": "Cassandra Query Language driver", "cqlengine": "Cassandra CQL 3 Object Mapper for Python", "cqlsh": "A Python-based command-line client for running simple CQL commands on a Cassandra cluster", "cr": "Tiny password-protecting file server.", "cr-py": "A Python API wrapper for cr-api", "cracklib": "A CPython extension module wrapping the libcrack library", "cram": "A simple testing framework for command line applications", "crank": "Generalization of dispatch mechanism for use across frameworks.", "crate": "CrateDB Python Client", "crayons": "TextUI colors for Python.", "crc16": "Library for calculating CRC16", "crc32": "CRC32 tools: reverse, undo/rewind, and calculate hashes", "crc32c": "A python package implementing the crc32c algorithmin hardware and software", "crcelk": "CrcElk is an updated fork of the CrcMoose module for recent versions of Python. It provides a pure Python implementation of the CRC algorithm and allows for variants to easily be defined by providing their parameters such as width, starting polynomial, etc. Python versions 2.6+ and 3.1+ are supported.", "crcmod": "CRC Generator", "create": "a simple package", "createcoverage": "Single command to create coverage reports (assumes a bin/test)", "createsend": "A library which implements the complete functionality of the Campaign Monitor API.", "credstash": "A utility for managing secrets in the cloud using AWS KMS and DynamoDB", "creole": "Parser for WikiCreole text markup.", "creoleparser": "Parser for the Creole common wiki markup language", "crimereports": "Provides basic API to crimereports.com.", "crispy-forms-foundation": "Django application to add 'django-crispy-forms' layout objects for 'Foundation for sites'", "crochet": "Use Twisted anywhere!", "croniter": "croniter provides iteration for datetime object with cron like format", "crontab": "Parse and use crontab schedules in Python", "crontabber": "A cron job runner with self-healing and job dependencies.", "cropresize2": "crop and resize an image without doing the math yourself", "crossbar": "Crossbar.io multi-protocol (WAMP/WebSocket, REST/HTTP, MQTT) application router for microservices.", "crosscat": "A domain-general, Bayesian method for analyzing high-dimensional data tables", "cryptacular": "", "cryptg": "Cryptographic utilities for Telegram.", "crypto": "Simple symmetric GPG file encryption and decryption", "cryptoconditions": "Multi-algorithm, multi-level, multi-signature format for expressing conditions and fulfillments according to the Interledger Protocol (ILP).", "cryptography": "cryptography is a package which provides cryptographic recipes and primitives to Python developers.", "cryptography-vectors": "Test vectors for the cryptography package.", "cs": "A simple yet powerful CloudStack API client for Python and the command-line.", "cs50": "CS50 library for Python", "csapi": "A minimalist wrapper around the Apache CloudStack API.", "csc-pysparse": "A fast sparse matrix library for Python (Commonsense Computing version)", "csc-utils": "A set of utility functions for Python that the Commonsense Computing project uses in multiple projects.", "csirtgsdk": "CSIRTG Python SDK", "css": "a small, fast css parser for python the utilizes the codetalker library", "csscompressor": "A python port of YUI CSS Compressor", "cssmin": "A Python port of the YUI CSS compression algorithm.", "cssprefixer": "A tool that rewrites your CSS files, adding vendor-prefixed versions of CSS3 rules.", "cssselect": "cssselect parses CSS3 Selectors and translates them to XPath 1.0", "cssselect2": "CSS selectors for Python ElementTree", "cssutils": "A CSS Cascading Style Sheets library for Python", "cstruct": "C-style structs for Python", "csv": "Fast CSV Parser for Python", "csvkit": "A suite of command-line tools for working with CSV, the king of tabular file formats.", "csvw": "", "ctypes": "create and manipulate C data types in Python, call functions in shared libraries", "ctypescrypto": "CTypes-based interface for some OpenSSL libcrypto features", "cu": "Generate a unique value from a consecutively number list", "cu2qu": "Cubic-to-quadratic bezier curve conversion", "cubes": "Lightweight framework for Online Analytical Processing (OLAP) and multidimensional analysis", "cuda4py": "CUDA cffi bindings and helper classes", "cufflinks": "Productivity Tools for Plotly + Pandas", "cuisine": "Chef-like functionality for Fabric", "cupy": "CuPy: NumPy-like API accelerated with CUDA", "curio": "Curio - Concurrent I/O", "current": "Current module relative paths and imports", "cursive": "Cursive implements OpenStack-specific validation of digital signatures.", "cursor": "A small Python package to hide or show the terminal cursor", "curtsies": "Curses-like terminal wrapper, with colored strings!", "curve": "UNKNOWN", "custodia": "A service to manage, retrieve and store secrets.", "custodian": "A simple JIT job management framework in Python.", "cutadapt": "trim adapters from high-throughput sequencing reads", "cv": "Check version of a Python module", "cvxcanon": "A low-level library to perform the matrix building step in cvxpy, a convex optimization modeling software.", "cvxopt": "Convex optimization package", "cvxpy": "A domain-specific language for modeling convex optimization problems in Python.", "cwltool": "Common workflow language reference implementation", "cx": "Compute nearest neighbor distances along the coast with a view angle.", "cx-freeze": "create standalone executables from Python scripts", "cx-oracle": "Python interface to Oracle", "cyanide": "Celery stress testing and integration test support.", "cybox": "A Python library for parsing and generating CybOX content.", "cycler": "Composable style cycles", "cycles": "A data processing framework.", "cyclone": "Non-blocking web server for Python. Tornado API as a Twisted protocol.", "cymem": "Manage calls to calloc/free through Cython", "cymysql": "Python MySQL Driver using Cython", "cyordereddict": "Cython implementation of Python's collections.OrderedDict", "cypari": "Sage's PARI extension, modified to stand alone.", "cyrandom": "Fast random number generation.", "cysignals": "Interrupt and signal handling for Cython", "cython": "The Cython compiler for writing C extensions for the Python language.", "cytoolz": "Cython implementation of Toolz: High performance functional utilities", "cyvcf": "A fast Python library for VCF files using Cython for speed.", "cyvcf2": "fast vcf parsing with cython + htslib", "d2to1": "Allows using distutils2-like setup.cfg files for a package's metadata with a distribute/setuptools setup.py", "da": "Task automatization tool.", "daemon": "", "daemonize": "Library to enable your code run as a daemon process on Unix-like systems.", "daemonocle": "A Python library for creating super fancy Unix daemons", "daemons": "Well behaved unix daemons for every occasion.", "daft": "PGM rendering at its finest", "daiquiri": "Library to configure Python logging easily", "dap": "DAP (Data Access Protocol) client and server for Python.", "daphne": "Django ASGI (HTTP/WebSocket) server", "dargparse": "Declarative command-line argument parser for python", "dark": "Data Analysis and Reporting Kit (DARK)", "darts.util.lru": "Simple dictionary with LRU behaviour", "dash": "A Python framework for building reactive web-apps. Developed by Plotly.", "dash-auth": "Dash Authorization Package.", "dash-bootstrap-components": "Bootstrap themed components for use in Plotly Dash", "dash-core-components": "Core component suite for Dash", "dash-dangerously-set-inner-html": "A dash component for specifying raw HTML", "dash-daq": "DAQ components for Dash", "dash-flow-example": "Example of a Dash library that uses Flow Types", "dash-html-components": "Vanilla HTML components for Dash", "dash-renderer": "Front-end component renderer for Dash", "dash-table": "Dash table", "dash-table-experiments": "Dash table experiments", "dash.ly": "UNKNOWN", "dask": "Parallel PyData with Task Scheduling", "data": "Work with unicode/non-unicode data from files or strings uniformly.", "database": "Python database connectivity supporting portable SQL mode", "databases": "Async database support for Python.", "databricks-cli": "A command line interface for Databricks", "databroker": "Unification of NSLS-II data sources", "datacite": "Python API wrapper for the DataCite Metadata Store API.", "dataclasses": "A backport of the dataclasses module for Python 3.6", "dataclasses-json": "Easily serialize dataclasses to and from JSON", "datadiff": "DataDiff is a library to provide human-readable diffs of python data structures.", "datadog": "The Datadog Python library", "datafreeze": "Export data from a SQL database to a set of file formats.", "datalab": "Google Cloud Datalab", "datapackage": "Utilities to work with Data Packages as defined on specs.frictionlessdata.io", "datapackage-pipelines": "{{ DESCRIPTION }}", "datapoint": "Python interface to the Met Office's Datapoint API", "dataproperty": "Python library for extract property from data.", "datascience": "A Jupyter notebook Python library for introductory data science", "dataset": "Toolkit for Python-based database access.", "datashader": "Data visualization toolchain based on aggregating into a grid", "datashape": "A data description language.", "datasketch": "Probabilistic data structures for processing and searching very large datasets", "datastore": "simple, unified API for multiple data stores", "datatables": "Integrates SQLAlchemy with DataTables (framework agnostic)", "datatype": "Anonymous datatype validation", "datefinder": "Extract datetime objects from strings", "dateglob": "Convert a set of dates into a compact list of globs", "dateparser": "Date parsing library designed to parse dates from HTML pages", "datetime": "This package provides a DateTime data type, as known from Zope. Unless you need to communicate with Zope APIs, you're probably better off using Python's built-in datetime module.", "datetime-distance": "Compare string distances between dates, timestamps, or datetime objects.", "dateutils": "Various utilities for working with date and datetime objects", "datrie": "Super-fast, efficiently stored Trie for Python.", "david": "", "dawg": "Fast and memory efficient DAWG (DAFSA) for Python", "dawg-python": "Pure-python reader for DAWGs (DAFSAs) created by dawgdic C++ library or DAWG Python extension.", "day": "what's day is today", "db": "Databases for Humans", "db-sqlite3": "sqlite3 driver for db", "db.py": "a db package that doesn't suck", "db2": "Simple mysql ORM with type checking", "db_backup": "Code for creating encrypted backups of databases", "dbapi": "\u57fa\u4e8e\u722c\u866b\u7684\u8c46\u74e3API SDK", "dbb": "Bin scaffolds into population genomes.", "dbf": "Pure python package for reading/writing dBase, FoxPro, and Visual FoxPro .dbf files (including memos)", "dbfread": "Read DBF Files with Python", "dbgp": "a python debug server that is complient with DBGP", "dblpy": "A simple API wrapper for top.gg written in Python", "dbus-python": "Python bindings for libdbus", "dbutils": "Database connections for multi-threaded environments.", "dcos": "DCOS Common Modules", "dcxml": "Dublin Core XML generation from Python dictionaries.", "ddt": "Data-Driven/Decorated Tests", "ddtrace": "Datadog tracing code", "de": "de", "deal": "Programming by contract", "dealer": "Dealer -- SCM (Git, Mercurial) watcher", "deap": "Distributed Evolutionary Algorithms in Python", "deb-pkg-tools": "Debian packaging tools", "debtcollector": "A collection of Python deprecation patterns and strategies that help you collect your technical debt in a non-destructive manner.", "debug": "Start fancy debugger in a single statement.", "decorator": "Decorators for Humans", "decoratortools": "Class, function, and metaclass decorators -- even in Python 2.3 (now with source debugging for generated code)!", "dectate": "A configuration engine for Python frameworks", "dedupe": "A python library for accurate and scaleable data deduplication and entity-resolution", "dedupe-hcluster": "Hierarchical Clustering Algorithms (Information Theory)", "dedupe-variable-datetime": "DateTime variable type for dedupe", "deepdiff": "Deep Difference and Search of any Python object/data.", "deepdish": "Deep Learning experiments from University of Chicago.", "deepmerge": "a toolset to deeply merge python dictionaries.", "deepspeech": "A library for running inference on a DeepSpeech model", "default": "Merge JSON data with default JSON data", "defcon": "A set of flexible objects for representing UFO data.", "defer": "Simple framework for asynchronous programming", "define": "Terminal Dictionary", "definition": "Definition fetcher from 5 online dictionaries", "definitions": "Load and validate YAML definitions against a schema", "deform": "Form library with advanced features like nested forms", "deform_bootstrap": "Twitter Bootstrap compatible widgets, templates and styles for the deform form library", "defusedcsv": "Drop-in replacement for Python's CSV library that tries to mitigate CSV injection attacks", "defusedxml": "XML bomb protection for Python stdlib modules", "delegator.py": "Subprocesses for Humans 2.0.", "delocate": "Move OSX dynamic libraries into package", "delorean": "library for manipulating datetimes with ease and clarity", "deltas": "An experimental diff library for generating operation deltas that represent the difference between two sequences of comparable items.", "deluge": "BitTorrent Client", "deluge-client": "Simple Deluge Client", "demjson": "encoder, decoder, and lint/validator for JSON (JavaScript Object Notation) compliant with RFC 7159", "dendropy": "A Python library for phylogenetics and phylogenetic computing: reading, writing, simulation, processing and manipulation of phylogenetic trees (phylogenies) and characters.", "dennis": "Utilities for working with PO and POT files to ease development and improve localization quality", "denonavr": "Automation Library for Denon AVR receivers", "dependencies": "Dependency Injection for Humans", "dependency_injection": "This library defines a helper for building a dependency injection framework.", "dependency_management": "coala Dependency Management", "depinfo": "List a package's direct dependencies and their versions.", "deprecated": "Python @deprecated decorator to deprecate old python classes, functions or methods.", "deprecation": "A library to handle automated deprecations", "deps": "deps discovers your Python dependencies", "derivative": "", "derpconf": "derpconf abstracts loading configuration files for your app", "desc": "Deep Embedded Single-cell RNA-seq Clustering", "descartes": "Use geometric objects as matplotlib paths and patches", "design": "Generates various common web design elements. Borders,         patterns, textures, gradients, etc.", "desktop": "Simple desktop integration for Python", "details": "Tools for processing AWS detailed billing reports", "detect-secrets": "Tool for detecting secrets in the codebase", "detox": "distributing activities of the tox tool", "developer": "The root package for Neurospaces components for GENESIS 3", "devizo": "", "devops": "", "devp2p": "Python implementation of the Ethereum P2P stack", "devpi": "(deprecated, install devpi-server, devpi-client, devpi-web instead)", "devpi-client": "devpi upload/install/... workflow commands for Python developers", "devpi-common": "utilities jointly used by devpi-server and devpi-client", "devpi-plumber": "Mario, the devpi-plumber, helps to automate and test large devpi installations.", "devpi-server": "devpi-server: reliable private and pypi.org caching server", "devpi-web": "devpi-web: a web view for devpi-server", "devrecargar": "A Django app that automatically reloads your browser when a file\n        (py, html, js, css) changes.", "devscripts": "Scripts and functions to use while coding", "devtools": "Dev tools for python", "dexml": "a dead-simple Object-XML mapper for Python", "dfdatetime": "Digital Forensics date and time (dfDateTime).", "dfvfs": "Digital Forensics Virtual File System (dfVFS).", "di": "", "dialog": "A Python interface for the 'dialog' library.", "dialogflow": "", "dialogos": "a flaggable comments app", "diamond": "Smart data producer for graphite graphing package", "diaper": "Python Diaper", "diazo": "Diazo implements a Deliverance like language using a pure XSLT engine. With Diazo, you \"compile\" your theme and ruleset in one step, then use a superfast/simple transform on each request thereafter. Alternatively, compile your theme during development, check it into version control, and not touch Diazo during deployment.", "dib-utils": "Pieces of diskimage-builder that are useful without the rest of the project", "dice": "A library for parsing and evaluating dice notation", "dicom": "Pure python package for DICOM medical file reading and writing", "dict": "dict replacement", "dict-deep": "Very simple deep_set and deep_get functions to access nested dicts (or any object) using 'dotted strings' as key.", "dict2xml": "small script to output xml as a string from a python dictionary", "dict_digger": "Useful syntax for digging into nested dictionaries, lists and tuples, and removes the need to check if a key exists", "dictalchemy": "Contains asdict and fromdict methods for SQL-Alchemy declarative models", "dictdiffer": "Dictdiffer is a library that helps you to diff and patch dictionaries.", "dictobj": "A set of Python dictionary objects where keys can be accessed as instance attributes.", "dictobject": "DictObject", "dictshield": "Python Library for typed dictionaries... sorta", "dicttoxml": "Converts a Python dictionary or other native data type into a valid XML string.", "did": "did - What did you do last week, month, year?", "diesel": "Diesel is a coroutine-based networking library for Python", "diff": "\"You diff objects, you find out why they ain't the same.\"", "diff-cover": "Automatically find diff lines that need test coverage.", "diff-match-patch": "Repackaging of Google's Diff Match and Patch libraries. Offers robust algorithms to perform the operations required for synchronizing plain text.", "dig": "Command-line tool of [ google, youdao ] translation service.", "dill": "serialize all of python", "dimagi-utils": "Dimagi Shared Utilities", "dimod": "A shared API for binary quadratic model samplers.", "dingus": "A record-then-assert mocking library", "dipy": "Diffusion MRI utilities in python", "direct": "Python wrapper to the DIRECT algorithm", "directory": "Expose opendir/readdir/closedir", "directpy": "A python library for interacting with DirecTV receivers", "dirq": "Directory based queue", "dirspec": "XDG Base and User directories implementation", "dirsync": "Advanced directory tree synchronisation tool", "dirty": "A dirty and simple HTML/XML template engine for Python 3.", "dis3": "Python 2.7 backport of the \"dis\" module from Python 3.5+", "disco-py": "A Python library for Discord", "discogs-client": "Official Python API client for Discogs", "discord": "A mirror package for discord.py. Please install that instead.", "discord.py": "A python wrapper for the Discord API", "discord_simple": "Discord simple API", "discover": "Test discovery for unittest. Backported from Python 2.7 for Python 2.4+", "discovery": "Python library for getting values from ETCD", "diskcache": "Disk Cache -- Disk and file backed persistent cache.", "diskimage-builder": "Golden Disk Image builder.", "dispatcher": "A library for event-driven programming", "dispatching": "A library for overloading python functions", "disposable-email-domains": "A set of disposable email domains", "disqus": "An API wrapper for Disqus (disqus.com)", "disqus-python": "Disqus API Bindings", "distance": "Utilities for comparing sequences", "distlib": "Distribution utilities", "distorm3": "The goal of diStorm3 is to decode x86/AMD64 binary streams and return a structure that describes each instruction.", "distribute": "distribute legacy wrapper", "distributed": "Distributed scheduler for Dask", "distributedlock": "Python Distributed Lock with memcached support", "distribution": "UNKNOWN", "distro": "Distro - an OS platform information API", "distro-info": "UNKNOWN", "distutils2": "Python Packaging Library", "divisi2": "Divisi2: Commonsense Reasoning over Semantic Networks", "dj": "This is a namespace package for extra Django packages. Feel free to use it.", "dj-config-url": "Use configuration URLs in your Django Application.", "dj-database-url": "Use Database URLs in your Django Application.", "dj-email-url": "Use an URL to configure email backend settings in your Django Application.", "dj-inmemorystorage": "A non-persistent in-memory data storage backend for Django.", "dj-pagination": "Django + Pagination Made Easy", "dj-redis-url": "Use Redis URLs in your Django Application.", "dj-static": "Serve production static files with Django.", "dj-stripe": "Django + Stripe Made Easy", "dj.choices": "An enum implementation for Django forms and models.", "dj.paste": "Yet another WSGI Paste factory for paste sponsored by Makina Corpus", "djalog": "Simple, Django-ready (but can be used without Django as well) logger\nusing excellent logging module.", "djangae": "Django integration with Google App Engine", "django": "A high-level Python Web framework that encourages rapid development and clean, pragmatic design.", "django-4store": "A small Django application that makes developing with the 4Store RDF database easier.", "django-absolute": "Absolute URLs tools for django", "django-ace": "django-ace provides integration for ajax.org ACE with Django", "django-activelink": "A Django template library for checking whether the current page matches a given URL. Useful for highlighting active links in menus.", "django-activeurl": "Easy-to-use active URL highlighting for Django", "django-activity-stream": "Generate generic activity streams from the actions on your site. Users can follow any actors' activities for personalized streams.", "django-addons": "django-addons Framework", "django-address": "A django application for describing addresses.", "django-admin": "Django Admin Extensions", "django-admin-bootstrapped": "A Bootstrap theme for Django Admin", "django-admin-enhancer": "A simple django app that provides change and deletion links to FK fields in the admin.", "django-admin-export": "Generic export to xls action for Django admin interface", "django-admin-generator": "Django Admin Generator is a management command to automatically generate a Django `admin.py` file for given apps/models.", "django-admin-honeypot": "A fake Django admin login screen to notify admins of attempted unauthorized access.", "django-admin-interface": "django-admin-interface is a modern responsive flat admin interface customizable by the admin itself.", "django-admin-jqueryui": "Simply adds a jquery ui to the admin panel", "django-admin-list-filter-dropdown": "Use dropdowns in Django admin list filter", "django-admin-rangefilter": "django-admin-rangefilter app, add the filter by a custom date range on the admin UI.", "django-admin-shortcuts": "Add simple and pretty shortcuts to the django admin homepage.", "django-admin-smoke-tests": "Runs some quick tests on your admin site objects to make sure there aren't non-existant fields listed, etc.", "django-admin-sortable": "Drag and drop sorting for models and inline models in Django admin.", "django-admin-sortable2": "Generic drag-and-drop sorting for the List, the Stacked- and the Tabular-Inlines Views in the Django Admin", "django-admin-tools": "A collection of tools for the django administration interface", "django-admin-tools-stats": "django-admin-tools-stats - Django-admin module to create charts and stats in your dashboard", "django-admin-view-permission": "A simple Django app which adds view permissions.", "django-adminactions": "Collections of useful actions to use with django.contrib.admin.ModelAdmin", "django-adminfiles": "File upload manager and picker for Django admin", "django-adminlte2": "Admin LTE templates, admin theme, and template tags for Django", "django-adminplus": "Add new pages to the Django admin.", "django-admintheme": "Django Admin Theme is a drop-in CSS replacement for the Django Admin app.", "django-adv-cache-tag": "An advanced template tag for caching in django: versioning, compress, partial caching, easy inheritance", "django-aesfield": "Django Model Field that supports AES encryption", "django-aggregate-if": "Conditional aggregates for Django, just like the famous SumIf in Excel.", "django-ajax-loading-overlay": "Uses JS to add/remove a loading overlay during Ajax calls", "django-ajax-selects": "Edit ForeignKey, ManyToManyField and CharField in Django Admin using jQuery UI AutoComplete.", "django-ajax-validation": "Provides support for doing validation using Ajax(currently with jQuery) using your existing Django forms.", "django-ajaxcomments": "Easily add AJAX-based comment functionality to a Django project.", "django-all-access": "django-all-access is a reusable application for user registration and authentication from OAuth 1.0 and OAuth 2.0 providers such as Twitter and Facebook.", "django-allauth": "Integrated set of Django applications addressing authentication, registration, account management as well as 3rd party (social) account authentication.", "django-allow-cidr": "A Django Middleware to enable use of CIDR IP ranges in ALLOWED_HOSTS.", "django-analytical": "Analytics service integration for Django projects", "django-angular": "Let Django play well with AngularJS", "django-announcements": "Announcements for your Django powered website.", "django-annoying": "This is a django application that tries to eliminate annoying things in the Django framework.", "django-anonymizer-compat": "App to anonymize data in Django models.", "django-any-imagefield": "A switchable ImageField for third party Django applications", "django-any-urlfield": "An improved URL selector to choose between internal models and external URLs", "django-anymail": "Django email integration for Amazon SES, Mailgun, Mailjet, Postmark, SendGrid, SendinBlue, SparkPost and other transactional ESPs", "django-app-metrics": "django-app-metrics is a reusable Django application for tracking and emailing application metrics.", "django-app-namespace-template-loader": "Template loader allowing you to both extend and override a template at the same time.", "django-appconf": "A helper class for handling configuration defaults of packaged apps gracefully.", "django-appdata": "Extendable field that enables Django apps to store their data on your models.", "django-appmedia": "Handling django app media", "django-apptemplates": "Django template loader that allows you to load and override a template from a specific Django application.", "django-argonauts": "A lightweight collection of JSON helpers for Django.", "django-assets": "Asset management for Django, to compress and merge CSS and Javascript files.", "django-atc-demo-ui": "Demo Web UI for ATC", "django-atc-profile-storage": "ATC Profile storage app", "django-attachments": "django-attachments is generic Django application to attach Files (Attachments) to any model.", "django-audiofield": "Django application to upload and convert audio files (mp3, wav and ogg format)", "django-audit-log": "Audit trail for django models", "django-auditlog": "Audit log app for Django", "django-auth-ldap": "Django LDAP authentication backend.", "django-auth-wall": "Puts your staging site behind a basic auth layer.", "django-authopenid": "Openid authentification application for Django", "django-authority": "A Django app that provides generic per-object-permissions for Django's auth app.", "django-authtools": "Custom user model app for Django featuring email as username and class-based views for authentication.", "django-autoadmin": "Automatic admin users for Django projects.", "django-autocomplete-light": "Fresh autocompletes for Django", "django-autoconfig": "Automatic configuration of Django projects based on the application requirements.", "django-autofixture": "Provides tools to auto generate test data.", "django-autoslug": "An automated slug field for Django.", "django-autoslug-iplweb": "An automated slug field for Django.", "django-avatar": "A Django app for handling user avatars", "django-axes": "Keep track of failed login attempts in Django-powered sites.", "django-babel": "Utilities for using Babel in Django", "django-babel-underscore": "Implements a underscore extractor for django-babel.", "django-background-task": "Database backed asynchronous task queue", "django-background-tasks": "Database backed asynchronous task queue", "django-bakery": "A set of helpers for baking your Django site out as flat files", "django-basic-authentication-decorator": "Decorator to provide Basic Authentication for Django Views", "django-bcrypt": "Make Django use bcrypt for hashing passwords.", "django-behave": "Django Test Runner for the Behave BDD module", "django-betterforms": "", "django-bitfield": "BitField in Django", "django-bitly": "Bit.ly integration for django", "django-bleach": "Easily use bleach with Django models and templates", "django-blog-it": "A simple installable app for writing blog posts", "django-blog-zinnia": "A clear and powerful weblog application powered with Django", "django-bmemcached": "A Django cache backend to use bmemcached module which supports memcached binary protocol with authentication.", "django-bob": "A set of helper tags and templates for using bootstrap in django.", "django-bookmarks": "A reusable Django app for bookmark management.", "django-bootstrap": "Django class-based views working with Bootstrap, from Twitter.", "django-bootstrap-breadcrumbs": "Django breadcrumbs for Bootstrap 2, 3 or 4", "django-bootstrap-datepicker-plus": "Bootstrap3/Bootstrap4 DatePickerInput, TimePickerInput, DateTimePickerInput, MonthPickerInput, YearPickerInput with date-range-picker functionality for django version 2.1, 2.0, 1.11, 1.10 and 1.8", "django-bootstrap-form": "django-bootstrap-form", "django-bootstrap-forms": "Twitter Bootstrap ready Django forms.", "django-bootstrap-modal-forms": "A Django plugin for creating AJAX driven forms in Bootstrap modal.", "django-bootstrap-pagination": "Render Django Page objects as Bootstrap 3.x/4.x Pagination compatible HTML", "django-bootstrap-static": "A collection of Bootstrap static files.", "django-bootstrap-themes": "Bootstrap theme support for Django.", "django-bootstrap-toolkit": "Bootstrap support for Django projects", "django-bootstrap3": "Bootstrap support for Django projects", "django-bootstrap3-datetimepicker": "Bootstrap3 compatible datetimepicker for Django projects.", "django-bootstrap3-datetimepicker-2": "Bootstrap3 compatible datetimepicker for Django projects.", "django-bootstrap4": "Bootstrap support for Django projects", "django-boto": "Wrapper of boto package for django", "django-bourbon": "Bourbon (http://bourbon.io/) static files packaged in a django app to speed up new applications and deployment.", "django-bower": "Integrate django with bower", "django-braces": "Reusable, generic mixins for Django", "django-breadcrumbs": "Easy to use generic breadcrumbs system for Django framework.", "django-browserid": "Django application for adding BrowserID support.", "django-bulk-update": "Bulk update using one query over Django ORM.", "django-cachalot": "Caches your Django ORM queries and automatically invalidates them.", "django-cache-machine": "Automatic caching and invalidation for Django models through the ORM.", "django-cache-nuggets": "Useful utils for Django caching", "django-cache-panel": "A more detailed cache panel for the Django Debug Toolbar", "django-cache-url": "Use Cache URLs in your Django application.", "django-cache-utils": "Caching decorator and django cache backend with advanced invalidation ability and dog-pile effect prevention", "django-cacheback": "Caching library for Django that uses Celery or RQ to refresh cache items asynchronously", "django-cached-field": "Celery-deferred, cached fields on Django ORM for expensive-to-calculate attributes", "django-cacheds3storage": "S3 cached storage", "django-cacheops": "A slick ORM cache with automatic granular event-driven invalidation for Django.", "django-caching-app-plugins": "UNKNOWN", "django-carton": "django-carton is a simple and lightweight application for shopping carts and wish lists.", "django-cas-ng": "CAS 1.0/2.0/3.0 client authentication backend for Django, support Django 2.x and 3.x, Python 3.5+", "django-casper": "CasperJS test integration for Django", "django-cassandra-engine": "Django Cassandra Engine - the Cassandra backend for Django", "django-categories": "A way to handle one or more hierarchical category trees in django.", "django-category": "Django categorize content app.", "django-cbv": "Django class-based views, backported from Django trunk", "django-celery": "Old django celery integration project.", "django-celery-beat": "Database-backed Periodic Tasks.", "django-celery-email": "An async Django email backend using celery", "django-celery-results": "Celery result backends for Django.", "django-celery-transactions": "Django transaction support for Celery tasks.", "django-celery-with-redis": "Bundle installing the dependencies for Django-Celery and Redis", "django-chamber": "Utilities library meant as a complement to django-is-core.", "django-channels": "A Django library for sending notifications", "django-chart-tools": "A thin wrapper around Google Chart API that tries not to invent a new language for describing charts.", "django-chartjs": "Django Chart.js and Hightchart ajax views", "django-choices": "Sanity for the django choices functionality.", "django-chosen": "django FormFields using the Chosen javascript plugin for jQuery", "django-chunks": "Keyed blocks of content for use in your Django templates", "django-cities": "Place models and worldwide place data for Django", "django-cities-light": "Simple alternative to django-cities", "django-ckeditor": "Django admin CKEditor integration.", "django-ckeditor-updated": "Django admin CKEditor integration.", "django-classbasedsettings": "Use classes to define settings.", "django-classy-tags": "Class based template tags for Django", "django-cleanup": "Deletes old files.", "django-clear-cache": "A simple Django management command which clears your cache.", "django-click": "Write Django management command using the click CLI library", "django-cloudinary-storage": "Django package that provides Cloudinary storages for both media and static files as well as management commands for removing unnecessary files.", "django-cms": "An Advanced Django CMS", "django-codemirror-widget": "Django form widget library for using CodeMirror on textarea", "django-coffeescript": "Django template tags to compile CoffeeScript", "django-collect-offline": "Collect data offline and push to the server later.", "django-collect-offline-files": "Add file-based data transfer to server for offline-use", "django-colorfield": "A small app providing a colorpicker field for django", "django-colorful": "An extension to the Django web framework that provides database and form color fields", "django-comments-spamfighter": "A Django app that contributes Akismet and Keyword blocking to your django comments.", "django-comments-xtd": "Django Comments Framework extension app with thread support, follow up notifications and email confirmations.", "django-common": "A number of useful django shortcuts and helpers", "django-common-helpers": "Common things every Django app needs!", "django-compat": "For- and backwards compatibility layer for Django 1.4, 1.7, 1.8, 1.9, 1.10, and 1.11", "django-compress": "django-compress provides an automated system for compressing CSS and JavaScript files", "django-compressor": "Compresses linked and inline JavaScript or CSS into single cached files.", "django-compressor-autoprefixer": "Django Compressor CSS filter for autoprefixer", "django-config-models": "Configuration models for Django allowing config management with auditing.", "django-configurations": "A helper for organizing Django settings.", "django-constance": "Django live settings with pluggable backends, including Redis.", "django-contact-form": "A generic contact-form application for Django", "django-contact-form-gv": "Django Contact Form using class based views.", "django-contrib-comments": "The code formerly known as django.contrib.comments.", "django-cookie-law": "Helps your Django project comply with EU cookie law regulations", "django-copyright": "Copyright django app", "django-cors-headers": "django-cors-headers is a Django application for handling the server headers required for Cross-Origin Resource Sharing (CORS).", "django-cors-headers-multi": "django-cors-headers is a Django application for handling the server headers required for Cross-Origin Resource Sharing (CORS).", "django-cors-middleware": "django-cors-middleware is a Django application for handling the server headers required for Cross-Origin Resource Sharing (CORS). Fork of django-cors-headers.", "django-countries": "Provides a country field for Django models.", "django-country-dialcode": "Django Application providing Dialcode and Countries code", "django-coverage": "Django Test Coverage App", "django-coverage-plugin": "Django template coverage.py plugin", "django-crispy-forms": "Best way to have Django DRY forms", "django-crispy-forms-ng": "Best way to have Django DRY forms of the next generation.", "django-cron": "Running python crons in a Django project", "django-cronjobs": "A simple Django app for running cron jobs.", "django-crontab": "dead simple crontab powered job scheduling for django", "django-crum": "Django middleware to capture current request and user.", "django-crypto-fields": "Add encrypted field classes and more to your Django models.", "django-cryptography": "Easily encrypt data in Django", "django-csp": "Django Content Security Policy support.", "django-csvimport": "Import CSV files to django models", "django-cumulus": "An interface to python-swiftclient and rackspace cloudfiles API from Django.", "django-custom-field": "End user custom fields for Django including contrib.admin support", "django-custom-user": "Custom user model for Django >= 1.5 with the same behaviour as Django's default User but with email instead of username.", "django-dajax": "Easy to use library to create asynchronous presentation logic with django and dajaxice", "django-dajax-ng": "Easy to use library to create asynchronous presentation logic with django and dajaxice-ng", "django-dajaxice": "Agnostic and easy to use ajax library for django", "django-dajaxice-ng": "Agnostic and easy to use ajax library for django", "django-dashing": "A simple Django dashboard app to visualize interesting data about your project.", "django-database-files": "A storage system for Django that stores uploaded files in the database.", "django-datatable": "A simple Django app to origanize data in tabular form.", "django-datatables-view": "Django datatables view", "django-date-extensions": "This code adds a few small extensions to Django's DateField, to handle both approximate dates (e.g. 'March 1963') and default year dates (e.g. assume '24th June' is the most recent such).", "django-daterange-filter": "Allow to filter by a custom date range on the Django Admin", "django-datetime-widget": "Django-datetime-widget is a simple and clean widget for DateField, Timefiled and DateTimeField  in Django framework. It is based on Bootstrap datetime picker, supports both Bootstrap 3 and Bootstrap 2", "django-db-log": "Exception Logging to a Database in Django", "django-db-logger": "Django logging in database", "django-db-mailer": "Django module to easily send emails using django templates stored in a database.", "django-db-readonly": "Add a global database read-only setting.", "django-dbarray": "Django ORM field for Postgres array types.", "django-dbbackup": "Management commands to help backup and restore a project database and media", "django-dbgettext": "Translate Django models by extracting data for gettext", "django-dbtemplates": "Template loader for templates stored in the database", "django-debug-panel": "django-debug-toolbar in WebKit DevTools. Works fine with background Ajax requests and non-HTML responses", "django-debug-toolbar": "A configurable set of panels that display various debug information about the current request/response.", "django-debug-toolbar-mongo": "MongoDB panel for the Django Debug Toolbar", "django-debug-toolbar-request-history": "Request History Panel for Django Debug Toolbar", "django-debug-toolbar-template-profiler": "Displays template rendering time on the timeline", "django-debug-toolbar-template-timings": "A django-debug-toolbar panel that shows you template rendering times for Django", "django-debugtools": "A toolbox of small utilities to assist Django development", "django-decorator-include": "Include Django URL patterns with decorators", "django-decouple": "Strict separation of settings from code.", "django-denorm": "Denormalization magic for Django", "django-devserver": "Drop-in replacement for Django's runserver", "django-digest": "An implementation of HTTP Digest Authentication for Django.", "django-dirtyfields": "Tracking dirty fields on a Django model instance (actively maintained)", "django-discover-runner": "A Django test runner based on unittest2's test discovery.", "django-disposable-email-checker": "Django package to detect ~890 domains used by disposable email services", "django-disqus": "Export comments and integrate DISQUS into your Django website", "django-djconfig": "DjConfig is a Django app for storing dynamic configurations.", "django-dotenv": "foreman reads from .env. manage.py doesn't. Let's fix that.", "django-downloadview": "Serve files with Django and reverse-proxies.", "django-dramatiq": "A Django app for Dramatiq.", "django-dropimages": "Uses Dropzone.js and django-braces to simplify the upload of multiple images into a collection object.", "django-durationfield": "Reusable app for adding a DurationField to Django", "django-dynamic-fixture": "A full library to create dynamic model instances for testing purposes.", "django-dynamic-preferences": "Dynamic global and instance settings for your django project", "django-dynamic-scraper": "Creating Scrapy scrapers via the Django admin interface", "django-easy-maps": "This app makes it easy to display a map for a given address", "django-easy-pdf": "Django PDF views, the easy way", "django-easy-pjax": "Easy PJAX for Django.", "django-easy-select2": "Django select2 theme for select input widgets.", "django-easymoney": "An easy MoneyField for Django.", "django-el-pagination": "Django pagination tools supporting Ajax, multiple and lazy pagination, Twitter-style and Digg-style pagination.", "django-elasticsearch-dsl": "Wrapper around elasticsearch-dsl-py for django models", "django-elasticsearch-dsl-drf": "Integrate Elasticsearch DSL with Django REST framework.", "django-email-analytics": "Adds Google Analytics tracking to emails sent with Django.", "django-email-as-username": "User authentication with email addresses instead of usernames.", "django-email-confirmation": "Simple email confirmation for the Django web framework.", "django-email-extras": "A Django reusable app providing the ability to send PGP encrypted and multipart emails using the Django templating system.", "django-email-obfuscator": "A Django template filter to protect email addresses from     crawlers.", "django-emailit": "Make sending html emails easy.", "django-embed-video": "Django app for easy embeding YouTube and Vimeo videos and music from SoundCloud.", "django-emoticons": "A usefull and incredible Django application that allow you to use emoticons in your templates :)", "django-encrypted-cookie-session": "Encrypted cookie session backend.", "django-encrypted-fields": "This is a collection of Django Model Field classes that are encrypted using Keyczar.", "django-endless-pagination": "Django pagination tools supporting Ajax, multiple and lazy pagination,\nTwitter-style and Digg-style pagination.", "django-enum": "A utility for writing Django choice enumerations.", "django-enumfield": "Custom Django field for using enumerations of named constants", "django-enumfields": "Real Python Enums for Django.", "django-envelope": "A contact form app for Django", "django-envie": "A module for Django that allows your app to use environment variables in a file", "django-environ": "Django-environ allows you to utilize 12factor inspired environment variables to configure your Django application.", "django-etc": "Tiny stuff for Django that won't fit into separate apps.", "django-excel": "A django middleware that provides one application programminginterface to read and write data in different excel file formats", "django-excel-response2": "A function extends of Tarken's django-excel-response", "django-export": "Django app allowing for filtered exporting of model data.", "django-extended-choices": "Little helper application to improve django choices (for fields)", "django-extensions": "Extensions for Django", "django-externaltestserver": "Run your Django selenium tests against an external server", "django-extra-fields": "Additional fields for Django Rest Framework.", "django-extra-views": "Extra class-based views for Django", "django-extras": "Extensions for Django to solve common development situations not (or not yet) covered by the core Django framework.", "django-eztables": "jQuery Datatables integration for Django", "django-facebook": "Facebook open graph API client in python. Enables django applications to register users using facebook.\nFixes issues with the official but unsupported Facebook python-sdk. Enables mobile facebook authentication.\nCanvas page authentication for facebook applications. FQL access via the server side api.", "django-facebook-api": "Django implementation for Facebook Graph API", "django-facebook-users": "Django implementation for Facebook Graph API Users", "django-fake-model": "Simple library for creating fake models in the unit tests.", "django-fakeauth": "A fake authentication backend for django", "django-fancy-autocomplete": "A simple AJAX autocomplete helper app for Django projects", "django-favicon": "Reusable django app to handle /favicon.ico for your site", "django-fernet-fields": "Fernet-encrypted model fields for Django", "django-fields": "Django-fields is an application which includes different kinds of models fields.", "django-file-archive": "Simple facility for uploading files in the Django admin", "django-filebrowser": "Media-Management with Grappelli", "django-filebrowser-no-grappelli": "Media-Management no Grappelli", "django-filer": "A file management application for django that makes handling of files and images a breeze.", "django-filetransfers": "Helper for writing reusable Django apps that handle uploads and downloads", "django-filter": "Django-filter is a reusable Django application for allowing users to filter querysets dynamically.", "django-filters": "A filterset and filters.", "django-fixture-generator": "django-fixture-generator is a reusable django application to make writing fixtures not suck.", "django-fixture-magic": "A few extra management tools to handle fixtures.", "django-flag": "flagging of inapproriate/spam content", "django-flash": "Django-flash is a simple Django extension which provides support for Rails-like flash messages.", "django-flat-responsive": "An extension for Django admin that makes interface mobile friendly.", "django-flat-theme": "A flat theme for Django admin interface. Modern, fresh, simple.", "django-flatblocks": "django-flatblocks acts like django.contrib.flatpages but for parts of a page; like an editable help box you want show alongside the main content.", "django-floppy-gumby": "Gumby Framework forms for Django using floppy forms. A floppy and gumby project.", "django-floppyforms": "Full control of form rendering in the templates", "django-fluent-comments": "A modern, ajax-based appearance for django_comments", "django-fluent-contents": "A widget engine to display various content on Django pages", "django-fluent-dashboard": "An improved django-admin-tools dashboard for Django projects", "django-fluent-pages": "A flexible, scalable CMS with custom node types, and flexible block content.", "django-fluent-utils": "Internal utilities for code sharing between django-fluent modules", "django-followit": "A Django application that allows users to follow django model objects", "django-fontawesome": "a django app that provides a couple of fontawesome/django related utilities.", "django-forceadminlanguage": "Force Django Admin to show in one selected language.", "django-form-utils": "Form utilities for Django", "django-forms-bootstrap": "a simple form filter for using Django forms with Bootstrap", "django-forms-builder": "A Django reusable app providing the ability for admin users to create their own forms and report on their collected data.", "django-formset-js": "Extend Django formsets with JavaScript", "django-formset-js-improved": "Extend Django formsets with JavaScript", "django-formtools": "A set of high-level abstractions for Django forms", "django-foundation-icons": "Zurb Foundation Icons (http://zurb.com/playground/foundation-icon-fonts-3) static files packaged in a Django app.", "django-foundation-statics": "Zurb Foundation (http://foundation.zurb.com) static files packaged in a django app to speed up new applications and deployment.", "django-friendly-tag-loader": "Want to optionally use a template tag library? Use this!", "django-friends": "friendship, contact and invitation management for the Django web framework", "django-friendship": "django-friendship provides an easy extensible interface for following and friendship", "django-froala-editor": "django-froala-editor package helps integrate Froala WYSIWYG HTML editor with Django.", "django-frontend-notification": "django application to display list of notifications, run basic actions such as view all notifications and delete notifications", "django-frontendadmin": "A a set of templatetags to allow an easy and unobstrusive way to edit model-data in the frontend of your page.", "django-fsm": "Django friendly finite state machine support.", "django-fsm-admin": "Integrate django-fsm state transitions into the django admin", "django-ga-context": "google analytics context processor", "django-gcm": "Google Cloud Messaging Server", "django-gears": "Compiles and concatenates JavaScript and CSS assets.", "django-generate": "Django slightly smarter than fixtures content generation app.", "django-generic-aggregation": "annotate() and aggregate() for generically related data", "django-generic-flatblocks": "", "django-generic-m2m": "relate anything to anything", "django-generic-positions": "Generic app for using a drag & drop position field, wherever you want to.\n", "django-genericadmin": "Adds support for generic relations within Django's admin interface.", "django-geoexplorer": "Use GeoExplorer in your django projects", "django-geojson": "Serve vectorial map layers with Django", "django-geonode-client": "Use GeoNode client in your django projects", "django-geoposition": "Django model field that can hold a geoposition, and corresponding admin widget.", "django-geosimple": "Simple Geohashing helpers", "django-getenv": "Read settings from environment variables.", "django-gm2m": "Django generic many-to-many field", "django-google-analytics-app": "Django Google Analytics app allowing for server side/non-js tracking.", "django-google-charts": "Google Visualization API template tags and helpers for Django framework", "django-google-maps": "Plugs google maps V3 api into Django admin.", "django-graphiql": "Integrate GraphiQL easily into your Django project", "django-graphos": "Django app to provide a JS agnostic way to work with charts.", "django-graphql-jwt": "JSON Web Token for Django GraphQL", "django-grappelli": "A jazzy skin for the Django Admin-Interface.", "django-gravatar": "Gravatar Support in a Django Reusable Application", "django-gravatar2": "Essential Gravatar support for Django. Features helper methods, templatetags and a full test suite!", "django-group-access": "Base Django model to add access control, via groups, to objects.", "django-groups": "Django group support (extracted from Pinax)", "django-guardian": "Implementation of per object permissions for Django.", "django-gulp": "Run your gulp tasks with runserver and collectstatic", "django-hamlpy": "Haml like syntax for Django templates.", "django-hashers-passlib": "Django hashers using passlib", "django-haystack": "Pluggable search for Django.", "django-health-check": "Run checks on services like databases, queue servers, celery processes, etc.", "django-helpdesk": "Django-powered ticket tracker for your helpdesk", "django-helper": "A set of useful function/tags/filter for Django.", "django-heroku": "This is a Django library for Heroku apps.", "django-heroku-memcacheify": "Automatic Django memcached configuration on Heroku.", "django-heroku-postgresify": "Automatic Django database configuration on Heroku.", "django-herokuapp": "A set of utilities and a project template for running Django sites on heroku.", "django-hierarkey": "Hierarchical key-value store for django", "django-hijack": "django-hijack allows superusers to hijack (=login as) and work on behalf of another user.", "django-hijack-admin": "Django admin integration for Django Hijack (https://github.com/arteria/django-hijack/)", "django-hitcount": "Hit counting application for Django.", "django-honeypot": "Django honeypot field utilities", "django-hosts": "Dynamic and static host resolving for Django. Maps hostnames to URLconfs.", "django-hstore": "PostgreSQL HStore support for Django", "django-html5accordion": "JS support to expand/collapse content, like HTML5 details/summary elements", "django-htmlmin": "HTML minifier for Python frameworks (not only Django, despite the name).", "django-http-proxy": "A simple HTTP proxy for the Django framework.", "django-hvad": "A content translation framework for django integrated automatically in the normal ORM. Removes the pain of having to think about translations in a django project.", "django-i18nfield": "Store internationalized strings in Django models", "django-ical": "iCal feeds for Django based on Django's syndication feed framework.", "django-icanhaz": "A Django template tag for embedding ICanHaz.js templates safely.", "django-idmap": "An identity mapper for the Django ORM", "django-image-cropping": "A reusable app for cropping images easily and non-destructively in Django", "django-imagekit": "Automated image processing for Django models.", "django-images": "A database-driven thumbnailing solution for Django", "django-imperavi": "A django application that contains a class for admin interface to render a         text field as beautiful Imperavi WYSIWYG editor http://redactorjs.com/", "django-impersonate": "Django app to allow superusers to impersonate other users.", "django-import-export": "Django application and library for importing and exporting data with included admin integration.", "django-importer": "Data importers for Django models", "django-indexer": "Key/Value Indexer", "django-infinite-memcached": "A Django memcached backend to handle 'infinite' timeouts", "django-infinite-scroll-pagination": "infinite-scroll-pagination is a Django lib that implementsthe *seek method* for scalable pagination.", "django-info-pages": "Editable info pages and basic blog functionality for Django", "django-infranil": "almost flat pages", "django-inline-ordering": "Django app to ease ordering of related data - enable Drag&Drop ordering in admin with just a few LOC", "django-inmemorystorage": "A non-persistent in-memory data storage backend for Django.", "django-inplaceedit": "Django application that allows you to inline edition of some data from the database", "django-inspect-model": "Model inspection for Django", "django-intercom": "Django App for integrating with intercom.io", "django-invitations": "Generic invitations app with support for django-allauth", "django-ipware": "A Django utility application that returns client's real IP address", "django-jasmine": "Jasmine Javascript testing integration for Django.", "django-jenkins": "Plug and play continuous integration with django and jenkins", "django-jet": "Modern template for Django admin interface with improved functionality", "django-jfu": "A Django Library for jQuery File Upload.", "django-jinja": "Jinja2 templating language integrated in Django.", "django-jinja-markdown": "('Django-Jinja (Jinja2) extension and filter for parse markdown text markup.',)", "django-jinja2": "A drop in conditional template loader to use jinja2 if the filename / path meets custom criteria", "django-jquery": "jQuery packaged in an handy django app to speed up new applications and deployment.", "django-jquery-js": "jQuery, bundled up so apps can depend upon it", "django-jquery-ui": "jQuery UI packaged in a django app to speed up new applications and deployment.", "django-js-asset": "script tag with additional attributes for django.forms.Media", "django-js-reverse": "Javascript url handling for Django that doesn't hurt.", "django-json-field": "Generic JSON model and form fields.", "django-json-rpc": "A simple JSON-RPC implementation for Django", "django-jsonfield": "JSONField for django models", "django-jsonfield-compat": "Compatability layer between django-jsonfield and Django's native JSONField", "django-jsonify": "Django additions for JSON", "django-jsonview": "Always return JSON from your Django view.", "django-jstemplate": "A Django template tag for embedding Mustache.js templates -- or other JavaScript templates -- safely.", "django-jwt-auth": "JSON Web Token based authentication for Django", "django-keen": "Simple wrapper for django around the official keen.io client", "django-keyedcache": "keyedcache", "django-kombu": "Kombu transport using the Django database as a message store.", "django-kronos": "Kronos is a Django application that makes it easy to define and schedule tasks with cron.", "django-lamson": "Easy integration of lamson in django projects", "django-layers-hr": "Serve different templates and static files for eg. mobi and web. Layers can be stacked to enable resource re-use.", "django-lazysignup": "Lazy signup for Django", "django-lb-attachments": "A django app to manager attachments.", "django-leaflet": "Use Leaflet in your django projects", "django-less": "Django template tags to compile LESS into CSS", "django-lets-go": "Django helpers, goodies, mix of snippets, etc...", "django-lfstheme": "The default theme for LFS", "django-libs": "A collection of things that we re-use in every Django project, such as custom middlewares, templates, templatetags, test mixins etc...", "django-libsass": "A django-compressor filter to compile SASS files using libsass", "django-likes": "Django app providing view interface to django-secretballot.", "django-livereload": "LiveReload with the Django development server", "django-livereload-server": "LiveReload functionality integrated with your Django development environment", "django-livesettings": "livesettings", "django-load": "Module loader for Ajango apps.", "django-localdevstorage": "A Django storage backend for local development that downloads files from the live site on the fly.", "django-localeurl": "A Django application that allow you to specify the language of a page in the URL.", "django-localflavor": "Country-specific Django helpers", "django-localflavor-us": "Country-specific Django helpers for U.S.A.", "django-locality": "Countries and territories, made usable.", "django-location-field": "Location field for Django", "django-locations": "A location based social network using Django & Pinax", "django-lockdown": "Lock down a Django site or individual views, with configurable preview authorization", "django-log-request-id": "Django middleware and log filter to attach a unique ID to every log message generated as part of a request", "django-logentry-admin": "Show all LogEntry objects in the Django admin site.", "django-loginas": "An app to add a \"Log in as user\" button in the Django user admin page.", "django-m2m-history": "Django ManyToMany relation field with history of changes", "django-mail-factory": "Django Mail Manager", "django-mail-templated": "Send emails using Django template system", "django-mailbox": "Import mail from POP3, IMAP, local mailboxes or directly from Postfix or Exim4 into your Django application automatically.", "django-mailchimp-v1.3": "Mailchimp wrapper for Django, using Mailchimp API 1.3", "django-mailer": "A reusable Django app for queuing the sending of email", "django-mailgun": "A Django email backend for Mailgun", "django-mailgun-redux": "A Django email backend for Mailgun", "django-mailman3": "Django library to help interaction with Mailman", "django-maintenancemode": "django-maintenancemode allows you to temporary shutdown your site for maintenance work", "django-mako": "Django Mako", "django-mako-plus": "Django+Mako: Routing by Convention, Python-Centric Template Language", "django-manager-utils": "Model manager utilities for Django", "django-map-widgets": "Map widgets for Django PostGIS fields", "django-maploom": "Use MapLoom in your django projects.", "django-markdown": "Django markdown support and wysiwyg.", "django-markdown-app": "Django markdown support and wysiwyg.", "django-markdown-deux": "a Django app that provides template tags for using Markdown (using the python-markdown2 processor)", "django-markdown2": "This is a simple app, which supplies a single template tag for markdown markup.", "django-markdownify": "Markdown template filter for Django.", "django-markdownx": "A comprehensive Markdown editor built for Django.", "django-markitup": "Markup handling for Django using the MarkItUp! universal markup editor", "django-markup": "A generic Django application to convert text with specific markup to html.", "django-markup-deprecated": "Original django.contrib.markup from Django 1.4.1.", "django-markupfield": "Custom Django field for easy use of markup in text fields", "django-markwhat": "A collection of template filters that implement common markup languages.", "django-masquerade": "django-masquerade", "django-mass-edit": "Make bulk changes in the Django admin interface", "django-material": "Material design for django forms and admin", "django-materializecss-form": "A simple Django form template tag to work with Materializecss", "django-mathfilters": "A set of simple math filters for Django", "django-mathjax": "MathJax easy integration with django", "django-matrix-field": "A Django app providing database and form fields for matrices (arrays of arrays).", "django-mdeditor": "A simple Django app to edit markdown text.", "django-measurement": "Convenient fields and classes for handling measurements", "django-mediagenerator": "Asset manager for Django", "django-mediasync": "Django static media development and distribution tools", "django-medusa": "A Django static website generator.", "django-memcache-admin": "Memcache administration tools for Django.", "django-memcache-status": "", "django-memcached": "django-memcached is a very simple reusable app which does one simple thing: shows you statistics about your currently running memcached instances", "django-memcached-hashring": "A Django cache backend for Memcached with consistent hashing.", "django-memcached-pool": "A Memcached Pool for Django", "django-memoize": "An implementation of memoization technique for Django.", "django-messages": "User-to-user messaging system for Django", "django-messages-extends": "A Django app for extends Django's messages framework, adds sticky messages and persistent messages", "django-messages-ui": "JS client-side messages plugin, with support for Djangocontrib.messages app", "django-meta": "Pluggable app for handling webpage meta tags and OpenGraph properties", "django-meta-mixin": "Social meta tags mixin for django-meta", "django-method-override": "Django Middleware for HTTP Method Override Form Params & Header", "django-microblogging": "django-microblogging", "django-missing": "Some missing features in Django. Are not missing anymore.", "django-mobile": "Detect mobile browsers and serve different template flavours to them.", "django-mobility": "Middleware and decorators for directing users to your mobile site.", "django-mockups": "Provides tools to auto generate content.", "django-model-utils": "Django model mixins and utilities", "django-modeladmin-reorder": "Custom ordering for the apps and models in the admin app.", "django-modelcluster": "Django extension to allow working with 'clusters' of models as a single unit, independently of the database", "django-modeldict": "Stores a model as a dictionary", "django-modeltranslation": "Translates Django models using a registration approach.", "django-money": "Adds support for using money and currency fields in django models and forms. Uses py-moneyed as the money implementation.", "django-mongodb-engine": "MongoDB backend for Django-nonrel", "django-mongokit": "Bridging Django to MongoDB with the MongoKit ODM", "django-mongonaut": "An introspective interface for Django and MongoDB", "django-mozilla-product-details": "Product and locale details for Mozilla products.", "django-mptt": "Utilities for implementing Modified Preorder Tree Traversal with your Django Models and working with trees of Model instances.", "django-mptt-admin": "Django-mptt-admin provides a nice Django Admin interface for Mptt models", "django-mssql": "Django backend database support for MS SQL Server.", "django-multidb-router": "Round-robin multidb router for Django.", "django-multiselectfield": "Django multiple select field", "django-multiupload": "Dead simple drop-in multi file upload field for django forms using HTML5's multiple attribute.", "django-munin": "Munin adaptor for Django", "django-mustachejs": "A Django template tag for embedding Mustache.js templates safely.", "django-mysql": "Django-MySQL extends Django's built-in MySQL and MariaDB support their specific features not available on other databases.", "django-mysql-pymysql": "Django MySQL backend for PyMySQL adapter", "django-mysqlpool": "Django database backend for MySQL that provides pooling ala SQLAlchemy.", "django-naomi": "Email backend for Django. Preview your email in browser instead of sending it.", "django-naremitimg": "A tiny Django app for performing image manipulations on the fly.", "django-native-tags": "Native, Pythonic Templatetags for Django", "django-nested-admin": "Django admin classes that allow for nested inlines", "django-nested-inline": "Recursive nesting of inline forms for Django Admin", "django-netfields": "Django PostgreSQL netfields implementation", "django-newsletter": "Django app for managing multiple mass-mailing lists with both plaintext as well as HTML templates (and pluggable WYSIWYG editors for messages), images and a smart queueing system all right from the admin interface.", "django-nine": "Version checking library.", "django-nocaptcha-recaptcha": "Django nocaptcha recaptcha form field/widget app.", "django-node": "Bindings and utils for integrating Node.js and NPM into a Django application", "django-nose": "Makes your Django tests simple and snappy", "django-notification": "User notification management for the Django web framework", "django-notifications-hq": "GitHub notifications alike app for Django.", "django-npm": "A django staticfiles finder that uses npm", "django-nvd3": "Django NVD3 - Chart Library for d3.js", "django-nyt": "A pluggable notification system written for the Django framework.", "django-oauth-plus": "Support of OAuth 1.0a in Django using python-oauth2.", "django-oauth-tokens": "Application for getting, refreshing and storing OAuth access_tokens for Django standalone applications", "django-oauth-toolkit": "OAuth2 Provider for Django", "django-oauth2-provider": "Provide OAuth2 access to your app", "django-object-actions": "A Django app for adding object tools for models in the admin", "django-object-tools": "Django app enabling painless creation of additional admin object tools.", "django-oembed": "A collection of Django tools which make it easy to changetext filled with oembed links into the embedded objects themselves.", "django-offsite-storage": "Cloud static and media file storage suitable for app containers", "django-oidc-provider": "OpenID Connect Provider implementation for Django.", "django-olwidget": "OpenLayers mapping widget for Django", "django-onlineuser": "A django app to count online users.", "django-open-humans": "Django module for interacting with Open Humans", "django-openid": "", "django-openid-auth": "OpenID integration for django.contrib.auth", "django-orderable": "Add manual sort order to Django objects via an abstract base class and admin classes.", "django-ordered-model": "Allows Django models to be ordered and provides a simple admin interface for reordering them.", "django-organizations": "Group accounts for Django", "django-oscar": "A domain-driven e-commerce framework for Django", "django-oscar-datacash": "Datacash payment module for django-oscar", "django-oscar-paypal": "Integration with PayPal Express, PayPal Payflow Pro and Adaptive Payments for django-oscar", "django-oscar-stores": "An extension for Oscar to include stores", "django-oscar-testsupport": "Testing utilities for Oscar", "django-otp": "A pluggable framework for adding two-factor authentication to Django using one-time passwords.", "django-overextends": "A Django reusable app providing the ability to use circular template inheritance.", "django-override-settings": "Provide a way to override Django's settings when running tests", "django-page-cms": "A tree based Django CMS application", "django-pageblocks": "Basic Pageblocks to go along with django-pagetree", "django-pagedown": "A Django app that allows the easy addition of Stack Overflow's 'PageDown' markdown editor to a django form field", "django-pagetree": "Tree of Pages helper application", "django-pagination": "django-pagination", "django-pagination-bootstrap": "Easy add pagination in Django, using Bootstrap's layout.", "django-pagination-py3": "django-pagination-py3", "django-paging": "An efficient paginator that works.", "django-pandas": "Tools for working with pydata.pandas in your Django projects", "django-pandora": "Opening Pandora's box by making django's request object available in a thread local.", "django-paranoia": "OWASP detection point reporting for Django", "django-parler": "Simple Django model translations without nasty hacks, featuring nice admin integration.", "django-parler-rest": "Multilingual support for django-rest-framework", "django-parsley": "Django app for client-side form validation. Wrapper for parsley.js", "django-password-reset": "Class-based views for password reset.", "django-passwords": "A Django reusable app that provides validators and a form field that checks the strength of a password", "django-payments": "Universal payment handling for Django", "django-paypal": "A pluggable Django application for integrating PayPal Payments Standard or Payments Pro", "django-pdb": "Easier pdb debugging for Django", "django-permission": "A enhanced permission system which enable logical permissionsystems to complex permissions", "django-permissions": "Generic per-object permissions for Django", "django-pgjson": "PostgreSQL json field support for Django.", "django-pglocks": "django_pglocks provides useful context managers for advisory locks for PostgreSQL.", "django-phone-field": "Lightweight model and form field for phone numbers in Django", "django-phonenumber-field": "An international phone number field for django models.", "django-photologue": "Powerful image management for the Django web framework.", "django-picklefield": "Pickled object field for Django", "django-pingback": "Pingback client/server implementation for Django framework.", "django-pipeline": "Pipeline is an asset packaging library for Django.", "django-pipeline-compass": "django-pipeline compiler for scss and with compass. Does not require the ruby gem.", "django-pipeline-compass-rubygem": "django-pipeline-compass-rubygem is a Compass compiler for django-pipeline using the original Compass Ruby Gem.", "django-pipeline-forgiving": "An extension of the django-pipeline storage backend which forgives missing files", "django-piston": "Piston is a Django mini-framework creating APIs.", "django-pjax": "Django-PJAX: The Django helper for jQuery-PJAX.", "django-plainpasswordhasher": "Dummy (plain text) password hashing for Django.", "django-plugins": "django-plugins.", "django-polls": "A simple polls app for django", "django-polymorphic": "Seamless polymorphic inheritance for Django models", "django-polymorphic-tree": "A polymorphic mptt structure to display content in a tree.", "django-portlets": "Generic portlets for Django.", "django-positions": "A Django field for custom model ordering", "django-post-office": "A Django app to monitor and send mail asynchronously, complete with template support.", "django-post-request-task": "A celery task class whose execution is delayed until after the request finishes", "django-postal": "A Django app for l10n of postal addresses.", "django-postgres-copy": "Quickly import and export delimited data with Django support for PostgreSQL's COPY command", "django-postgrespool": "Postgres Connection Pooling for Django.", "django-postman": "User-to-User messaging system for Django, with gateway to AnonymousUser, moderation and thread management, user & exchange filters, inbox/sent/archives/trash folders, support for apps: auto-complete, notification, mailer.", "django-powerdns-dnssec": "PowerDNS administration app for Django", "django-preferences": "Django app allowing users to set app specific preferences through the admin interface.", "django-prices": "Django fields for the prices module", "django-prices-openexchangerates": "openexchangerates.org support for django-prices", "django-prices-vatlayer": "vatlayer.com support for django", "django-profiles": "User-profile application for Django", "django-progressive-web-app": "A Django app to include a manifest.json and Service Worker instance to enable progressive web app behavior", "django-prometheus": "Django middlewares to monitor your application with Prometheus.io.", "django-proxy": "A simple HTTP proxy service as a Django app", "django-publisher": "Django external publishing app.", "django-pure-pagination": "django-pure-pagination provides advanced pagination features\n                   and is fully compatible with existing code based on Django's\n                   core \n                   pagination module. (aka no need to rewrite code!)", "django-push": "PubSubHubbub (PuSH) support for Django", "django-push-notifications": "Send push notifications to mobile devices through GCM, APNS or WNS and to browsers through WebPush (supported browsers: Chrome, Firefox and Opera) in Django", "django-pygments": "A django app that provides a template tag and 2 filters for                 doing syntax highlighting with Pygments", "django-pylibmc": "Django cache backend using pylibmc", "django-pylibmc-sasl": "Django cache backend using pylibmc-sasl", "django-pymemcache": "Django cache backend based on Pinterest's pymemcache client.", "django-pyodbc": "Django 1.5-1.10 SQL Server backend using pyodbc.", "django-pyodbc-azure": "Django backend for Microsoft SQL Server and Azure SQL Database using pyodbc", "django-pyscss": "Makes it easier to use PySCSS in Django.", "django-pytest": "django test runner to use py.test tests", "django-python3-ldap": "Django LDAP user authentication backend for Python 3.", "django-q": "A multiprocessing distributed task queue for Django", "django-qiniu-storage": "Django storage for Qiniu Cloud Storage", "django-qmethod": "Define methods on QuerySets without custom manager and QuerySet subclasses.", "django-qr-code": "An application that provides tools for displaying QR codes on your Django site.", "django-qrcode": "Django application that provides simple templatetags to generate QR-codes", "django-qsstats-magic": "A django microframework that eases the generation of aggregate data for querysets.", "django-querycount": "Middleware that Prints the number of DB queries to the runserver console.", "django-queryset-csv": "A simple python module for writing querysets to csv", "django-querysetsequence": "Chain together multiple (disparate) QuerySets to treat them as a single QuerySet.", "django-quieter-formset": "Django formset that's a bit quieter", "django-quizblock": "Basic Quiz PageBlock", "django-radiogrid": "Django radio grid field", "django-radius": "Django authentication backend for RADIUS", "django-rainbowtests": "A colorful Django Test Runner.", "django-randomfilenamestorage": "A Django storage backend that gives random names to files.", "django-ranged-response": "Modified Django FileResponse that adds Content-Range headers.", "django-ratelimit": "Cache-based rate-limiting for Django.", "django-ratelimit-backend": "Login rate-limiting at the auth backend level", "django-ratings": "Generic Ratings in Django", "django-raven-heka": "Django+Raven+heka integration", "django-raven-metlog": "Django+Raven+Meltog integration", "django-realtime": "an iShout.js client for Django", "django-recaptcha": "Django recaptcha form field/widget app.", "django-recaptcha-mozilla": "Mozilla fork of django recaptcha form field/widget app.", "django-recaptcha-works": "django-recaptcha-works provides a Django form field that integrates the reCaptcha service.", "django-recaptcha2": "Django reCaptcha v2 field/widget", "django-recurrence": "Django utility wrapping dateutil.rrule", "django-redirect-urls": "URL redirecting and rewriting in code.", "django-redis": "Full featured redis cache backend for Django.", "django-redis-cache": "Redis Cache Backend for Django", "django-redis-sessions": "Redis Session Backend For Django", "django-redisboard": "Redis monitoring and inspection drop-in application using django admin.", "django-registration": "An extensible user-registration application for Django", "django-registration-defaults": "Default templates and settings for James Bennett'sdjango-registration application.", "django-registration-redux": "An extensible user-registration application for Django", "django-render-block": "Render a particular block from a template to a string.", "django-report-builder": "Query and Report builder for Django ORM", "django-report-utils": "Common report functions used by django-report-builder and django-report-scaffold.", "django-representatives": "Base app for government representative", "django-representatives-votes": "Base app for government representative votes", "django-request": "django-request is a statistics module for django. It stores requests in a database for admins to see, it can also be used to get statistics on who is online etc.", "django-request-provider": "access django request object whenever you need it", "django-require": "A Django staticfiles post-processor for optimizing with RequireJS.", "django-require-s3": "An integration between django-require and the S3 storage backend from django-storages.", "django-reset-migrations": "Add one command to reset the migrations of one or more app", "django-resized": "Resizes image origin to specified size.", "django-rest": "Restful API for Django.", "django-rest-api": "Django REST API", "django-rest-auth": "Create a set of REST API endpoints for Authentication and Registration", "django-rest-framework": "alias.", "django-rest-framework-docs": "An inventory tool for Django Rest Framework v2 API", "django-rest-framework-mongoengine": "MongoEngine support for Django Rest Framework.", "django-rest-framework-social-oauth2": "python-social-auth and oauth2 support for django-rest-framework", "django-rest-knox": "Authentication for django rest framework", "django-rest-multiple-models": "Multiple model/queryset view (and mixin) for Django Rest Framework", "django-rest-swagger": "Swagger UI for Django REST Framework 3.5+", "django-reversion": "An extension to the Django web framework that provides version control for model instances.", "django-reversion-compare": "history compare for django-reversion", "django-review": "A reusable Django app that lets users write reviews for any model\n", "django-reviews": "Generic reviews for Django.", "django-revproxy": "Yet another Django reverse proxy application.", "django-richtemplates": "Richtemplates is a set of templates (surprise!), template tags, media files\nproviding presentation layer for Django based projects, similar to what\nRichfaces library offers for J2EE developers - not outstanding but still nice\nlooking and elegant.", "django-robots": "Robots exclusion application for Django, complementing Sitemaps.", "django-role-permissions": "A django app for role based permissions.", "django-rosetta": "A Django application that eases the translation of Django projects", "django-rq": "An app that provides django integration for RQ (Redis Queue)", "django-rss-plugin": "A Django CMS plugin to show a list of feeds.", "django-s3-folder-storage": "Quick extension of django-storages' S3BotoStorage to allow separate folders for uploaded and static media within an S3 bucket.", "django-s3-storage": "Django Amazon S3 file storage.", "django-s3direct": "Add direct uploads to S3 functionality with a progress bar to file input fields.", "django-safedelete": "Mask your objects instead of deleting them from your database.", "django-sampledatahelper": "Helper class for generate sampledata", "django-sass-processor": "SASS processor to compile SCSS files into *.css, while rendering, or offline.", "django-sayit": "A data store for speeches and transcripts to make them searchable and pretty.", "django-scheduler": "A calendaring app for Django.", "django-scribbler": "django-scribbler is an application for managing snippets of text for a Django website.", "django-secretballot": "Django anonymous voting application", "django-secure": "Utilities and a 'linter' to help you make your Django site more secure.", "django-seed": "Seed your Django project with fake data", "django-sekizai": "Django Sekizai", "django-select2": "Select2 option fields for Django", "django-select2-forms": "Django form fields using the Select2 jQuery plugin", "django-selectable": "Auto-complete selection widgets using Django and jQuery UI.", "django-selenium": "Django Selenium Integration", "django-sendfile": "Abstraction to offload file uploads to web-server (e.g. Apache with mod_xsendfile) once Django has checked permissions etc.", "django-sendgrid-v5": "An implementation of Django's EmailBackend compatible with sendgrid-python v5+", "django-sendmail-form": "A simple Django app that provides ability to send email about object, created using form", "django-sendsms": "A simple API to send SMS messages.", "django-sentry": "Exception Logging to a Database in Django", "django-serializers": "Customizable serialization for Django", "django-server-status": "Monitor server status with a healthcheck.\n", "django-ses": "A Django email backend for Amazon's Simple Email Service", "django-ses-backend": "A Django email backend for Amazon's Simple Email Service", "django-session-csrf": "CSRF protection for Django without cookies.", "django-session-security": "Client and server side session timeout with warnings", "django-settings-context-processor": "Makes specified django settings visible in template rendering context.", "django-settings-export": "This Django app allows you to export certain settings to your templates.", "django-sha2": "Enable strong password hashes (bcrypt+hmac or SHA-2) in Django by default.", "django-shell-plus": "django-admin.py shell+  <- shell with models auto-imported", "django-shop": "A RESTful e-commerce framework based on Django", "django-shopify-webhook": "A package for the creation of Shopify Apps using the Embedded App SDK.", "django-shorturls": "A URL shortening app for Django.", "django-shortuuidfield": "Short UUIDField for Django.  Good for use in urls & file names.  (Base 57, 22 characters)", "django-signals-ahoy": "signals-ahoy", "django-silk": "Silky smooth profiling for the Django Framework", "django-simple-autocomplete": "App enabling the use of jQuery UI autocomplete widget for ModelChoiceFields with minimal configuration required.", "django-simple-avatar": "django-simple-avatar", "django-simple-captcha": "A very simple, yet powerful, Django captcha application", "django-simple-email-confirmation": "Simple email confirmation for django.", "django-simple-history": "Store model history and view/revert changes from admin site.", "django-simple-import": "A Django import tool easy enough your users could use it", "django-simple-math-captcha": "An easy-to-use math field/widget captcha for Django forms.", "django-simple-menu": "Simple, yet powerful, code-based menus for Django applications", "django-simple-pagination": "A simple pagination app for Django.", "django-simple-ratings": "a simple, extensible rating system.", "django-simple-serializer": "Django Simple Serializer is a serializer to help user serialize django data or python list into json,xml,dict data in a simple way.", "django-simplegravatar": "A simpler Django template tag to add Gravatar support to your Django projects.", "django-singleton": "Reusable singleton models for Django", "django-sitegate": "Reusable application for Django to ease sign up & sign in processes", "django-sites": "Alternative implementation of django sites framework", "django-sites-groups": "Organize sites from the Django sites framework into groups.", "django-sitetree": "This reusable Django app introduces site tree, menu and breadcrumbs navigation elements", "django-six": "Django-six \u2014\u2014 Django Compatibility Library", "django-sizefield": "A model field to store a file size, whose edition and display shows units.", "django-slack": "Provides easy-to-use integration between Django projects and the Slack group chat and IM tool.", "django-slim": "Simple implementation of multi-lingual models for Django.", "django-slowdown": "A simple middleware to slow the django response.", "django-slug-helpers": "A simple model for redirecting from old slugs", "django-slug-preview": "An advanced slug field with URL previews.", "django-smart-selects": "Django application to handle chained model fields.", "django-smoketest": "Django smoketest framework", "django-smtp-ssl": "SMTP SSL email backend for Django", "django-smuggler": "Pluggable application for Django that helps you to import/export fixtures via the administration interface", "django-snippetscream": "Django app packaging the best snippets found on http://djangosnippets.org", "django-soapbox": "Site-wide and page-specific announcements/messages for Django sites", "django-social-auth": "Django social authentication made simple.", "django-social-auth-trello": "A django-social-auth plugin that integrates with Trello", "django-social-friends-finder": "An extension app for django-social-auth or django-allauth that fetches your friends from different social-networks.", "django-social-share": "Templatetags for 'tweet this' and 'share on facebook'", "django-socialregistration": "Django app providing registration through a variety of APIs", "django-socketio": "A Django app providing the features required to use websockets with Django via Socket.IO", "django-solo": "django-solo helps working with singletons: things like global settings that you want to edit from the admin site.", "django-sortedm2m": "Drop-in replacement for django's many to many field with sorted relations.", "django-sorting": "Like ericflo's django pagination, but this one does the sorting! used with ericflo's pagination, displaying tabular paginated and sortable data is very easy", "django-spaghetti-and-meatballs": "Its a spicy meatball for serving up fresh hot entity-relationship diagrams straight from your django models.", "django-sphinx": "An integration layer bringing Django and Sphinx Search together.", "django-sphinx-autodoc": "Autodoc all apps from a project to Sphinx", "django-spirit": "Spirit is a Python based forum powered by Django.", "django-split-settings": "Organize Django settings into multiple files and directories. Easily override and modify settings. Use wildcards and optional settings files.", "django-spurl": "A Django template library for manipulating URLs.", "django-sql-explorer": "A pluggable app that allows users (admins) to execute SQL, view, and export the results.", "django-sqlserver": "Django backend database support for MS SQL Server and pytds.", "django-sr": "Django settings resolver.", "django-sse": "HTML5 Server-Side Events for Django 1.3+", "django-sslify": "Force SSL on your Django site.", "django-sslserver": "An SSL-enabled development server for Django", "django-stagingcontext": "staging environment context processor", "django-standard-form": "Quick and simple django templatetags for displaying forms.", "django-star-ratings": "A Django app to add star ratings to models.", "django-static": "Template tags for better serving static files from templates in Django", "django-static-compiler": "A static file compiler for Django", "django-static-jquery": "jQuery packaged in an handy django app to speed up new applications and deployment.", "django-static-precompiler": "Django template tags to compile all kinds of static files (SASS, LESS, Stylus, CoffeeScript, Babel, LiveScript, Handlebars).", "django-staticfiles": "A Django app that provides helpers for serving static files.", "django-statici18n": "A Django app that provides helper for generating Javascript catalog to static files.", "django-staticmedia": "Dynamically get URLs for your site-level and app-level static media.", "django-statsd-mozilla": "Django interface with statsd", "django-stdimage": "Django Standarized Image Field", "django-storage-swift": "OpenStack Swift storage backend for Django", "django-storages": "Support for many storage backends in Django", "django-storages-redux": "Support for many storages (S3, MogileFS, etc) in Django.", "django-stripe-payments": "a payments Django app for Stripe", "django-stronghold": "Get inside your stronghold and make all your Django views default login_required", "django-stubs": "Mypy stubs for Django", "django-subdomain-instances": "A way of allowing subdomains to be served by the same project, and associating objects with particular subdomains.", "django-subdomains": "Subdomain tools for the Django framework, including subdomain-based URL routing.", "django-sudo": "Extra security for your sensitive pages", "django-suit": "Modern theme for Django admin interface.", "django-suit-ckeditor": "CKEditor (WYSIWYG editor) integration app for Django admin. http://ckeditor.com", "django-suit-redactor": "Imperavi Redactor (WYSIWYG editor) integration app for Django admin. http://imperavi.com/redactor/", "django-summernote": "Summernote plugin for Django", "django-sundial": "Django application providing database, form fields and middleware for timezone support.", "django-supervisor": "easy integration between djangocl and supervisord", "django-swaps": "Django-swaps is a social application that allows users of a Django site to swap anything for anything with each other.", "django-tables2": "Table/data-grid framework for Django", "django-tables2-reports": "With django-tables2-reports you can get a report (CSV, XLS) of any django-tables2 with minimal changes to your project", "django-tablib": "A wrapper around Kenneth Reitz' tablib to work with Django models.", "django-tag-parser": "Micro-library to easily write custom Django template tags", "django-tagging": "Generic tagging application for Django", "django-tagging-autocomplete": "Autocompletion for django-tagging", "django-tagging-ext": "Adds in new features to supplement django-tagging", "django-taggit": "django-taggit is a reusable Django application for simple tagging.", "django-taggit-autosuggest": "Autosuggestions for django-taggit", "django-taggit-serializer": "The Django Taggit serializer for tDjango REST Framework", "django-taggit-templatetags": "Templatetags for django-taggit.", "django-taggit-templatetags2": "Templatetags for django-taggit.", "django-tagulous": "Fabulous Tagging for Django", "django-tastypie": "A flexible & capable API layer for Django.", "django-tastypie-mongoengine": "MongoEngine support for django-tastypie.", "django-tastypie-swagger": "An adapter to use swagger-ui with django-tastypie", "django-template-analyzer": "Django Template Analyzer - Extract template nodes from a Django template", "django-template-debug": "A small collection of template tags for debugging and introspecting templates", "django-template-repl": "A readline shell for the Django template language.", "django-templateaddons": "A set of tools for use with templates of the Django framework: additional template tags, context processors and utilities for template tag development.", "django-templated-email": "A Django oriented templated / transaction email abstraction", "django-templated-mail": "Send emails using Django template system.", "django-templatesadmin": "A Django app to make minor changes to your templates on the fly.", "django-templatetag-handlebars": "Easily embed Handlebars.js templates in your django templates", "django-templatetag-sugar": "A library to make Django's template tags sweet.", "django-tenant-schemas": "Tenant support for Django using PostgreSQL schemas.", "django-test-extensions": "A few classes to make testing django applications easier", "django-test-plus": "django-test-plus provides useful additions to Django's default TestCase", "django-test-utils": "A package to help testing in Django", "django-test-without-migrations": "Disable migrations when running your Django tests.", "django-textclassifier": "Django text classifier validation", "django-threaded-multihost": "Django Threaded Multihost", "django-threadedcomments": "A simple yet flexible threaded commenting system.", "django-threadlocals": "Contains utils for storing and retreiving values from threadlocals, and middleware for placing the current Django request in threadlocal storage.", "django-thumbs": "Django-Thumbs is the easiest way to create thumbnails for your images with Django. Works with any StorageBackend.", "django-tidings": "Framework for asynchronous email notifications from Django", "django-timedeltafield": "TimedeltaField for django models", "django-timezone-field": "A Django app providing database and form fields for pytz timezone objects.", "django-timezones": "A Django reusable app to deal with timezone localization for users", "django-tinsel": "A python module for decorating function-based Django views", "django-tinymce": "A Django application that contains a widget to render a form field as a TinyMCE editor.", "django-tinymce-filebrowser": "Django-based file uploader and viewer for TinyMCE", "django-tinymce4-lite": "A Django application that provides a fully functional TinyMCE 4 editor widget for models and forms.", "django-tokenapi": "Add an API to your Django app using token-based authentication.", "django-toolbelt": "A simple collection of common Django utilities.", "django-tools": "miscellaneous tools for django", "django-tracking2": "django-tracking2 tracks the length of time visitors and registered users spend on your site", "django-transaction-hooks": "Django database backends that permit registering post-transaction-commit hooks", "django-transactional-cleanup": "Deletes old files on transaction commit.", "django-transmeta": "Transmeta is an application for translatable content in Django's models.", "django-treebeard": "Efficient tree implementations for Django", "django-twilio": "Build Twilio functionality into your Django apps.", "django-twitter-api": "Django implementation for Twitter API", "django-twitter-bootstrap": "Provides a Django app whose static folder contains Bootstrap assets", "django-two-factor-auth": "Complete Two-Factor Authentication for Django", "django-typogrify": "Make type not look like crap (for django apps)", "django-uni-form": "django-uni-form", "django-url-filter": "Django URL Filter provides a safe way to filter data via human-friendly URLs.", "django-urlauth": "Django application for user authentication with key in hypertext link", "django-user-accounts": "a Django user account app", "django-user-agents": "A django package that allows easy identification of visitors' browser, operating system and device information (mobile phone, tablet or has touch capabilities).", "django-user-media": "A reusable app to graceously handle files that your users might upload, such", "django-user-sessions": "Django sessions with a foreign key to the user", "django-user-tasks": "Management of user-triggered asynchronous tasks in Django projects", "django-userena": "Complete user management application for Django", "django-users2": "Custom user model for django >=1.11 with support for multiple user types", "django-utils": "Utilities for Django", "django-utils2": "Django Utils is a module with some convenient utilities not included with the standard Django install", "django-uuid-upload-path": "Generate short UUIDs and use them as paths for uploaded media files in Django.", "django-uuidfield": "UUIDField in Django", "django-uuslug": "A Django slugify application that guarantees uniqueness and handles unicode.", "django-vanilla-views": "Beautifully simple class based views.", "django-versatileimagefield": "A drop-in replacement for django's ImageField that provides a flexible, intuitive and easily-extensible interface for creating new images from the one assigned to the field.", "django-viewflow": "Reusable workflow library for django", "django-vkontakte-api": "Django implementation for vkontakte API", "django-vkontakte-groups": "Django implementation for vkontakte API Groups", "django-vkontakte-users": "Django implementation for vkontakte API Users", "django-vote": "A simple Django app to conduct vote.", "django-voting": "Generic voting application for Django", "django-waffle": "A feature flipper for Django.", "django-wakawaka": "A simple Django based wiki system.", "django-watchman": "django-watchman exposes a status endpoint for your backing services", "django-watson": "Full-text multi-table search application for Django. Easy to install and use, with good performance.", "django-weasyprint": "Django WeasyPrint CBV", "django-webpack": "Generate Webpack bundles from a Django application.", "django-webpack-loader": "Transparently use webpack with django", "django-websocket": "Abandoned, use channels instead: https://github.com/andrewgodwin/channels/", "django-websocket-redis": "Websocket support for Django using Redis as datastore", "django-webtest": "Instant integration of Ian Bicking's WebTest (http://docs.pylonsproject.org/projects/webtest/) with django's testing framework.", "django-werkzeug-debugger-runserver": "Replaces Django's runserver command with one that includes the Werkzeug debugger (shamelessly ripped out of django-extensions)", "django-widget-tweaks": "Tweak the form field rendering in templates, not in python-level form definitions.", "django-widgets-improved": "Tweak the form field rendering in templates, not in python-level form definitions.", "django-wikiapp": "A simple pluggable wiki application for Django with revision and multiple markup support.", "django-wkhtmltopdf": "Converts HTML to PDF using wkhtmltopdf.", "django-wmd-editor": "UNKNOWN", "django-workflows": "Generic workflow engine for Django.", "django-wpadmin": "WordPress look and feel for Django administration panel.", "django-wsgiserver": "django-wsgiserver installs a web server for Django using CherryPy's WSGI server.", "django-wysiwyg": "django-wysiwyg", "django-wysiwyg-redactor": "django-wysiwyg-redactor is a lightweight responsive wysiwyg editor for Django", "django-xadmin": "Drop-in replacement of Django admin comes with lots of goodies, fully extensible with plugin support, pretty UI based on Twitter Bootstrap.", "django-xhtml2pdf": "A Django app to generate pdfs from templates", "django-xmlrpc": "XML-RPC Server App for the Django framework.", "django-yamlfield": "A Django database field for storing YAML data", "django-zurb-foundation": "Django Zurb Foundation package.", "django.js": "Django JS Tools", "django.js-vinta": "Django JS Tools", "django4facebook": "Facebook integration for your Django website.", "django_chartit": "A Django app to plot charts and pivot charts directly from the models. Uses HighCharts and jQuery JavaScript libraries to render the charts on the webpage.", "django_evolution": "A database schema evolution tool for the Django web framework.", "django_model_documentation": "Django Application for output a documentation of apps models", "django_openstack_auth": "Django authentication backend for use with OpenStack Identity", "djangoaddattr": "djangoaddattr", "djangoajax": "Powerful and easy AJAX framework for django applications.", "djangocms-admin-style": "Adds pretty CSS styles for the django CMS admin interface.", "djangocms-apphook-setup": "Library to auto setup apphooks", "djangocms-attributes-field": "Adds attributes to Django models.", "djangocms-blog": "A djangoCMS 3 blog application", "djangocms-bootstrap3": "Templates and templatetags to be used with django-CMS and Bootstrap3.", "djangocms-cascade": "Build Single Page Applications using the Django-CMS plugin system", "djangocms-column": "Column Plugin for django CMS", "djangocms-file": "Adds file plugin to django CMS", "djangocms-flash": "Flash plugin for django CMS", "djangocms-googlemap": "Adds Google Maps plugins to django CMS.", "djangocms-grid": "Grid Plugin for django CMS", "djangocms-helper": "Helper for django applications development", "djangocms-inherit": "Inherit plugin for django CMS", "djangocms-installer": "Command to easily bootstrap django CMS projects", "djangocms-link": "Adds a link plugin to django CMS", "djangocms-page-meta": "OpenGraph, Twitter Card and Google+ snippet tags for django CMS 3 pages", "djangocms-picture": "Adds an image plugin to django CMS", "djangocms-snippet": "Adds snippet plugin to django CMS.", "djangocms-style": "Adds style plugin to django CMS", "djangocms-table": "Table Plugin for django CMS", "djangocms-teaser": "Teaser plugin for django CMS", "djangocms-text-ckeditor": "Text Plugin for django CMS with CKEditor support", "djangocms-utils": "Utilities for django-cms", "djangocms-video": "Adds video plugin to django CMS.", "djangohelpers": "a collection of useful middleware, template tags, etc", "djangorestframework": "Web APIs for Django, made easy.", "djangorestframework-bulk": "Django REST Framework bulk CRUD view mixins", "djangorestframework-camel-case": "Camel case JSON support for Django REST framework.", "djangorestframework-csv": "CSV Tools for Django REST Framework", "djangorestframework-expiring-authtoken": "Expiring Authentication Tokens for Django REST Framework", "djangorestframework-filters": "Better filtering for Django REST Framework", "djangorestframework-gis": "Geographic add-ons for Django Rest Framework", "djangorestframework-hstore": "Django Rest Framework tools for django-hstore", "djangorestframework-jsonapi": "A Django REST framework API adapter for the JSON API spec.", "djangorestframework-jsonp": "JSONP support for Django REST Framework", "djangorestframework-jwt": "JSON Web Token based authentication for Django REST framework", "djangorestframework-oauth": "OAuth support for Django REST Framework", "djangorestframework-recursive": "Recursive Serialization for Django REST framework", "djangorestframework-simplejwt": "A minimal JSON Web Token authentication plugin for Django REST Framework", "djangorestframework-stubs": "PEP-484 stubs for django-rest-framework", "djangorestframework-xml": "XML support for Django REST Framework", "djangorestframework-yaml": "YAML support for Django REST Framework", "djangorestless": "A RESTful framework for Django", "djangosaml2": "pysaml2 integration for Django", "djangoshop-stripe": "Stripe Payment Provider Integration for django-shop", "djangotoolbox": "Djangotoolbox for Django-nonrel", "djangoueditor": "A Django application for Baidu Ueditor.", "djangowind": "Django Authentication backend for CAS", "djangular": "A reusable app that provides better app integration with AngularJS.", "djappsettings": "Per-app default settings for Django", "djblets": "A collection of useful classes and functions for developing large-scale Django-based web applications.", "djet": "Set of helpers for easy testing of Django apps.", "djmail": "Simple, powerful and non-obstructive django email middleware.", "djongo": "Driver for allowing Django to use MongoDB as the database backend.", "djorm-ext-core": "Core module of django orm extensions package. Is a collection of third party plugins build in one unified package.", "djorm-ext-expressions": "Facility of complex sql expressions for Django orm.", "djorm-ext-hstore": "Hstore module of django orm extensions package (collection of third party plugins build in one unified package).", "djorm-ext-pgarray": "PostgreSQL native array fields extension for Django.", "djorm-ext-pgfulltext": "PostgreSQL Full Text Search integration with django orm.", "djorm-pgarray": "PostgreSQL native array fields extension for Django.", "djoser": "REST version of Django authentication system.", "djrill": "Mandrill transactional email for Django", "djtables": "Declarative HTML table builder for Django", "djurls": "Decorator for mapping Django URLs.", "djutils": "Utilities for use with the django web framework", "dk": "The Datakortet Basic utilities package: `dk`.", "dlib": "A toolkit for making real world machine learning and data analysis applications", "dlint": "Dlint is a tool for encouraging best coding practices and helping ensure Python code is secure.", "dlipower": "Control digital loggers web power switch", "dm": "Dict to Data mapper", "dm-control": "Continuous control environments and MuJoCo Python bindings.", "dm-sonnet": "Sonnet is a library for building neural networks in TensorFlow.", "dm.xmlsec.binding": "Cython/lxml based binding for the XML security library -- for lxml 3.x", "dnet": "low-level networking library", "dns": "", "dns-lexicon": "Manipulate DNS records on various DNS providers in a standardized/agnostic way", "dnschain": "A Python DNSChain library", "dnsimple-dyndns": "Dynamic DNS implementation, that relies on DNSimple.com.", "dnslib": "Simple library to encode/decode DNS wire-format packets", "dnspython": "DNS toolkit", "dnspython3": "A DNS toolkit for Python 3.x", "dnsq": "DNS Query Tool", "do": "", "do_runin": "A tool that starts a DigitalOcean droplet in a given region and runs a given command, displaying the output. Opens a shell if requested. Destroys the droplet upon command completion or shell closure.", "doc2dash": "Convert docs to Dash.app", "doc8": "Style checker for Sphinx (or other) RST documentation", "docfly": "A utility tool to help you build better sphinx documents.", "docformatter": "Formats docstrings to follow PEP 257.", "docker": "A Python library for the Docker Engine API.", "docker-compose": "Multi-container orchestration for Docker", "docker-py": "Python client for Docker.", "docker-pycreds": "Python bindings for the docker credentials store API", "docker-registry-core": "Docker registry core package", "docker-tag-naming": "Name and query docker tags", "dockerfile-parse": "Python library for Dockerfile manipulation", "dockerflow": "Python tools and helpers for Mozilla's Dockerflow", "dockerpty": "Python library to use the pseudo-tty of a docker container", "dockerspawner": "Dockerspawner: A custom spawner for Jupyterhub.", "docopt": "Pythonic argument parser, that will make you smile", "docopts": "Shell interface for docopt, the command-line interface description language.", "docrepr": "docrepr renders Python docstrings in HTML", "docs": "Turn your Python script into a report with inline figures.", "doct": "A read-only dottable dictionary", "doctest-ignore-unicode": "Add flag to ignore unicode literal prefixes in doctests", "doctr": "Deploy docs from Travis to GitHub pages.", "document": "Wraps dicts in an object for convenient document management", "documentation": "a simple package", "documenteer": "Tools for LSST DM documentation projects", "documenttemplate": "Document Templating Markup Language (DTML)", "docutils": "Docutils -- Python Documentation Utilities", "docutils-ast-writer": "AST Writer for docutils", "docx": "The docx module creates, reads and writes Microsoft Office Word 2007 docx files", "docx2txt": "A pure python-based utility to extract text and images from docx files.", "docxtpl": "Python docx template engine", "dodgy": "Dodgy: Searches for dodgy looking lines in Python code", "dog": "Fetch missing man pages.", "dogapi": "Python bindings to Datadog's API and a user-facing command line tool.", "dogpile": "A 'dogpile' lock, typically used as a component of a larger caching solution", "dogpile.cache": "A caching front-end based on the Dogpile lock.", "dogpile.core": "A 'dogpile' lock, typically used as a component of a larger caching solution", "dogslow": "A Django middleware that logs tracebacks of slow requests.", "dogstatsd-python": "Python bindings to Datadog's API and a user-facing command line tool.", "dogtag-pki": "Client library for Dogtag Certificate System", "doing": "doing implements hierarchical command lines", "doit": "doit - Automation Tool", "dojson": "DoJSON is a simple Pythonic JSON to JSON converter.", "dolmen.app.content": "Dolmen applications content utilities", "dolmen.app.layout": "Layout and page models for Dolmen applications", "dolmen.app.security": "Dolmen application security declarations", "dolmen.app.viewselector": "Dolmen Layout/View Selector", "dolmen.authentication": "Authentication for Grok applications", "dolmen.content": "Dolmen content type framework", "dolmen.forms.base": "Form utilities for Dolmen and zeam.form", "dolmen.forms.crud": "CRUD forms and actions for `dolmen.content`", "dolmen.menu": "Dolmen menus composer", "dolmen.widget.image": "Image widget (with thumbnails) for z3c.form, using Grok", "domainclassifier": "DomainClassifier is a Python library to extract and classify Internet domains/hostnames/IP addresses from raw unstructured text files following their existence, localization or attributes.", "dominate": "Dominate is a Python library for creating and manipulating HTML documents using an elegant DOM API.", "don": "Dot Object Notation (DON) parser.", "done": "simple, elegant command line todo list tool", "doorbirdpy": "Python wrapper for the DoorBird LAN API v0.21", "dop": "A Python client for the Digital Ocean API", "dopamine-rl": "Dopamine: A framework for flexible Reinforcement Learning research", "dopy": "Python client for the Digital Ocean API", "dota2py": "Python tools for Dota 2", "dotcloud": "dotCloud command-line interface client", "dotcloud.cli": "dotCloud command-line interface client", "dotenv": "Handle .env files", "dotmap": "ordered, dynamically-expandable dot-access dictionary", "doublemetaphone": "Python wrapper for C++ Double Metaphone", "doublex": "Python test doubles", "doublex-expects": "Expects matchers for Doublex test doubles assertions", "dovado": "Communicate with Dovado router", "down": "A CLI tool to check if a site or a list of sites are down or up", "downhill": "Stochastic optimization routines for Theano", "download": "A quick module to help downloading files using python.", "downwards": "downwards lets you read a wikipedia page on command line as a manpage.", "doxypypy": "A Doxygen filter for Python", "dozer": "WSGI Middleware version of the CherryPy memory leak debugger", "dparse": "A parser for Python dependency files", "dpath": "Filesystem-like pathing and searching for dictionaries", "dpdata": "Manipulating data formats of DeePMD-kit, VASP, QE, and LAMMPS, etc.", "dpkt": "fast, simple packet creation / parsing, with definitions for the basic TCP/IP protocols", "dpkt-fix": "dumb packet module", "dql": "DynamoDB Query Language", "dqsegdb": "Client library for DQSegDB", "dqsegdb2": "Simplified python interface to DQSEGDB", "dr": "An ed-like devRant client", "draftjs-exporter": "Library to convert rich text from Draft.js raw ContentState to HTML", "draftjs-sanitizer": "Convert basic HTML into DraftJS JSON format.", "dragon": "General utilities and useful extensions for other packages", "dramatiq": "Background Processing for Python 3.", "dredd_hooks": "Python Hooks Bridge for Dredd API Testing Framework", "drest": "HTTP/REST Client Library for Python", "drf-compound-fields": "Django-REST-framework serializer fields for compound types.", "drf-dynamic-fields": "Dynamically return subset of Django REST Framework serializer fields", "drf-extensions": "Extensions for Django REST Framework", "drf-flex-fields": "Flexible, dynamic fields and nested resources for Django REST Framework serializers.", "drf-haystack": "Makes Haystack play nice with Django REST Framework", "drf-json-api": "A parser and renderer for Django REST Framework that adds support for the JSON API specification.", "drf-nested-routers": "Nested resources for the Django Rest Framework", "drf-writable-nested": "Writable nested helpers for django-rest-framework's serializers", "drf-yasg": "Automated generation of real Swagger/OpenAPI 2.0 schemas from Django Rest Framework code.", "drfdocs": "Documentation for Web APIs made with Django Rest Framework.", "driver": "Support for Pytorch programs.", "drmaa": "a python DRMAA library", "dronekit": "Developer Tools for Drones.", "dronekit-sitl": "DroneKit library to run SITL (simulation environment)", "droopescan": "A plugin-based scanner that aids security researchers in identifying issues with several CMSs: Drupal, Wordpress, Moodle and SilverStripe. https://github.com/droope/droopescan", "droopy": "Little library for text analysis", "dropbox": "Official Dropbox API Client", "drumhat": "An 8 pad finger Drum HAT for your Raspberry Pi", "dry-rest-permissions": "Rules based permissions for the Django Rest Framework", "dryscrape": "a lightweight Javascript-aware, headless web scraping library for Python", "dtool-cli": "Data management command line tool: dtool.", "dtoolcore": "Core API for managing (scientific) data", "duckling": "A wrapper for wit.ai's Duckling", "duecredit": "Publications (and donations) tracer", "dukpy": "Simple JavaScript interpreter for Python", "dulwich": "Python Git Library", "dumb-init": "Simple wrapper script which proxies signals to a child", "dummy": "Dummy package adding, subtracting or multiplying two numbers - to try releasing a Python package", "dumptruck": "Relaxing interface to SQLite", "duo-client": "Reference client for Duo Security APIs", "duplicates": "Find identical files in subdirectories", "duplicity": "Encrypted backup using rsync algorithm", "durationpy": "Module for converting between datetime.timedelta and Go's Duration strings.", "duvet": "A GUI tool for visualizing code coverage results.", "dvc": "Git for data scientists - manage your code and data together", "dwave-cloud-client": "A minimal client for interacting with D-Wave cloud resources.", "dwave-neal": "General Ising graph simulated annealing solver", "dwave-networkx": "A NetworkX extension providing graphs and algorithms relevent to working with the D-Wave System", "dwave-ocean-sdk": "Software development kit for open source D-Wave tools", "dwave-qbsolv": "", "dwave-system": "All things D-Wave System.", "dweepy": "Dweepy is a Python client for dweet.io", "dxlbootstrap": "OpenDXL Bootstrap Application", "dxlclient": "McAfee Data Exchange Layer Client", "dynaconf": "The dynamic configurator for your Python Project", "dynamic": "Class to create dynamic objects.", "dynamo3": "Python 3 compatible library for DynamoDB", "dynash": "Command line client for DynamoDB", "dynd": "Python exposure of DyND", "dynet": "The Dynamic Neural Network Toolkit", "each": "A tool for running programs on many inputs", "eagle": "Eagle is an abstraction layer atop Graphical Toolkits focused on\nmaking simple applications easy to build while powerful in features.", "earthengine-api": "Earth Engine Python API", "easily": "easily", "easy": "A simple PaaS CLI which is inspired by Heroku.", "easy-thumbnails": "Easy thumbnails for Django", "easy_install": "A best practices guide for Python", "easybuild-easyblocks": "Python modules which implement support for installing particular (groups of) software packages with EasyBuild.", "easybuild-framework": "The EasyBuild framework supports the creation of custom easyblocks that implement support for installing particular (groups of) software packages.", "easydev": "Common utilities to ease the development of Python packages", "easydict": "Access dict values as attributes (works recursively).", "easygui": "EasyGUI is a module for very simple, very easy GUI programming in Python.  EasyGUI is different from other GUI generators in that EasyGUI is NOT event-driven.  Instead, all GUI interactions are invoked by simple function calls.", "easyimap": "Simple imap wrapper.", "easypost": "EasyPost Shipping API Client Library for Python", "easyprocess": "Easy to use python subprocess interface.", "easyquotation": "A utility for Fetch China Stock Info", "easysetup": "Helps creating a package distribution setup, that also runs tests, checkers and creates HTML and PDF documentation, for Windows users.", "easytrader": "A utility for China Stock Trade", "easyutils": "A utility for China Stock", "easywatch": "super simple directory monitoring", "easywebdav": "A straight-forward WebDAV client, implemented using Requests", "easywidgets": "A minimalistic approach to HTML generation and validation with TurboGears", "eazymp": "Easily and lazily make your Python code in parallel", "ebaysdk": "eBay SDK for Python", "ebooklib": "Ebook library which can handle EPUB2/EPUB3 and Kindle format", "ebusdpy": "eBusd python integration library", "ec": "ec - a cli interface for python modules.", "ec2-metadata": "An easy interface to query the EC2 metadata API, with caching.", "ecdsa": "ECDSA cryptographic signature library (pure python)", "echarts-china-cities-pypkg": "pyecharts map extension - china cities - python package", "echarts-china-counties-pypkg": "pyecharts map extension - china counties - python package", "echarts-china-provinces-pypkg": "Python package for chinese provinces for pyecharts", "echarts-countries-pypkg": "pyecharts map extensions - world countries - python package", "echo": "Callback Properties in Python", "ecoaliface": "Interface to eSterownik.pl eCoal water boiler controller.", "ecos": "This is the Python package for ECOS: Embedded Cone Solver. See Github page for more information.", "ed25519": "Ed25519 public-key signatures", "ed25519ll": "A low-level ctypes wrapper for Ed25519 digital signatures.", "edc-action-item": "Add patient action items to clinicedc/edc projects", "edc-adverse-event": "Adverse event and death classes.", "edc-appointment": "Appointment module for clinicedc/edc projects", "edc-auth": "Authentication for clinicedc/edc projects.", "edc-consent": "Base models, forms and admin for participant ICF for clinicedc/edc projects.", "edc-constants": "Common constants & choices for clinicedc/edc projects.", "edc-dashboard": "Dashboard classes, templates for clinicedc/edc projects.", "edc-data-manager": "Data manager administrative models and classes", "edc-device": "Get info on a data collection device for clinicedc/edc", "edc-export": "Base models, forms and admin for participant locator in the Edc.", "edc-facility": "Define clinic facilities for clinicedc/edc projects", "edc-form-describer": "Describe clinicedc/edc forms in markdown", "edc-form-label": "Customize Django's form label in realtime", "edc-form-validators": "Form validator classes for django ModelForms", "edc-identifier": "Manage identifiers in the Edc", "edc-lab": "LIMS/lab classes for clinicedc/edc projects", "edc-lab-dashboard": "Lab dashboard views for clinic/edc projects", "edc-locator": "Base models, forms and admin for participant locator in the Edc.", "edc-metadata": "Add a metadata layer to data entry.", "edc-metadata-rules": "Create rules to manipulate metadata (edc-metadata)", "edc-model": "Base model mixins clinicedc/edc projects.", "edc-model-admin": "Edc custom django ModelAdmin mixins, tags and templates.", "edc-model-wrapper": "Model wrappers that add dashboard methods for clinic/edc.", "edc-navbar": "Simple navbar classes for clinic/edc", "edc-notification": "Simple notification classes for clinic/edc", "edc-offstudy": "Base classes for off study process in the Edc.", "edc-pharmacy": "Pharmacy module for clinicedc/edc projects", "edc-protocol": "Protocol specific variables for clinicedc/edc.", "edc-randomization": "Randomization classes for clinicedc/edc projects.", "edc-reference": "Pivoted reference model for clinicedc/edc modules", "edc-registration": "Patient registration module.", "edc-reportable": "Reportable clinic events, reference ranges, grading", "edc-sites": "Simple classes related to the django sites framework for clinicedc projects.", "edc-subject-dashboard": "Subject dashboard classes for clinicedc/edc projects", "edc-test-utils": "Class and functions for tests for clinicedc/edc projects", "edc-timepoint": "Lock a timepoint from further editing once data is cleaned and reviewed.", "edc-utils": "Simple utilities for clinicedc/edc projects.", "edc-visit-schedule": ".", "edc-visit-tracking": "Base classes for visit reports/tracking in clinicedc/edc.", "eddiebrowser": "A CGI interface to browse RRD graphs of system statistics.", "edgegrid-python": "{OPEN} client authentication protocol for python-requests", "editdistance": "Fast implementation of the edit distance(Levenshtein distance)", "editorconfig": "EditorConfig File Locator and Interpreter for Python", "edward": "A library for probabilistic modeling, inference, and criticism", "edx-auth-backends": "Custom edX authentication backends and pipeline steps", "edx-ccx-keys": "Opaque key support custom courses on edX", "edx-django-oauth2-provider": "edX fork of django-oauth2-provider", "edx-django-release-util": "edx-django-release-util", "edx-django-sites-extensions": "Custom extensions for the Django sites framework", "edx-django-utils": "EdX utilities for Django Application development.", "edx-drf-extensions": "edX extensions of Django REST Framework", "edx-ecommerce-worker": "Celery tasks supporting the operations of edX's ecommerce service", "edx-enterprise": "Your project description goes here", "edx-i18n-tools": "edX Internationalization Tools", "edx-lint": "edX-authored pylint checkers", "edx-oauth2-provider": "Provide OAuth2 access to edX installations", "edx-opaque-keys": "", "edx-organizations": "Organization management module for Open edX", "edx-rest-api-client": "Slumber client used to access various edX Platform REST APIs.", "edx-search": "Search and index routines for index access", "edx-sphinx-theme": "A Sphinx theme for Open edX documentation", "edx-submissions": "An API for creating submissions and scores.", "ee": "A wrapper for dd", "eea.converter": "SVG, PNG, PDF converters using external tools as ImageMagick", "eea.faceted.vocabularies": "EEA Faceted Vocabularies", "eea.facetednavigation": "EEA Faceted Navigation", "eea.jquery": "jQuery library and plugins for Plone", "eebrightbox": "Connector for EE BrightBox routers.", "eel": "For little HTML GUI applications, with easy Python/JS interop", "effect": "pure effects for Python", "efilter": "EFILTER query language", "eg": "Examples at the command line", "egenix-mx-base": "eGenix mx Base Distribution for Python - mxDateTime, mxTextTools, mxProxy, mxTools, mxBeeBase, mxStack, mxQueue, mxURL, mxUID", "egghatch": "Cuckoo Sandbox Shellcode Identification & Formatting", "eight": "Python 2 to the power of 3. A lightweight porting helper library.", "einder": "API wrapper for Samsumgs set-top boxes SMT-G7400 and SMT-G7401.", "either": "\"Either\" and \"Maybe\" data structures", "elaphe": "Generates various barcodes using barcode.ps and PIL/Pillow", "elastic-apm": "The official Python module for Elastic APM", "elasticsearch": "Python client for Elasticsearch", "elasticsearch-curator": "Tending your Elasticsearch indices", "elasticsearch-dsl": "Python client for Elasticsearch", "elasticutils": "Chainable, iterative interface to querying Elasticsearch", "elements": "Python XML Elements Library", "elementtree": "ElementTree - a light-weight XML object model for Python.", "eli5": "Debug machine learning classifiers and explain their predictions", "eliot": "Logging library that tells you why it happened", "eliot-tree": "Render Eliot logs as an ASCII tree", "eliqonline": "Eliq Online API Library", "elixir": "Declarative Mapper for SQLAlchemy", "elkm1-lib": "Library to interacting with ElkM1 alarm/automation panel.", "ella": "Ella - Django powered CMS", "elpy": "Tombstone package for elpy to not break accidental dependencies", "emacs": "UNKNOWN", "email": "Standalone email package", "email-validator": "A robust email syntax and deliverability validation library for Python 2.x/3.x.", "email_reply_parser": "Email reply parser", "emails": "Modern python library for emails.", "embedly": "Python Library for Embedly", "ember-compressor-compiler": "django_compressor filter to compile ember templates", "emcee": "The Python ensemble sampling toolkit for MCMC", "emeraldtree": "EmeraldTree - a light-weight XML object model for Python.", "emoji": "Emoji for Python", "empy": "A templating system for Python.", "empyrical": "empyrical is a Python library with performance and risk statistics commonly used in quantitative finance", "en": "en", "enable": "low-level drawing and interaction", "enaml": "Declarative DSL for building rich user interfaces in Python", "encore": "Low-level core modules for building Python applications", "end": "Introduces \"end\" keyword to Python.", "enocean": "EnOcean serial protocol implementation", "enough": "Helping journalists and human rights defefenders to communicate securely and privately", "enstaller": "Install and managing tool for egg-based packages", "ensure": "Literate BDD assertions in Python with no magic", "entium": "A command line tool to read entwine's convert into Cesium 3DTiles", "entropy": "extension module for calculating entropy fast", "entrypoint2": "easy to use command-line interface for python modules, fork of entrypoint", "entrypoints": "Discover and load entry points from installed packages.", "enturclient": "An API client for public transport data from Entur.", "enum": "Robust enumerated type support in Python.", "enum-compat": "enum/enum34 compatibility package", "enum34": "Python 3.4 Enum backported to 3.3, 3.2, 3.1, 2.7, 2.6, 2.5, and 2.4", "env": "Environment Variables for Humans", "env-excavator": "Tools for exconverting environment variables to native python objects", "env-tools": "Tools for using .env files in Python", "envdir": "A Python port of daemontools' envdir.", "envelopes": "Mailing for human beings", "environ": "Stack Based Globals Management", "environment": "This library provides parsing and validation of environment variables.", "environs": "simplified environment variable parsing", "envirophat": "Enviro pHAT environmental sensor board driver", "envisage": "Extensible application framework", "envoy": "Simple API for running external processes.", "envparse": "Simple environment variable parsing", "envs": "Easy access of environment variables from Python with support for strings, booleans, list, tuples, and dicts.", "envvars": "Get and Set environment variables using .env file", "enzyme": "Python video metadata parser", "epab": "Etcher's Python Application Builder", "epc": "EPC (RPC stack for Emacs Lisp) implementation in Python", "ephem": "Compute positions of the planets and stars", "epio": "The command-line client for the ep.io service", "epsilon": "A set of utility modules used by Divmod projects", "epson-projector": "Epson projector support for Python", "epsonprinter": "Communication package for Epson Workforce printer", "epydoc": "Edward Loper's API Documentation Generation Tool", "epyparse": "Generate API info for Python Packages via Epydoc", "eradicate": "Removes commented-out code.", "eralchemy": "Simple entity relation (ER) diagrams generation", "erik": "Erik Misc", "erlpack": "A high performance erlang term encoder for Python.", "erp": "Resource Planning System", "erppeek": "Versatile tool for browsing Odoo / OpenERP data", "errand-boy": "Establish a connection to the errand-boy deamon to execute commands without the memory overhead incurred by os.fork().", "errbot": "Errbot is a chatbot designed to be simple to extend with plugins written in Python.", "errors": "UNKNOWN", "es": "A Python Event-Sourcing (ES) framework.", "escapism": "Simple, generic API for escaping strings.", "ese": "Tool to export Elasticsearch index from one cluster to another cluster", "esky": "keep frozen apps fresh", "esmre": "Regular expression accelerator", "esprima": "ECMAScript parsing infrastructure for multipurpose analysis in Python", "esptool": "A serial utility to communicate & flash code to Espressif ESP8266 & ESP32 chips.", "et": "Simple package to phone home by sending and receiving arbitrary dictionaries via UDP  ", "et_xmlfile": "An implementation of lxml.xmlfile for the standard library", "etc": "An etcd Python client library", "etcd3": "Python client for the etcd3 API", "etcd3gw": "A python client for etcd3 grpc-gateway v3 API", "ete2": "A Python Environment for (phylogenetic) Tree Exploration", "ete3": "A Python Environment for (phylogenetic) Tree Exploration", "eternalegypt": "Netgear LTE modem API", "eth-abi": "Ethereum ABI Utils", "eth-account": "eth-account: Sign Ethereum transactions and messages with local private keys", "eth-bloom": "Python implementation of the Ethereum Trie structure", "eth-hash": "eth-hash: The Ethereum hashing function, keccak256, sometimes (erroneously) called sha3", "eth-keyfile": "A library for handling the encrypted keyfiles used to store ethereum private keys.", "eth-keys": "Common API for Ethereum key operations.", "eth-rlp": "eth-rlp: RLP definitions for common Ethereum objects in Python", "eth-tester": "Tools for testing Ethereum applications.", "eth-testrpc": "An Ethereum simulator for aiding smart contract development.", "eth-typing": "eth-typing: Common type annotations for ethereum python packages", "eth-utils": "Common utility functions for ethereum codebases.", "ethereum": "Next generation cryptocurrency network", "ethereum-abi-utils": "Common utility functions for ethereum codebases.", "ethereum-serpent": "Serpent compiler", "ethereum-utils": "Common utility functions for ethereum codebases.", "ethtool": "Python module to interface with ethtool", "ets": "Enthought Tool Suite meta-project", "etsdevtools": "tools to support Python development", "etsproxy": "proxy modules for backwards compatibility", "euclid": "2D and 3D vector, matrix, quaternion and geometry module", "eulxml": "XPath-based XML data binding, with Django form support", "evdev": "Bindings to the Linux input handling subsystem", "eve": "Python REST API for Humans.", "eve-docs": "Generates documentation for Eve APIs", "eve-elastic": "Elasticsearch data layer for eve rest framework", "eveapi": "Python library for accessing the EVE Online API.", "evelink": "Python Bindings for the EVE Online API", "event": "event library", "event-model": "Data model used by the bluesky ecosystem", "eventbrite": "Official Eventbrite SDK for Python", "eventer": "A simple event dispatching library", "eventlet": "Highly concurrent networking library", "eventlog": "an event logger", "events": "Bringing the elegance of C# EventHandler to Python", "eventually": "Deprecation support for Python.", "everett": "Configuration library for Python applications", "evernote": "Evernote SDK for Python", "evernote-oauth-sample": "A small example package", "evernote3": "Evernote SDK for Python3", "every": "Run a method at set intervals", "evidence": "evidence - tool for registering effects of medicine.", "evohome-async": "An async Python client for connecting to the Evohome webservice", "evohomeclient": "Python client for connecting to the Evohome webservice", "ex": "UNKNOWN", "exabgp": "BGP swiss army knife", "exactly": "Tests a command line program by executing it in a temporary sandbox directory and inspecting its result.", "exam": "Helpers for better testing.", "example": "An example package.", "examples": "Tests and Documentation Done by Example.", "exceptions": "A more meaningful exception's collection for Python", "exchangelib": "Client for Microsoft Exchange Web Services (EWS)", "exdoc": "Documentation extractor.", "execnet": "execnet: rapid multi-Python deployment", "executor": "Programmer friendly subprocess wrapper", "exercise": "Automation Test module for python", "exhale": "Automatic C++ library API documentation generator using Doxygen, Sphinx, and Breathe. Exhale revives Doxygen's class / file hierarchies using reStructuredText for superior markup syntax / websites.", "exifread": "Read Exif metadata from tiff and jpeg files.", "exist": "Exist API client implementation", "existence": "Checks static .html files for bad links", "exotel": "Python SDK for Exotel API[Unofficial]", "expecter": "Expecter Gadget, a better expectation (assertion) library", "expects": "Expressive and extensible TDD/BDD assertion library for Python", "experience": "Experience", "experimental.cssselect": "Experimental version of lxml.cssselect", "expiringdict": "Dictionary with auto-expiring values for caching purposes", "explorerhat": "A module to control the Explorer HAT Raspberry Pi Addon Board", "express": "express", "expressions": "Extensible arithmetic expression parser and compiler", "expressly": "Expressly Python 3 SDK", "exrex": "Irregular methods for regular expressions", "exscript": "Automating Telnet and SSH", "extension": "Utilities for python.", "extensionclass": "Metaclass for subclassable extension types", "extensions": "Simple plugin system", "external": "Run tasks on external processes to overcome Python's global interpreter lock.", "extras": "Useful extra bits for Python - things that shold be in the standard library", "extremes": "Production-quality 'Min' and 'Max' objects (adapted from PEP 326)", "extruct": "Extract embedded metadata from HTML markup", "eyed3": "Python audio data toolkit (ID3 and MP3)", "ez": "easy stuff", "ez_setup": "ez_setup.py and distribute_setup.py", "ezdxf": "A Python package to create/manipulate DXF drawings.", "ezibpy": "a Pythonic Client for Interactive Brokers API", "ezodf": "A Python package to create/manipulate OpenDocumentFormat files.", "ezurl": "URL Generation for Python", "f1": "a simple", "f3": "Photometry for Kepler Full Frame Images", "f5-icontrol-rest": "F5 BIG-IP iControl REST API client", "f5-sdk": "F5 Networks Python SDK", "f90nml": "Fortran 90 namelist parser", "fabio": "Image IO for fable", "fabric": "High level SSH command execution", "fabric-virtualenv": "Some additional functions for working with remote virtualenvs in Fabric.", "fabric3": "Fabric is a simple, Pythonic tool for remote execution and deployment (py2.7/py3.4+ compatible fork).", "fabtools": "Tools for writing awesome Fabric files", "fabulous": "Makes your terminal output totally fabulous", "face_recognition": "Recognize faces from Python or from the command line", "face_recognition_models": "Models used by the face_recognition package.", "facebook-sdk": "This client library is designed to support the Facebook Graph API and the official Facebook JavaScript SDK, which is the canonical way to implement Facebook authentication.", "facebookads": "Facebook Ads API SDK", "facepy": "Facepy makes it really easy to use Facebook's Graph API", "factcheck": "A simple, extensible implementation of QuickCheck for Python", "factory": "Object Oriented Currying", "factory-boy": "A versatile test fixtures replacement based on thoughtbot's factory_bot for Ruby.", "failure": "Failure remoting, serialization, deserialization library.", "fairy-slipper": "A project to make OpenStack API's self documententing.", "fake-factory": "The `fake-factory` package was deprecated on December 15th, 2016. Use the `Faker` package instead.", "fake-useragent": "Up to date simple useragent faker with real world database", "fakecouch": "Fake implementation of CouchDBKit api for testing purposes", "fakeldap": "An implementation of a LDAPObject to fake a ldap server in unittests.", "faker": "Faker is a Python package that generates fake data for you.", "fakeredis": "Fake implementation of redis API for testing purposes.", "fakerpigpio": "fakeRPiGPIO is a package to simulate the RPi.GPIO package", "falcon": "An unladen web framework for building APIs and app backends.", "falcon-cors": "Falcon CORS middlware", "fancy_tag": "A powerful replacement for Django's simple_tag decorator that adds supports for positional, keyword arguments and template variable assignment.", "fancycompleter": "colorful TAB completion for Python prompt", "fancyimpute": "Matrix completion and feature imputation algorithms", "fann2": "Fast Artificial Neural Network Library (FANN) Python bindings.", "fanstatic": "Flexible static resources for web applications", "fapws3": "Fast Asynchronous Python Web Server", "far": "Find and Replace", "fast": "FAST: Framework for Agile Software Testing", "fastai": "fastai makes deep learning with PyTorch faster, more accurate, and easier", "fastapi": "FastAPI framework, high performance, easy to learn, fast to code, ready for production", "fastavro": "Fast read/write of AVRO files", "fastcache": "C implementation of Python 3 functools.lru_cache", "fastchardet": "Fast universal encoding detector", "fastcluster": "Fast hierarchical clustering routines for R and Python.", "fastdotcom": "Python API for testing internet speed on Fast.com", "fastdtw": "Dynamic Time Warping (DTW) algorithm with an O(N) time and memory complexity.", "fasteners": "A python package that provides useful locks.", "fastkml": "Fast KML processing in python", "fastparquet": "Python support for Parquet file format", "fastprogress": "A nested progress with plotting options for fastai", "fastrlock": "Fast, re-entrant optimistic lock implemented in Cython", "fasttext": "fasttext Python bindings", "fastzbarlight": "A fork of zbarlight, which includes a vendored copy of zbar compiled with optimization flags", "faulthandler": "Display the Python traceback on a crash", "faunadb": "FaunaDB Python driver", "fauxfactory": "Generates random data for your tests.", "fax": "a simple printer of nested lists", "fbchat": "Facebook Chat (Messenger) for Python", "fbmessenger": "A python library to communicate with the Facebook Messenger API's", "fboauth2": "Bare minimum Facebook OAuth2 client", "fbprophet": "Automatic Forecasting Procedure", "fbs": "Create cross-platform desktop applications with Python and Qt", "fcm-django": "Send push notifications to mobile devices & browsers through FCM in Django.", "fdb": "The Python driver for Firebird", "fdfgen": "library for creating FDF files", "fdk": "Function Developer Kit for Python", "feather-format": "Simple wrapper library to the Apache Arrow-based Feather File Format", "features": "Feature set algebra for linguistics", "featuretools": "a framework for automated feature engineering", "fedexdeliverymanager": "Python 3 API for Fedex Delivery Manager, a way to track packages.", "fedmsg": "Fedora Messaging Client API", "fedmsg-atomic-composer": "Composes Atomic rpm-ostrees when Fedora repositories are updated", "feedfinder2": "Find the feed URLs for a website.", "feedformatter": "A Python library for generating news feeds in RSS and Atom formats", "feedgen": "Feed Generator (ATOM, RSS, Podcasts)", "feedgenerator": "Standalone version of django.utils.feedgenerator", "feedparser": "Universal feed parser, handles RSS 0.9x, RSS 1.0, RSS 2.0, CDF, Atom 0.3, and Atom 1.0 feeds", "feedparser-homeassistant": "Universal feed parser, handles RSS 0.9x, RSS 1.0, RSS 2.0, CDF, Atom 0.3, and Atom 1.0 feeds", "feincms": "Django-based Page CMS and CMS building toolkit.", "feincms-cleanse": "Default HTML cleansing in FeinCMS", "few": "Feature Engineering Wrapper", "fex": "Bayes Impact feature extraction framework.\n\nA simple feature extraction framework to extract data from different sources\nand export them into an easy to share format.", "ff": "A kit for files finding", "ffmpeg": "ffmpeg python package url [https://github.com/jiashaokun/ffmpeg]", "ffmpeg-python": "Python bindings for FFmpeg - with complex filtering support", "ffmpy": "A simple Python wrapper for ffmpeg", "ffn": "Financial functions for Python", "ffprobe": "Wrapper around ffprobe command to extract metadata from media files", "ffs": "Python Filesystem Api helpers", "fhirclient": "A flexible client for FHIR servers supporting the SMART on FHIR protocol", "fhurl": "Django generic form handler view", "fi": "The file open library the government doesn't want you to know about", "fiblary3": "Home Center 2 API Python Library", "ficus": "context managers for matplotlib", "fields": "Container class boilerplate killer.", "fifty": "FiFTy: Large-scale File Fragment Type Identification using Neural Networks", "fig": "Fast, isolated development environments using Docker", "file": "CFFI bindings for libmagic.", "file-magic": "(official) libmagic Python bindings", "filebrowser_safe": "A snapshot of the filebrowser_3 branch of django-filebrowser, packaged as a dependency for the Mezzanine CMS for Django.", "filechunkio": "FileChunkIO represents a chunk of an OS-level file containing bytes data", "filedepot": "Toolkit for storing files and attachments in web applications", "filelock": "A platform independent file lock.", "filemagic": "A Python API for libmagic, the library behind the Unix file command", "filenamesort": "utility to aid in natural or \"human-like\" sorting of file names", "files": "Python file and path manipulation", "filesystem": "Filesystem wrapper for python developers", "filesystem_tree": "a library for managing a filesystem tree", "filetype": "Infer file type and MIME type of any file/buffer. No external dependencies.", "filterpy": "Kalman filtering and optimal estimation library", "filters": "Validation and data pipelines made easy!", "findspark": "Find pyspark to make it importable.", "fingerprints": "A library to generate entity fingerprints.", "finsymbols": "Retrieves list of all symbols present in SP500, NASDAQ ,AMEX and NYSE", "fints": "Pure-python FinTS 3.0 (formerly known as HBCI) implementation", "fiona": "Fiona reads and writes spatial data files", "fire": "A library for automatically generating command line interfaces.", "firebase-admin": "Firebase Admin Python SDK", "firebase-token-generator": "A utility to generate signed Firebase Authentication Tokens", "firetv": "Communicate with an Amazon Fire TV device via ADB over a network.", "fireworks": "FireWorks workflow software", "first": "Return the first true value of an iterable.", "first_terry": "UNKNOWN", "fisher": "Fast Fisher's Exact Test", "fitbit": "Fitbit API Wrapper.", "fitsio": "A full featured python library to read from and write to FITS files.", "five": "Gives you five. A library to overcomplicate `5`", "five.customerize": "TTW customization of template-based Zope browser views", "five.formlib": "zope.formlib integration for Zope.", "five.globalrequest": "DEPRECATED: Zope integration for zope.globalrequest", "five.grok": "Grok-like layer for Zope 2", "five.intid": "Zope2 support for zope.intid", "five.localsitemanager": "Local site manager implementation for Zope.", "five.pt": "DEPRECATED: Five bridges and patches to use Chameleon with Zope.", "fix": "Simple test fixtures.", "fix-yahoo-finance": "Yahoo! Finance market data downloader +fix for Pandas Datareader's get_data_yahoo()", "fixed": "A library for quickly processing fixed width files.", "fixerio": "A Python client for Fixer.io", "fixmydjango": "A Django app for finding solutions to exceptions", "fixture": "fixture is a package for loading and referencing test data", "fixtures": "Fixtures, reusable state for writing clean tests and more.", "flair": "A very simple framework for state-of-the-art NLP", "flake8": "the modular source code checker: pep8, pyflakes and co", "flake8-alfred": "Flake8 plugin warning for unsafe functions", "flake8-annotations-complexity": "A flake8 extension that checks for type annotations complexity", "flake8-bandit": "Automated security testing with bandit and flake8.", "flake8-black": "flake8 plugin to call black as a code style validator", "flake8-blind-except": "A flake8 extension that checks for blind except: statements", "flake8-broken-line": "Flake8 plugin to forbid backslashes for line breaks", "flake8-bugbear": "A plugin for flake8 finding likely bugs and design problems in your program. Contains warnings that don't belong in pyflakes and pycodestyle.", "flake8-builtins": "Check for python builtins being used as variables or parameters.", "flake8-builtins-unleashed": "builtin override checker plugin for flake8", "flake8-class-attributes-order": "A flake8 extension that checks classes attributes order", "flake8-class-newline": "Flake8 lint for newline after class definitions.", "flake8-coding": "Adds coding magic comment checks to flake8", "flake8-colors": "Error highlight plugin for Flake8.", "flake8-commas": "Flake8 lint for trailing commas.", "flake8-comprehensions": "A flake8 plugin to help you write better list/set/dict comprehensions.", "flake8-config-yoctol": "", "flake8-copyright": "Adds copyright checks to flake8", "flake8-debugger": "ipdb/pdb statement checker plugin for flake8", "flake8-deprecated": "Warns about deprecated method calls.", "flake8-diff": "Run flake8 across a set of changed files and filter out violations occurring only on the lines that were changed.", "flake8-docstrings": "Extension for flake8 which uses pydocstyle to check docstrings", "flake8-eradicate": "Flake8 plugin to find commented out code", "flake8-fixme": "Check for FIXME, TODO and other temporary developer notes. Plugin for flake8.", "flake8-functions": "A flake8 extension that checks functions", "flake8-future-import": "__future__ import checker, plugin for flake8", "flake8-html": "Generate HTML reports of flake8 violations", "flake8-import-order": "Flake8 and pylama plugin that checks the ordering of import statements.", "flake8-isort": "flake8 plugin that integrates isort .", "flake8-junit-report": "Simple tool that converts a flake8 file to junit format", "flake8-logging-format": "Flake8 extension to validate (lack of) logging format strings", "flake8-mock": "Provides checking for non-existent mock methods", "flake8-mutable": "mutable defaults flake8 extension", "flake8-mypy": "A plugin for flake8 integrating mypy.", "flake8-pep257": "Flake8 plugin for the pep257 Python utility.", "flake8-pep3101": "Checks for old string formatting.", "flake8-per-file-ignores": "Ignore individual error codes per file with flake8", "flake8-polyfill": "Polyfill package for Flake8 plugins", "flake8-print": "print statement checker plugin for flake8", "flake8-putty": "Apply a bit of putty to flake8.", "flake8-pyi": "A plugin for flake8 to enable linting .pyi files.", "flake8-pytest": "pytest assert checker plugin for flake8", "flake8-quotes": "Flake8 lint for quotes.", "flake8-rst": "flake8 for code in rst files and docstrings", "flake8-rst-docstrings": "Python docstring reStructuredText (RST) validator", "flake8-string-format": "string format checker, plugin for flake8", "flake8-tidy-imports": "A flake8 plugin that helps you write tidier imports.", "flake8-todo": "TODO notes checker, plugin for flake8", "flake8-tuple": "Check code for 1 element tuple.", "flake8-variables-names": "A flake8 extension that helps to make more readable variables names", "flakeplus": "Additional pyflakes", "flaky": "Plugin for nose or pytest that automatically reruns flaky tests.", "flanker": "Mailgun Parsing Tools", "flasgger": "Extract swagger specs from your flask project", "flash": "Fast tool", "flask": "A simple framework for building complex web applications.", "flask-actions": "custom actions for flask to help manage your application", "flask-admin": "Simple and extensible admin interface framework for Flask", "flask-alembic": "Flask extension to integrate Alembic migrations", "flask-allows": "Impose authorization requirements on Flask routes", "flask-and-redis": "Simple as dead support of Redis database for Flask apps.", "flask-api": "Browsable web APIs for Flask.", "flask-apispec": "Build and document REST APIs with Flask and apispec", "flask-appbuilder": "Simple and rapid application development framework, built on top of Flask. includes detailed security, auto CRUD generation for your models, google charts and much more.", "flask-appconfig": "Configures Flask applications in a canonical way. Also auto-configures Heroku. Aims to standardize configuration.", "flask-apscheduler": "Adds APScheduler support to Flask", "flask-ask": "Rapid Alexa Skills Kit Development for Amazon Echo Devices in Python", "flask-assets": "Asset management for Flask, to compress and merge CSS and Javascript files.", "flask-auth": "Auth extension for Flask.", "flask-autodoc": "Documentation generator for flask", "flask-autoindex": "The mod_autoindex for Flask", "flask-avatars": "All avatar generators in one place.", "flask-babel": "Adds i18n/l10n support to Flask applications", "flask-babelex": "Adds i18n/l10n support to Flask applications", "flask-babelpkg": "Adds i18n/l10n support to Flask applications and extensions", "flask-babelplus": "Adds i18n/l10n support to Flask applications", "flask-basicauth": "HTTP basic access authentication for Flask.", "flask-bcrypt": "Brcrypt hashing for Flask.", "flask-blogging": "A flask extension for adding Markdown blog support to your site", "flask-blueprint": "Flask blueprint generator", "flask-bootstrap": "An extension that includes Bootstrap in your project, without any boilerplate code.", "flask-bootstrap4": "An extension that includes Bootstrap in your project, without any boilerplate code.", "flask-bouncer": "Flask Simple Declarative Authentication based on Ryan Bates excellent cancan library", "flask-bower": "An extension to manage and serve your javascript assets with bower", "flask-breadcrumbs": "Flask-Breadcrumbs adds support for generating site breadcrumb navigation.", "flask-cache": "Adds cache support to your Flask application", "flask-caching": "Adds caching support to your Flask application", "flask-cdn": "Serve the static files in your Flask app from a CDN.", "flask-celery": "Celery integration for Flask", "flask-celery-helper": "Celery support for Flask without breaking PyCharm inspections.", "flask-celeryext": "Flask-CeleryExt is a simple integration layer between Celery and Flask.", "flask-ckeditor": "CKEditor integration for Flask.", "flask-classful": "Class based views for Flask", "flask-classy": "Class based views for Flask", "flask-cli": "Backport of Flask 1.0 new click integration.", "flask-collect": "Flask-Collect -- Collect static files in Flask application", "flask-common": "A Flask extension with lots of common time-savers (file-serving, favicons, etc).", "flask-compress": "Compress responses in your Flask app with gzip.", "flask-consulate": "flask extension that provides an interface to consul via a flask app", "flask-cors": "A Flask extension adding a decorator for CORS support", "flask-couchdb": "Provides utilities for using CouchDB with Flask", "flask-crossdomain": "HTTP Access Control helper.", "flask-crossdomain2": "Module for enabling cross-site/cross-origin HTTP requests on Flask app endpoints.", "flask-csrf": "A small Flask extension for adding CSRF protection.", "flask-dance": "Doing the OAuth dance with style using Flask, requests, and oauthlib", "flask-debug": "Shows reflection/configuration to aid the development of Flask applications.", "flask-debugtoolbar": "A toolbar overlay for debugging Flask applications.", "flask-discoverer": "Flask API autodiscovery", "flask-dotenv": "The .env file support for Flask", "flask-dropzone": "Upload file in Flask with Dropzone.js.", "flask-elastic": "Integrates official client for Elasticsearch into Flask", "flask-elasticsearch": "Flask extension for Elasticsearch integration", "flask-email": "Flask extension for sending email", "flask-env": "Easily set Flask settings from environment variables", "flask-environments": "Environment tools and configuration for Flask applications", "flask-errormail": "Flask extension for sending administrators e-mails with stacktraces when internal server errors occur.", "flask-excel": "A flask extension that provides one application programming interface to read and write data in different excel file formats", "flask-ext": "Extensions of Flask", "flask-failsafe": "A failsafe for the Flask reloader", "flask-featureflags": "Enable or disable features in Flask apps based on configuration", "flask-fixtures": "A simple library for adding database fixtures for unit tests using nothing but JSON or YAML.", "flask-flatpages": "Provides flat static pages to a Flask application", "flask-fs": "Simple and easy file storages for Flask", "flask-gears": "Gears for Flask", "flask-googleauth": "Super simple OpenID and Google Federated Auth for Flask apps.", "flask-googlemaps": "Small extension for Flask to make using Google Maps easy", "flask-graphql": "Adds GraphQL support to your Flask application", "flask-gravatar": "Small extension for Flask to make usage of Gravatar service easy.", "flask-heroku": "Heroku environment variable configurations for Flask", "flask-hookserver": "Server for GitHub webhooks using Flask", "flask-htmlmin": "Minimize render templates html", "flask-httpauth": "Basic and Digest HTTP authentication for Flask routes", "flask-https": "Make HTTPS required on any Flask app", "flask-iiif": "Flask-IIIF extension provides easy IIIF API standard integration.", "flask-images": "Dynamic image resizing for Flask.", "flask-injector": "Adds Injector, a Dependency Injection framework, support to Flask.", "flask-inputs": "Flask request data validation", "flask-jasmine": "Execution of Jasmine JavaScript tests within Flask", "flask-jsglue": "Flask-JSGlue helps hook up your Flask application nicely with the front end.", "flask-json": "Better JSON support for Flask", "flask-jsonpify": "A Flask extension adding a decorator for JSONP support", "flask-jsonrpc": "Adds JSONRPC support to Flask.", "flask-jsonschema": "Flask extension for validating JSON requets", "flask-jwt": "JWT token authentication for Flask apps", "flask-jwt-extended": "Extended JWT integration with Flask", "flask-jwt-simple": "Simple JWT integration with Flask", "flask-keystone": "This project wraps the existing keystone middleware to provide courtesy user functions within an API.", "flask-konch": "An improved shell command for the Flask CLI", "flask-kvsession": "Transparent server-side session support for flask", "flask-ldap-login": "UNKNOWN", "flask-limiter": "Rate limiting for flask applications", "flask-log": "Configure logging in flask applications", "flask-logconfig": "Flask extension for configuring Python logging module", "flask-login": "User session management for Flask", "flask-mail": "Flask extension for sending email", "flask-mailgun": "Adds Mailgun support to Flask applications", "flask-mako": "Mako templating support for Flask applications.", "flask-markdown": "Small extension to make using markdown easy", "flask-marshmallow": "Flask + marshmallow for beautiful APIs", "flask-material": "An extension that includes Materialize CSS (http://materializecss.com/) in your project, without any boilerplate code.", "flask-menu": "Flask-Menu is a Flask extension that adds support for generating menus.", "flask-micropub": "Adds support for Micropub clients.", "flask-migrate": "SQLAlchemy database migrations for Flask applications using Alembic", "flask-misaka": "A pleasant interface between the Flask web framework and the Misaka Markdown parser.", "flask-mistune": "A interface between the Flask web framework and the Mistune Markdown parser.", "flask-mobility": "A Flask extension to simplify building mobile-friendly sites.", "flask-modus": "Flask Method Overriding Middleware.", "flask-moment": "Formatting of dates and times in Flask templates using moment.js.", "flask-mongoalchemy": "Add Flask support for MongoDB using MongoAlchemy.", "flask-mongoengine": "Flask-MongoEngine is a Flask extension that provides integration with MongoEngine and WTF model forms.", "flask-mongokit": "A Flask extension simplifies to use MongoKit", "flask-mongorest": "Flask restful API framework for MongoDB/MongoEngine", "flask-morepath": "UNKNOWN", "flask-mqtt": "Flask extension for the MQTT protocol", "flask-mysql": "Flask simple mysql client", "flask-mysqldb": "MySQLdb extension for Flask", "flask-nav": "Easily create navigation for Flask applications.", "flask-navigation": "The navigation of Flask application.", "flask-negotiate": "Content negotiation utility for Flask apps", "flask-oauth": "Adds OAuth support to Flask", "flask-oauthlib": "OAuthlib for Flask", "flask-oidc": "OpenID Connect extension for Flask", "flask-openid": "OpenID support for Flask", "flask-opentracing": "OpenTracing support for Flask applications", "flask-oslolog": "This project wraps the existing oslo.log library to providerequest logging and logger access within flask..", "flask-pagedown": "Implementation of StackOverflow's \"PageDown\" markdown editor for Flask-WTF.", "flask-paginate": "Simple paginate support for flask", "flask-paranoid": "Simple user session protection", "flask-peewee": "Peewee integration for flask", "flask-plugins": "Create plugins for your Flask application", "flask-principal": "Identity management for flask", "flask-psycopg2": "postgresql adapter for Flask", "flask-pymongo": "PyMongo support for Flask applications", "flask-qrcode": "A concise Flask extension to render QR codes on Jinja2 templates using python-qrcode", "flask-rauth": "Adds OAuth 1.0/a, 2.0, and Ofly consumer support for Flask.", "flask-recaptcha": "The new Google ReCaptcha implementation for Flask without Flask-WTF", "flask-redis": "A nice way to use Redis in your Flask app", "flask-redis-helper": "Redis support for Flask without breaking PyCharm inspections.", "flask-registry": "Flask-Registry is an extension for Flask that allow frameworks to dynamically assemble your Flask application from reusable packages consisting of blueprints, extensions, and configurations.", "flask-request-params": "Flask-request-params provides Rails-like interface to HTTP Request Parameters for Flask.", "flask-rest": "A simple REST toolkit for Flask", "flask-restful": "Simple framework for creating REST APIs", "flask-restful-swagger": "Extract swagger specs from your flast-restful project", "flask-restful-swagger-2": "Extract swagger specs from your flask-restful project. Project based on flask-restful-swagger by Ran Tavory.", "flask-restless": "A Flask extension for easy ReSTful API generation", "flask-restplus": "Fully featured framework for fast, easy and documented API development with Flask", "flask-rq": "RQ (Redis Queue) integration for Flask applications", "flask-rq2": "A Flask extension for RQ.", "flask-runner": "A set of standard command line arguments for Flask applications built on top of Flask-Script", "flask-s3": "Seamlessly serve the static files of your Flask app from Amazon S3", "flask-script": "Scripting support for Flask", "flask-scrypt": "Flask-Scrypt provides convenient wrappers forscrypt password hashing and random salt generation.", "flask-scss": "Adds support for scss files to Flask applications", "flask-seasurf": "An updated CSRF extension for Flask.", "flask-security": "Simple security for Flask apps.", "flask-security-fork": "Simple security for Flask apps.", "flask-session": "Adds server-side session support to your Flask application", "flask-shell-ipython": "Replace default `flask shell` command by similar command running IPython.", "flask-sijax": "An extension for the Flask microframework that adds Sijax support.", "flask-silk": "Adds silk icons to your Flask application or blueprint, or extension.", "flask-simplemde": "Flask-SimpleMDE - a Flask extension for SimpleMDE", "flask-sitemap": "Flask extension that helps with sitemap generation.", "flask-slack": "Slack extension for Flask.", "flask-social": "Simple OAuth provider integration for Flask-Security", "flask-socketio": "Socket.IO integration for Flask applications", "flask-sockets": "Elegant WebSockets for your Flask apps.", "flask-sphinx-themes": "Sphinx themes for Flask and related projects.", "flask-sqlalchemy": "Adds SQLAlchemy support to your Flask application.", "flask-sse": "Server-Sent Events for Flask", "flask-sslify": "Force SSL on your Flask app.", "flask-stormpath": "Simple and secure user authentication for Flask via Stormpath.", "flask-superadmin": "The best admin interface framework for Python. With scaffolding for MongoEngine, Django and SQLAlchemy.", "flask-swagger": "Extract swagger specs from your flask project", "flask-swagger-ui": "Swagger UI blueprint for Flask", "flask-table": "HTML tables for use with the Flask micro-framework", "flask-talisman": "HTTP security headers for Flask.", "flask-testing": "Unit testing for Flask", "flask-theme": "Provides infrastructure for theming Flask applications", "flask-themes": "Provides infrastructure for theming Flask applications", "flask-themes2": "Provides infrastructure for theming Flask applications                     (and supports Flask>=0.6!)", "flask-thumbnails": "A simple extension to create a thumbs for the Flask", "flask-triangle": "Integration of AngularJS and Flask.", "flask-twisted": "Simple integration of Flask and Twisted", "flask-uploads": "Flexible and efficient upload handling for Flask", "flask-user": "Customizable User Authentication & User Management: Register, Confirm, Login, Change username/password, Forgot password and more.", "flask-uuid": "UUID url converter for Flask routes", "flask-uwsgi-websocket": "High-performance WebSockets for your Flask apps powered by uWSGI.", "flask-views": "Class based views for Flask", "flask-weasyprint": "Make PDF in your Flask app with WeasyPrint.", "flask-webpack": "Flask extension for managing assets with Webpack.", "flask-webtest": "Utilities for testing Flask applications with WebTest.", "flask-whooshalchemy": "Whoosh extension to Flask/SQLAlchemy", "flask-whooshee": "Flask-SQLAlchemy - Whoosh Integration", "flask-wtf": "Simple integration of Flask and WTForms.", "flask-xml-rpc": "Adds support for creating XML-RPC APIs to Flask", "flaskbb-plugin-portal": "A portal plugin for FlaskBB", "flatbuffers": "The FlatBuffers serialization format for Python", "flatdict": "Python module for interacting with nested dicts as a single level dict with delimited keys.", "flatland": "HTML form management and validation", "fleep": "File format determination library", "flex": "Swagger Schema validation.", "flexget": "FlexGet is a program aimed to automate downloading or processing content (torrents, podcasts, etc.) from different sources like RSS-feeds, html-pages, various sites and more.", "flexmock": "flexmock is a testing library for Python that makes it easy to create mocks,stubs and fakes.", "flickr-api": "Python wrapper for the Flickr API", "flickrapi": "The Python interface to the Flickr API", "flipflop": "FastCGI wrapper for WSGI applications", "flit": "A simple packaging tool for simple packages.", "flor": "Flor - An efficient Bloom filter implementation in Python", "flower": "Celery Flower", "floyd-cli": "Command line tool for Floyd", "fluent-logger": "A Python logging handler for Fluentd event collector", "flufl.bounce": "Email bounce detectors.", "flufl.enum": "A Python enumeration package.", "flufl.i18n": "A high level API for Python internationalization.", "flufl.lock": "NFS-safe file locking with timeouts for POSIX systems.", "flup": "Random assortment of WSGI servers (py3)", "fn": "Implementation of missing features to enjoy functional programming in Python", "folium": "Make beautiful maps with Leaflet.js & Python", "fontawesome-markdown": "Font Awesome support for Markdown", "fontbakery": "Well designed Font QA tool, written in Python 3", "fontconfig": "CFFI bindings for fontconfig", "fontmake": "Compile fonts from sources (UFO, Glyphs) to binary (OpenType, TrueType).", "fontmath": "A set of objects for performing math operations on font data.", "fonttools": "Tools to manipulate font files", "fontypython": "Fonty Python - view and manage all kinds of fonts on Gnu/Linux", "foo": "UNKNOWN", "foobot_async": "", "foolscap": "Foolscap contains an RPC protocol for Twisted.", "forbiddenfruit": "Patch python built-in objects", "force": "A method for visualizing the receiptive fields of a neural network", "foreman": "Python library to manipulate The Foreman through the API", "forex": "Gets exchange rate from USD/SGD to PHP,IDR,MYR,THB,VND", "forex-python": "Foreign exchange rates and currency conversion.", "forgerypy": "An easy to use forged data generator for Python", "formalchemy": "FormAlchemy greatly speeds development with SQLAlchemy mapped classes (models) in a HTML forms environment.", "format": "Faux string interpolation for Python >2.4 && <3.6", "formats": "Support multiple formats with ease", "formattime": "Python API for date/time formatting", "formencode": "HTML form validation, generation, and conversion package", "former": "Create AWS CloudFormation yml for any resource", "formic": "An implementation of Apache Ant FileSet and Globs", "forth": "ID for practice", "fortiosapi": "Python modules to use Fortigate APIs", "fortiosclient": "a python client based on fortios restful api", "foundation": "A generic website backend implemented in Django using Controllers.", "foundations": "Foundations is the core package of Oncilla, Manager, Umbra, sIBL_GUI and sIBL_Reporter.", "fourletterphat": "Four Letter pHAT Driver", "foursquare": "easy-as-pie foursquare API client", "fpconst": "Utilities for handling IEEE 754 floating point special values", "fpdf": "Simple PDF generation for Python", "fqn-decorators": "Easily create multi-purpose decorators that have access to the FQN of the original function.", "fr": "A command-line tool to print free resources in delicious flavors.", "framework": "The one framework of all frameworks", "frappe": "Frappe is recommendation system backend.", "free": "Free yourself from CAPTCHAs!", "freedom": "A pure-python git and pypi release management tool", "freeipa": "Dummy package for FreeIPA", "freesms": "Send SMS with Free Mobile", "freetype": "Freetype 2 library bindings", "freetype-py": "Freetype python bindings", "freeze": "Freeze - dump / hash / sort / compare / diff anything", "freezegun": "Let your Python tests travel through time", "frida": "Dynamic instrumentation toolkit for developers, reverse-engineers, and security researchers", "friends": "Integrate with any third party, easily.", "fritzhome": "Query information from your FRITZ!Box (mostly energy)", "frosted": "A passive Python syntax checker", "frozen-flask": "Freezes a Flask application into a set of static files.", "frozendict": "An immutable dictionary", "fs": "Python's filesystem abstraction layer", "fsapi": "Implementation of the Frontier Silicon API for Python", "fsspec": "File-system specification", "fswrap": "An opinionated wrapper on file system and path functions", "ftfy": "Fixes some problems with Unicode text after the fact", "ftputil": "High-level FTP client library (virtual file system and more)", "ftr": "HTML Article cleaner / extractor, Five-Filters compatible.", "ftw.profilehook": "A Plone addon providing a hook for executing code when a generic setup profile is installed.", "ftw.upgrade": "An upgrade control panel and upgrade helpers for plone upgrades.", "fudge": "Replace real objects with fakes (mocks, stubs, etc) while testing.", "fuel": "Data pipeline framework for machine learning", "fugue-icons": "Fugue Icons packaged for simple use in web apps.", "funcdesigner": "A python module for function design and automatic derivatives", "funcparserlib": "Recursive descent parsing library based on functional combinators", "funcsigs": "Python function signatures from PEP362 for Python 2.6, 2.7 and 3.2+", "function": "A simple nest list", "functional": "Tools for functional programming in python", "functions": "Functional programming in Python", "functools": "Fast tools for functional programming", "functools32": "Backport of the functools module from Python 3.2.3 for use on 2.7 and PyPy.", "funcy": "A fancy and practical functional tools", "fundamentals": "Some project setup tools including logging, settings and database connections", "funfactory": "Mozilla's Django app skeleton.", "funkload": "Functional and load web tester.", "furl": "URL manipulation made simple.", "fuse-python": "Bindings for FUSE", "fusepy": "Simple ctypes bindings for FUSE", "futuquant": "Futu Quantitative Trading API", "future": "Clean single-source support for Python 3 and 2", "future-fstrings": "A backport of fstrings to python<3.6", "futures": "Backport of the concurrent.futures package from Python 3", "futurist": "Useful additions to futures, from the future.", "fuzzy": "Fast Python phonetic algorithms", "fuzzyfinder": "Fuzzy Finder implemented in Python.", "fuzzywuzzy": "Fuzzy string matching in python", "fxapom": "Mozilla Firefox Accounts Page Object Model", "fxos_appgen": "Generates and installs FxOS apps", "fxrays": "Computes extremal rays with filtering", "fysom": "pYthOn Finite State Machine", "ga": "A lightweight genetic algorithm library written in pure Python", "gabbi": "Declarative HTTP testing library", "gaebusiness": "Micro Architecture for Business Layer on Google App Engine", "gaecookie": "A library for signing string and validating cookies. cd ..", "gaeforms": "A automated form validation and transformation based on App Engine Models", "gaegraph": "Graph Model on Google App Engine based on GraphAPI from Facebook", "gaepermission": "Tekton app to handle user login and permissions based on groups and holes", "gaiatest": "Marionette test automation client for Gaia", "galaxy_sequence_utils": "Galaxy utilities for manipulating sequences Galaxy project.", "gapic-google-cloud-datastore-v1": "GAPIC library for the Google Cloud Datastore API", "gapic-google-cloud-error-reporting-v1beta1": "GAPIC library for the Stackdriver Error Reporting API", "gapic-google-cloud-logging-v2": "GAPIC library for the Stackdriver Logging API", "gapic-google-cloud-pubsub-v1": "GAPIC library for the Google Cloud Pub/Sub API", "gapic-google-cloud-spanner-admin-database-v1": "GAPIC library for the Cloud Spanner Database Admin API", "gapic-google-cloud-spanner-admin-instance-v1": "GAPIC library for the Cloud Spanner Instance Admin API", "gapic-google-cloud-spanner-v1": "GAPIC library for the Cloud Spanner API", "gapic-google-cloud-speech-v1": "GAPIC library for the Google Cloud Speech API", "gapic-google-cloud-speech-v1beta1": "GAPIC library for the Google Cloud Speech API", "gapic-google-cloud-vision-v1": "GAPIC library for the Google Cloud Vision API", "gast": "Python AST that abstracts the underlying Python version", "gatspy": "General tools for Astronomical Time Series in Python", "gax-google-logging-v2": "GAX library for the Google Logging API", "gax-google-pubsub-v1": "DEPRECATED", "gbulb": "GLib event loop for tulip (PEP 3156)", "gchartwrapper": "Python Google Chart Wrapper", "gcloud": "API Client library for Google Cloud", "gcm-client": "Python client for Google Cloud Messaging (GCM)", "gcovr": "Generate C/C++ code coverage reports with gcov", "gcp-devrel-py-tools": "Tools for Cloud Platform Python libraries and samples.", "gcs-oauth2-boto-plugin": "Auth plugin allowing use the use of OAuth 2.0 credentials for Google Cloud Storage in the Boto library.", "gcsfs": "Convenient Filesystem interface over GCS", "gdal": "GDAL: Geospatial Data Abstraction Library", "gdata": "Python client library for Google data APIs", "gdax": "The unofficial Python client for the GDAX API", "gdbn": "Pre-trained deep neural networks", "gdoc-json-parser": "Convert Google spreadsheet to clean json.", "gdown": "Google Drive direct download of big files.", "gear": "Pure Python Async Gear Protocol Library", "gearbox": "Command line toolkit born as a PasteScript replacement for the TurboGears2 web framework", "gearman": "Gearman API - Client, worker, and admin client interfaces", "gears": "Compiles and concatenates JavaScript and CSS assets.", "gears-clean-css": "clean-css compressor for Gears", "gears-coffeescript": "CoffeeScript compiler for Gears", "gears-less": "LESS compiler for Gears", "gears-stylus": "Stylus compiler for Gears", "geek": "", "geizhals": "A parser for the Geizhals.eu website.", "general": "general", "generateds": "Generate Python data structures and XML parser from Xschema", "genericsetup.quickinstaller": "Import step to install products (without profile) in QuickInstaller", "geniushub-client": "A aiohttp-based client for Genius Hub systems", "genpy": "C/C++ source generation from an AST", "genshi": "A toolkit for generation of output for the web", "gensim": "Python framework for fast Vector Space Modelling", "genson": "GenSON is a powerful, user-friendly JSON Schema generator.", "genty": "Allows you to run a test with multiple data sets", "geoalchemy": "Using SQLAlchemy with Spatial Databases", "geoalchemy2": "Using SQLAlchemy with Spatial Databases", "geocoder": "Geocoder is a simple and consistent geocoding library.", "geographiclib": "The geodesic routines from GeographicLib", "geohash": "Module to decode/encode Geohashes to/from latitude and longitude.  See http://en.wikipedia.org/wiki/Geohash", "geoip": "MaxMind GeoIP Legacy Database - Python API", "geoip2": "MaxMind GeoIP2 API", "geojson": "Python bindings and utilities for GeoJSON", "geolinks": "Utilities to deal with geospatial links", "geomet": "GeoJSON <-> WKT/WKB conversion utilities", "geonode": "Application for serving and sharing geospatial data", "geonode-agon-ratings": "Fork of agon-ratings: a user ratings app", "geonode-announcements": "Fork of pinax/django-announcements. Announcements for your Django powered website.", "geonode-arcrest": "Wrapper to the ArcGIS REST API, and a Python analogue to the Javascript APIs. Modified to have a version number more pypi friendly by the GeoNode team.", "geonode-avatar": "A fork of django-avatar, for GeoNode", "geonode-dialogos": "a flaggable comments app", "geonode-notification": "User notification management for the Django web framework", "geonode-user-accounts": "a Django user account app", "geonode-user-messages": "Fork of user-messages: a reusable private user messages application for Django", "geopandas": "Geographic pandas extensions", "geopy": "Python Geocoding Toolbox", "geopython": "a tool for daily geology related task. visit geopython.com for further information", "george": "Blazingly fast Gaussian Processes for regression.", "geos": "Map server to view, measure and print maps in a web browserand to display maps as an overlay in google earth.", "geotext": "Geotext extracts countriy and city mentions from text", "geraldo": "Geraldo is a reports engine for Python and Django applications", "gerritlib": "Client library for accessing Gerrit.", "get": "http GET dict", "getch": "Does single char input, like C getch/getche", "getmac": "Get MAC addresses of remote hosts and local interfaces", "getpaid.core": "Core ecommerce functionality for zope and python projects", "gevent": "Coroutine-based network library", "gevent-eventemitter": "Implements EventEmitter using gevent", "gevent-helpers": "UNKNOWN", "gevent-psycopg2": "pip-installable package for patching psycopg2 to use gevent", "gevent-socketio": "SocketIO server based on the Gevent pywsgi server, a Python network library", "gevent-websocket": "Websocket handler for the gevent pywsgi server, a Python network library", "gevent_inotifyx": "gevent compatibility for inotifyx", "gevent_openssl": "A gevent wrapper for pyOpenSSL", "gevent_zeromq": "gevent compatibility layer for pyzmq", "geventconnpool": "TCP connection pool for gevent", "geventhttpclient": "http client library for gevent", "gf": "A package with lisp-like generic functions.", "gffutils": "Work with GFF and GTF files in a flexible database framework", "gfm": "Convert GitHub-Flavored Markdown to HTML", "gg": "Git and GitHub for the productivity addicted", "ggplot": "ggplot for python", "gh": "", "ghalton": "Generalized Halton number generator", "ghdiff": "Generate Github-style HTML for unified diffs.", "ghettoq": "Ghetto Queue using Redis or Django Models.", "ghlocalapi": "", "ghost.py": "Webkit based webclient.", "ghostscript": "Interface to the Ghostscript C-API, both high- and low-level, based on ctypes", "ghp-import": "Copy your docs directly to the gh-pages branch.", "ghp-import2": "A GitHub Pages import tool.", "gidgethub": "An async GitHub API library", "gin-config": "Gin-Config: A lightweight configuration library for Python", "ginga": "A scientific image viewer and toolkit", "gino": "GINO Is Not ORM - a Python asyncio ORM on SQLAlchemy core.", "gipc": "gevent-cooperative child processes and inter-process communication.", "giphypop": "Python wrapper for Giphy API", "girder-client": "Python client for interacting with Girder servers", "gisdata": "Sample data and metadata for GIS packages", "git-lfs": "A lightweight Git Large File Storage fetcher", "git-pr": "Tool to fetch GitHub pull requests.", "git-pylint-commit-hook": "Git commit hook that checks Python files with pylint", "git-review": "Tool to submit code to Gerrit", "git-url-parse": "git-url-parse - A simple GIT URL parser.", "git2json": "Convert git logs to JSON for easier analysis.", "gitchangelog": "gitchangelog generates a changelog thanks to git log.", "gitdb": "Git Object Database", "gitdb2": "Git Object Database", "github": "", "github-flask": "GitHub extension for Flask microframework", "github2": "GitHub API v2 library for Python.", "github3.py": "Python wrapper for the GitHub API(http://developer.github.com/v3)", "githubcli": "UNKNOWN", "githubpy": "Github v3 API Python SDK", "gitlint": "Git commit message linter written in python, checks your commit messages for style.", "gitpython": "Python Git Library", "gitterpy": "Python interface for the Gitter API", "gittle": "A high level pure python git implementation", "giturlparse.py": "A Git URL parsing module (supports parsing and rewriting)", "gitversion": "Utility to get the git version of a package.", "gitwrapperlib": "A lightweight wrapper for git command using sh module", "give": "A Python package - give", "giza": "Sphinx Documentation Build Automation", "gj": "Disk and file-based cache", "gl": "Get Localization Command-Line Interface", "glance-store": "OpenStack Image Service Store Library", "glances": "A cross-platform curses-based monitoring tool", "glances_api": "Python API for interacting with Glances.", "glenn": "Include tags in any kind of text document.", "glfw": "A ctypes-based wrapper for GLFW3.", "glob2": "Version of the glob module that can capture patterns and supports recursive wildcards", "globus-sdk": "Globus SDK for Python", "glog": "Simple Google-style logging wrapper for Python.", "glom": "A declarative object transformer and formatter, for conglomerating nested data.", "gloss.policy": "Gloss Installer", "glue": "Glue is a simple command line tool to generate sprites.", "glueviz": "Multidimensional data visualization across files", "gluish": "Luigi helper.", "glymur": "Tools for accessing JPEG2000 files", "glyphslib": "A bridge from Glyphs source files (.glyphs) to UFOs", "gm": "\u6398\u91d1\u91cf\u5316 \u6398\u91d13 sdk", "gmaps": "Google maps plugin for Jupyter notebooks", "gmplot": "Provide a matplotlib like interface to plotting data with Google Maps", "gmpy": "GMP or MPIR interface to Python 2.4+ and 3.x", "gmpy2": "GMP/MPIR, MPFR, and MPC interface to Python 2.6+ and 3.x", "gmusicapi": "An unofficial api for Google Play Music.", "gnm": "Rock n Rolling MCMC Sampler", "gnocchiclient": "Python client library for Gnocchi", "gntp": "Growl Notification Transport Protocol for Python", "gnumpy": "Gnumpy is a simple Python module that interfaces in a way almost identical to numpy, but does its computations on your computer's  GPU, using Cudamat.", "gnupg": "A Python wrapper for GnuPG", "gnupginterface": "GnuPG interactions with file handles", "gnuplot-py": "A Python interface to the gnuplot plotting program.", "gnureadline": "The standard Python readline extension statically linked against the GNU readline library.", "go": "Quick directory changing (super-cd)", "goblin": "Goblin OGM for the Tinkerpop 3 Stack,", "goes": "Download and process data from GOES-16 and GOES-17", "gol": "Curses implementation of Conway's Game Of Life with an evolutionary twist", "golang": "golang", "gold": "A utility for China Stock", "goldenarch": "Serves crap. faast.", "gondor": "official gondor.io command line client", "goocalendar": "A calendar widget for GTK using PyGoocanvas", "good": "Slim yet handsome validation library", "goodtables": "Goodtables is a framework to inspect tabular data.", "gooey": "Turn (almost) any command line program into a full GUI application with one line", "google": "Python bindings to the Google search engine.", "google-api-core": "Google API client core library", "google-api-python-client": "Google API Client Library for Python", "google-apitools": "client libraries for humans", "google-appengine": "Google AppEngine (unofficial easy-installable version of AppEngine SDK)", "google-apputils": "Obsolete. Please migrate to absl-py instead.", "google-assistant-grpc": "Google Assistant API gRPC bindings", "google-assistant-library": "Google Assistant Library Python wrapper", "google-auth": "Google Authentication Library", "google-auth-httplib2": "Google Authentication Library: httplib2 transport", "google-auth-oauthlib": "Google Authentication Library", "google-cloud": "API Client library for Google Cloud", "google-cloud-asset": "Cloud Asset API API client library", "google-cloud-automl": "Cloud AutoML API client library", "google-cloud-bigquery": "Google BigQuery API client library", "google-cloud-bigquery-datatransfer": "BigQuery Data Transfer API client library", "google-cloud-bigquery-storage": "BigQuery Storage API API client library", "google-cloud-bigtable": "Google Cloud Bigtable API client library", "google-cloud-container": "Google Container Engine API client library", "google-cloud-containeranalysis": "Container Analysis API API client library", "google-cloud-core": "Google Cloud API client core library", "google-cloud-datacatalog": "Google Cloud Data Catalog API API client library", "google-cloud-dataflow": "Google Cloud Dataflow SDK for Python, based on Apache Beam", "google-cloud-datalabeling": "Data Labeling API client library", "google-cloud-dataproc": "Google Cloud Dataproc API client library", "google-cloud-datastore": "Google Cloud Datastore API client library", "google-cloud-dlp": "Cloud Data Loss Prevention (DLP) API API client library", "google-cloud-dns": "Google Cloud DNS API client library", "google-cloud-error-reporting": "Stackdriver Error Reporting API client library", "google-cloud-firestore": "Google Cloud Firestore API client library", "google-cloud-happybase": "Client library for Google Cloud Bigtable: HappyBase layer", "google-cloud-kms": "Cloud Key Management Service (KMS) API API client library", "google-cloud-language": "Google Cloud Natural Language API client library", "google-cloud-logging": "Stackdriver Logging API client library", "google-cloud-monitoring": "Stackdriver Monitoring API client library", "google-cloud-profiler": "Stackdriver Profiler Python Agent", "google-cloud-pubsub": "Google Cloud Pub/Sub API client library", "google-cloud-resource-manager": "Google Cloud Resource Manager API client library", "google-cloud-runtimeconfig": "Google Cloud RuntimeConfig API client library", "google-cloud-spanner": "Cloud Spanner API client library", "google-cloud-speech": "Google Cloud Speech API client library", "google-cloud-storage": "Google Cloud Storage API client library", "google-cloud-tasks": "Cloud Tasks API API client library", "google-cloud-texttospeech": "Google Cloud Text-to-Speech API client library", "google-cloud-trace": "Stackdriver Trace API client library", "google-cloud-translate": "Google Cloud Translation API client library", "google-cloud-videointelligence": "Google Cloud Video Intelligence API client library", "google-cloud-vision": "Cloud Vision API API client library", "google-compute-engine": "Google Compute Engine", "google-endpoints": "Google Cloud Endpoints", "google-endpoints-api-management": "Google Endpoints API management", "google-gax": "Google API Extensions", "google-i18n-address": "Address validation helpers for Google's i18n address database", "google-measurement-protocol": "A Python implementation of Google Analytics Measurement Protocol", "google-pasta": "pasta is an AST-based Python refactoring library", "google-python-cloud-debugger": "Python Cloud Debugger", "google-resumable-media": "Utilities for Google Media Downloads and Resumable Uploads", "google-search-api": "Search in google", "google_images_download": "Python Script to download hundreds of images from 'Google Images'. It is a ready-to-run code! ", "googleads": "Google Ads Python Client Library", "googleapis-common-protos": "Common protobufs used in Google APIs", "googleappenginecloudstorageclient": "This library is the preferred way of accessing Google Cloud Storage from App Engine. It was designed to replace the Files API. As a result it contains much of the same functionality (streaming reads and writes but not the complete set of GCS APIs). It also provides key stability improvements and a better overall developer experience.", "googleappenginemapreduce": "Enable MapReduce style data processing on App Engine", "googleappenginepipeline": "Enable asynchronous pipeline style data processing on App Engine", "googledatastore": "Google Cloud Datastore Protobuf client", "googledevices": "Get information from, and control various Google devices.", "googledrivedownloader": "Minimal class to download shared files from Google Drive.", "googlefinance": "Python module to get real-time (no delay) stock data from Google Finance API", "googlemaps": "Python client library for Google Maps Platform", "googletrans": "Free Google Translate API for Python. Translates totally free of charge.", "goose-extractor": "Html Content / Article Extractor, web scrapping", "goose3": "Html Content / Article Extractor, web scrapping for Python3", "gorilla": "Convenient approach to monkey patching", "goslate": "Goslate: Free Google Translate API", "goslide-api": "Python API to utilise the goslide.io Open Cloud API", "got": "a tiny async crawler", "gov": "gov", "gp": "UNKNOWN", "gpflow": "Gaussian process methods in tensorflow", "gpg": "Python bindings for GPGME GnuPG cryptography library", "gpiozero": "A simple interface to GPIO devices with Raspberry Pi.", "gplayproxy": "gplayproxy", "gprof2dot": "Generate a dot graph from the output of several profilers.", "gps3": "Python 2.7-3.5 clients for gpsd", "gpsoauth": "A python client library for Google Play Services OAuth.", "gpustat": "An utility to monitor NVIDIA GPU status and usage", "gputil": "GPUtil is a Python module for getting the GPU status from NVIDA GPUs using nvidia-smi.", "gpw": "A simple wrapper for Gnuplot", "gpxpy": "GPX file parser and GPS track manipulation library", "gpy": "The Gaussian Process Toolbox", "gq": "a query-like selector for maf data", "gql": "GraphQL client for Python", "gr": "Python visualization framework", "grab": "Web Scraping Framework", "grafeas": "Grafeas API client library", "grako": "Grako takes a grammar in a variation of EBNF as input, and outputs a memoizing PEG/Packrat parser in Python.", "granary": "The social web translator", "grandalf": "Graph and drawing algorithms framework", "grandfatherson": "Grandfather-father-son backup rotation calculator", "graphcanvas": "interactive graph visualization", "graphene": "GraphQL Framework for Python", "graphene-django": "Graphene Django integration", "graphene-django-optimizer": "Optimize database access inside graphene queries.", "graphene-sqlalchemy": "Graphene SQLAlchemy integration", "graphenelib": "Python library for graphene-based blockchains", "graphics": "A console based graphics engine for simple Unicode games and animations.", "graphite-api": "Graphite-web, without the interface. Just the rendering HTTP API.", "graphite-web": "Enterprise scalable realtime graphing", "graphitesend": "A simple interface for sending metrics to Graphite", "graphlab-create": "GraphLab Create enables developers and data scientists to apply machine learning to build state of the art data products.", "graphql-core": "GraphQL implementation for Python, a port of GraphQL.js, the JavaScript reference implementation for GraphQL.", "graphql-django-view": "A django view that will execute a GraphQL Schema", "graphql-relay": "Relay library for graphql-core-next", "graphql-server-core": "GraphQL Server tools for powering your server", "graphs": "A library for graph-based machine learning.", "graphviz": "Simple Python interface for Graphviz", "graphy": "A simple chart library for Python", "grappelli_safe": "A snapshot of the grappelli_2 branch of django-grappelli, packaged as a dependency for the Mezzanine CMS for Django.", "graypy": "Python logging handlers that send messages in the Graylog Extended Log Format (GELF).", "greek-accentuation": "Python 3 library for accenting (and analyzing the accentuation of) Ancient Greek words", "green": "Green is a clean, colorful, fast python test runner.", "greenlet": "Lightweight in-process concurrent programming", "greenwavereality": "Control of Greenwave Reality Lights", "greetings": "Generate greetings strings", "gremlinpython": "Gremlin-Python for Apache TinkerPop", "grequests": "Requests + Gevent", "griddataformats": "Reading and writing of data on regular grids in Python", "gridtk": "Parallel Job Manager", "grin": "A grep program configured the way I like it.", "grip": "Render local readme files before sending off to GitHub.", "grizzled-python": "The Grizzled Python Utility Library", "grok": "Grok: Now even cavemen can use Zope 3!", "grokcore.annotation": "Grok-like configuration for Zope annotations", "grokcore.catalog": "Grok-like configuration for catalog and indexes", "grokcore.chameleon": "Chameleon page template support for Grok", "grokcore.component": "Grok-like configuration for basic components (adapters, utilities, subscribers)", "grokcore.content": "Base content types for Grok", "grokcore.formlib": "Grok-like configuration for zope.formlib components", "grokcore.json": "JSON View component for Grok.", "grokcore.layout": "A layout component package for zope3 and Grok.", "grokcore.message": "Grok messaging machinery", "grokcore.rest": "REST View component for Grok.", "grokcore.security": "Grok-like configuration for Zope security components", "grokcore.site": "Grok-like configuration for Zope local site and utilities", "grokcore.startup": "Paster support for Grok projects.", "grokcore.traverser": "Traverser for the Grok Framework", "grokcore.view": "Grok-like configuration for Zope browser pages", "grokcore.viewlet": "Grok-like configuration for zope viewlets", "grokcore.xmlrpc": "XML-RPC View Component for Grok.", "grokui.admin": "The Grok administration and development UI", "growattserver": "A package to talk to growatt server", "grpc": "Pure Python Gevent RPC & golang RPC", "grpc-google-cloud-speech-v1beta1": "DEPRECATED", "grpc-google-iam-v1": "GRPC library for the google-iam-v1 service", "grpc-google-logging-v2": "GRPC library for the google-logging-v2 service", "grpc-google-pubsub-v1": "GRPC library for the google-pubsub-v1 service", "grpcio": "HTTP/2-based RPC framework", "grpcio-health-checking": "Standard Health Checking Service for gRPC", "grpcio-opentracing": "Python OpenTracing Extensions for gRPC", "grpcio-tools": "Protobuf code generator for gRPC", "grr-api-client": "GRR API client library", "grr-response-client": "The GRR Rapid Response client.", "grr-response-core": "GRR Rapid Response", "grr-response-server": "The GRR Rapid Response Server.", "gs": "A minimalistic Google Storage client", "gsconfig": "GeoServer REST Configuration", "gsd": "General simulation data file format.", "gsearch": "Google Search unofficial API for Python with no external dependencies", "gsimporter": "GeoServer Importer Client", "gspread": "Google Spreadsheets Python API", "gssapi": "Python GSSAPI Wrapper", "gstreamer-player": "Python 3 wrapper for playing media via gstreamer", "gsutil": "A command line tool for interacting with cloud storage services.", "gsw": "Gibbs Seawater Oceanographic Package of TEOS-10", "gtextfsm": "Google textfsm package.", "gtfs-realtime-bindings": "Python classes generated from the GTFS-realtime protocol buffer specification.", "gtts": "gTTS (Google Text-to-Speech), a Python library and CLI tool to interface with Google Translate text-to-speech API", "gtts-token": "Calculates a token to run the Google Translate text to speech", "guacamole": "Guacamole is an command line tool library for Python", "guess-language": "Guess the natural language of a text", "guess_language-spirit": "Guess the natural language of a text", "guessit": "GuessIt - a library for guessing information from video filenames.", "guillotina": "asyncio REST API Resource database", "guizero": "Python module to allow learners to easily create GUIs", "gunicorn": "WSGI HTTP Server for UNIX", "guppy": "Guppy-PE -- A Python Programming Environment", "gutenberg": "Library to interface with Project Gutenberg", "gutter": "Client to gutter feature switches backend", "guzzle_sphinx_theme": "Sphinx theme used by Guzzle.", "gw": "", "gwcs": "Generalized World Coordinate System", "gwdatafind": "The client library for the LIGO Data Replicator (LDR) service.", "gwpy": "A python package for gravitational-wave astrophysics", "gwtrigfind": "Utility to find files archived by GW event trigger generators", "gy": "Yet another .gitignore magician in your command line.", "gym": "The OpenAI Gym: A toolkit for developing and comparing your reinforcement learning agents.", "gyp": "Generate Your Projects", "h11": "A pure-Python, bring-your-own-I/O implementation of HTTP/1.1", "h2": "HTTP/2 State-Machine based protocol implementation", "h2o": "H2O, Fast Scalable Machine Learning, for python", "h5py": "Read and write HDF5 files from Python", "ha-alpr": "a Python module that provides an interface OpenAlpr command line tool for Home-Assistant.", "ha-ffmpeg": "A library that handling with ffmpeg for home-assistant", "ha-philipsjs": "jointSPACE API for Home-Assistant", "haanna": "Plugwise Anna API to use in conjunction with Home Assistant.", "habanero": "Low Level Client for Crossref Search API", "habitipy": "tools and library for Habitica restful API (http://habitica.com)", "hachibee-sphinx-theme": "a simple sphinx theme", "hachoir": "Package of Hachoir parsers used to open binary files", "hachoir-core": "Core of Hachoir framework: parse and edit binary files", "hachoir-metadata": "Program to extract metadata using Hachoir library", "hachoir-parser": "Package of Hachoir parsers used to open binary files", "hacking": "OpenStack Hacking Guideline Enforcement", "haigha": "Synchronous and asynchronous AMQP client library", "haikunator": "Heroku-like random name generator for python.", "halberd": "HTTP load balancer detector", "halite": "SaltStack Web UI", "halo": "Beautiful terminal spinners in Python", "hamlish-jinja": "Haml-ish syntax for jinja2 templates", "hamlpy": "HAML like syntax for Django templates", "hammock": "rest like a boss", "handler": "A simple printer of nested list", "handy": "A collection of tools to make your django life easier.", "hangups": "the first third-party instant messaging client for Google Hangouts", "hangups-urwid": "A full-featured console (xterm et al.) user interface library", "hanziconv": "Hanzi Converter for Traditional and Simplified Chinese", "hap-python": "HomeKit Accessory Protocol implementation in python", "hapic": "HTTP api input/output manager", "happybase": "A developer-friendly Python library to interact with Apache HBase", "hard": "hard variables: they dumping when the set time", "hardware": "Hardware detection and classification utilities", "has": "Hash array snapshot", "hash": "hash package", "hash_ring": "Implements consistent hashing in Python (using md5 as hashing function).", "hashfs": "A content-addressable file management system.", "hashid": "Software to identify the different types of hashes", "hashids": "Python implementation of hashids (http://www.hashids.org).Compatible with python 2.6-3.", "hashin": "Edits your requirements.txt by hashing them in", "hashlib": "Secure hash and message digest algorithm library", "hashring": "Implements consistent hashing in Python (using md5 as hashing function).", "hass-nabucasa": "Home Assistant cloud integration by Nabu Casa, inc.", "hastebin.py": "A simple Hastebin API wrapper for Python.", "haven": "flask's style binary server framework", "haversine": "Calculate the distance between 2 points on Earth.", "hawkauthlib": "Hawk Access Authentication protocol", "haystack": "Search C Structures in a process' memory", "hazm": "Python library for digesting Persian text.", "hbase-thrift": "Python client for HBase Thrift interface", "hbmqtt": "MQTT client/broker using Python 3.4 asyncio library", "hcloud": "Official Hetzner Cloud python library", "hcluster": "A hierarchical clustering package for Scipy.", "hdate": "Hebrew date and Zmanim", "hdbscan": "Clustering based on density with variable density clusters", "hdf5storage": "Utilities to read/write Python types to/from HDF5 files, including MATLAB v7.3 MAT files.", "hdfs": "HdfsCLI: API and command line interface for HDFS.", "hdijupyterutils": "HdiJupyterUtils: Utils for Jupyter projects from HDInsight team", "he": "A library of Python helpers.", "head": "A simple printer of Head lists", "headlines": "Headlines for the terminal.", "healpy": "Healpix tools package for Python", "healthcheck": "Adds healthcheck endpoints to Flask apps", "heapdict": "a heap with decrease-key and increase-key operations", "hearthstone": "CardDefs.xml parser and Hearthstone enums for Python", "heat": "A framework for high performance data analytics and machine learning.", "heat-translator": "Tool to translate non-heat templates to Heat Orchestration Template.", "heatmiserv3": "A library to interact with Heatmiser Themostats using V3", "heka-py": "Metrics Logging", "heka-py-cef": "CEF extensions to metrics logging", "heka-py-raven": "A heka-py plugin to send exceptions to Sentry", "helga": "A full-featured chat bot for Python 2.7 with plugin support", "hello": "UNKNOWN", "hellowebapp-deploy": "Packages needed to deploy to Heroku using Hello Web App's tutorial.", "helloworld": "UNKNOWN", "help": "a nice memory for future", "help50": "This is help50, a command-line tool that helps students understand error messages.", "helper": "Development library for quickly writing configurable applications and daemons", "hem": "Generic utilities to help build frameworks on top of pyramid", "her": "A new file format", "hera": "An interface to interact with a Zeus Traffic Manager.", "here": "Configures shells for easy python development", "hereby": "Small Python library for accessing files in the same folder as your code", "herepy": "A Python wrapper around the HERE APIs", "hermes-python": "Python bindings for Snips Hermes Protocol", "heroku": "Heroku API Wrapper.", "heroku3": "Heroku API Wrapper.", "hexagonit.recipe.download": "zc.buildout recipe for downloading and extracting packages", "hexagonit.testing": "Plone4 test helper which uses plone.testing and manuel.", "hexbytes": "hexbytes: Python `bytes` subclass that decodes hex, with a readable console output", "hexdump": "dump binary data to hex format and restore from there", "hg-git": "push to and pull from a Git repository using Mercurial", "hgapi": "Python API to Mercurial using the command-line interface", "hgsubversion": "hgsubversion is a Mercurial extension for working with Subversion repositories.", "hgtools": "Classes and setuptools plugin for Mercurial and Git repositories", "hgvs": "HGVS Parser, Formatter, Mapper, Validator", "hi": "A simple hello world module", "hickle": "Hickle - a HDF5 based version of pickle", "hidapi": "A Cython interface to the hidapi from https://github.com/libusb/hidapi", "hierarchical": "Hierarchical interface to Python dictionaries", "hieroglyph": "Generate HTML presentations from plain text sources with all the power of Sphinx.", "high": "Fetch public emails from github repository stargazers/collaborators/etc", "highered": "Learnable Edit Distance Using PyHacrf", "hikvision": "Provides a python interface to interact with a hikvision camera", "hipnotify": "Deadly simple HipChat API V2 room notification library", "hiredis": "Python wrapper for hiredis", "hit": "Yet another command-line wrapper for Git.", "hive": null, "hive-thrift-py": "Hive Python Thrift Libs", "hjson": "Hjson, a user interface for JSON.", "hkavr": "Library for controlling a Harman Kardon AVR", "hkdf": "HMAC-based Extract-and-Expand Key Derivation Function (HKDF)", "hlint": "HTML 5 Linter using Mozilla validation services", "hlk-sw16": "Python client for HLK-SW16", "hmac": "HMAC (Keyed-Hashing for Message Authentication) Python module.", "hmmlearn": "", "hmpty": "Tools for working with Hierarchical Triangular Meshes (HTMs). Generate HTM-ids, crossmatch sets of sky-coordinates and more", "hn": "A CLI and Python library for using the HNSearch API.", "hob": "A multi-language code generator for the Opera Scope Protocol. Code is generated from Google Protocol Buffer definitions.", "hog": "Sending multiple `HTTP` requests `ON` `GREEN` thread", "holder": "Caches a result, and returns it. Useful in if statements.", "hole": "Python API for interacting with *hole.", "holidays": "Generate and work with holidays in Python", "holoviews": "Stop plotting your data - annotate your data and let it visualize itself.", "holster": "a set of Python utilities", "home": "Home automation by @d0ugal.", "home-assistant-frontend": "The Home Assistant frontend", "homeassistant": "Open-source home automation platform running on Python 3.", "homeassistant-pyozw": "python_openzwave is a python wrapper for the openzwave c++ library.", "homebase": "A platform independent API for paths in which applications can write data.", "homekit": "Python code to interface HomeKit Accessories and Controllers", "homematicip": "An API for the homematicip cloud", "homura": "Python downloader with progress", "honcho": "Honcho: a Python clone of Foreman. For managing Procfile-based applications.", "hook": "A config based hook framework for github and others", "hookbox": "HookBox is a Comet server and message queue that tightly integrates with your existing web application via web hooks and a REST interface.", "hoover": "Library for logging to Loggly from within Python webapps", "horimote": "Async API wrapper for Samsumgs set-top boxes SMT-G7400 and SMT-G7401.", "horovod": "Distributed training framework for TensorFlow, Keras, PyTorch, and Apache MXNet.", "horsemeat": "Web framework for the damned.  The mad.", "horus": "Generic user registration for pyramid", "hostlists": "", "hot": "Heat author command-line utility", "hotqueue": "HotQueue is a Python library that allows you to use Redis as a message queue within your Python programs.", "houdini.py": "A Python binding for Houdini.", "hovercraft": "Makes impress.js presentations from reStructuredText", "how": "Impressive Linux commands cheat sheet.", "howdoi": "Instant coding answers via the command line", "hp3parclient": "HP 3PAR HTTP REST Client", "hpack": "Pure-Python HPACK header compression", "hpfeeds": "hpfeeds module", "hpfeeds-logger": "Python library to normalize and log hpfeeds honeypot messages", "hpfeeds-threatstream": "hpfeeds module", "hplefthandclient": "HP LeftHand/StoreVirtual HTTP REST Client", "hr": "Horizontal rule for your terminal", "hstspreload": "Chromium HSTS Preload list as a Python package and updated daily", "ht": "Heat transfer component of Chemical Engineering Design Library (ChEDL)", "html": "simple, elegant HTML, XHTML and XML generation", "html-linter": "Lints an HTML5 file using Google's style guide", "html-testrunner": "A Test Runner in python, for Human Readable HTML Reports", "html-to-draftjs": "Convert basic HTML into DraftJS JSON format.", "html2text": "Turn HTML into equivalent Markdown-structured text.", "html5": "HTML parser based on the WHATWG HTML specification", "html5lib": "HTML parser based on the WHATWG HTML specification", "html5validator": "Validate HTML5 files.", "htmlmin": "An HTML Minifier", "htmlparser": "Backport of HTMLParser from python 2.7", "htmlpurifier": "A silly but useful hack for sanitizing untrusted HTML input in Django forms via the PHP HTML Purifier library", "htmresearch": "Numenta's HTM research code", "htop": "A lhk 1st training project", "htpasswd": "Library to work with htpasswd user (basic authorization) and group files.", "htseq": "A framework to process and analyze data from high-throughput sequencing (HTS) assays", "httmock": "A mocking library for requests.", "http": "HTTP library for Python", "http-ece": "Encrypted Content Encoding for HTTP", "http-parser": "http request/response parser", "http4store": "HTTP4Store - python client for 4Store.org (4s-httpd)", "httpagentparser": "Extracts OS Browser etc information from http user agent string", "httpauth": "WSGI HTTP Digest Authentication middleware", "httpbin": "HTTP Request and Response Service", "httpclient": "A headless HTTP browser.", "httpcore": "...", "httpie": "HTTPie - a CLI, cURL-like tool for humans.", "httplib2": "A comprehensive HTTP client library.", "httpolice": "Validator for HTTP", "httpreplay": "Properly interpret, decrypt, and replay pcap files", "httpretty": "HTTP client mock for Python", "https": "", "httpserver": "Asyncio implementation of an HTTP server", "httpsig": "Secure HTTP request signing using the HTTP Signature draft specification", "httptools": "A collection of framework independent HTTP protocol utils.", "httpx": "The next generation HTTP client.", "httreplay": "A HTTP replay library for testing.", "huawei-lte-api": "API For huawei LAN/WAN LTE Modems", "hub": "Snark Hub", "hubstorage": "Client interface for Scrapinghub HubStorage", "huepy": "Print awesomely in terminals.", "hues": "Colored terminal text made easy for Python and happiness.", "huey": "huey, a little task queue", "hug": "A Python framework that makes developing APIs as simple as possible, but no simpler.", "humanfriendly": "Human friendly output for text interfaces using Python", "humanize": "python humanize utilities", "humilis": "AWS cloudformation-based deployment framework", "hunter": "Hunter is a flexible code tracing toolkit.", "hupper": "Integrated process monitor for developing and reloading daemons.", "hurry.filesize": "A simple Python library for human readable file sizes (or anything sized in bytes).", "hurry.jstree": "hurry.resource resources for JsTree", "husl": "Human-friendly HSL", "hvac": "HashiCorp Vault API client", "hvplot": "A high-level plotting API for the PyData ecosystem built on HoloViews.", "hy": "Lisp and Python love each other.", "hyde": "hyde is a static website generator", "hydrawiser": "A Python library to communicate with Hunter Wi-Fi irrigation controllers (https://www.hunter.com) that support the Hydrawise application (https://www.hydrawise.com).", "hypatia": "Python package for searching and indexing", "hypchat": "Package for HipChat's v2 API", "hyper": "HTTP/2 Client for Python", "hyperas": "Simple wrapper for hyperopt to do convenient hyperparameter optimization for Keras models", "hypercorn": "A ASGI Server based on Hyper libraries and inspired by Gunicorn.", "hyperframe": "HTTP/2 framing layer for Python", "hyperlink": "A featureful, immutable, and correct URL for Python.", "hyperloglog": "HyperLogLog cardinality counter", "hyperopt": "Distributed Asynchronous Hyperparameter Optimization", "hyperspy": "Multidimensional data analysis toolbox", "hyphenation": "Hyphenation module for Python", "hypothesis": "A library for property-based testing", "hypothesis-pytest": "Pytest plugin for better integration with hypothesis", "i18n": "Simplify the development of internationalized applications", "i18ndude": "i18ndude performs various tasks related to ZPT's, Python Scripts and i18n.", "i3ipc": "An improved Python library to control i3wm and sway", "iaqualink": "Asynchronous library for Jandy iAqualink", "ibis-framework": "Productivity-centric Python Big Data Framework", "ibm-cloud-sdk-core": "Client library for the IBM Cloud services", "ibm-db": "Python DBI driver for DB2 (LUW, zOS, i5) and IDS", "ibm-db-sa": "SQLAlchemy support for IBM Data Servers", "ibm-watson": "Client library to use the IBM Watson Services", "ibmiotf": "Python Client for IBM Watson IoT Platform", "ibmquantumexperience": "A Python library for the Quantum Experience API.", "ibpy2": "IbPy - Interactive Brokers Python API", "icalendar": "iCalendar parser/generator", "icdiff": "improved colored diff", "icon": "Random choice from Google Material Icons in Jupyter notebook", "iconv": "iconv-based Unicode converter", "ics": "Python icalendar (rfc5545) parser", "id": "xuexi", "ideas": "Easy creation of import hooks to test ideas.", "identify": "File identification library for Python", "idios": "", "idna": "Internationalized Domain Names in Applications (IDNA)", "idna_ssl": "Patch ssl.match_hostname for Unicode(idna) domains support", "idr": "Image Data Repository access library", "idutils": "Small library for persistent identifiers used in scholarly communication.", "ie": "Validation of brazilian state registration numbers", "iexfinance": "Python module to get stock data from IEX Cloud and IEX API 1.0", "ifaddr": "Enumerates all IP addresses on all network adapters of the system.", "igitt": "A git(hub/lab/...) hosting abstraction library.", "iglo": "Control iGlo based RGB lights", "ignored": "UNKNOWN", "igraph": "View graph data structures in the IPython notebook.", "ihcsdk": "IHC Python SDK", "ijsfhsf123": "A simple", "ijson": "Iterative JSON parser with a standard Python iterator interface", "ikp3db": "A hackable CPython 3.6+ remote debugger designed for the Web and online IDE integration. Fork of IKPdb.", "im": "IM is a tool to manage virtual infrastructures on Cloud deployments", "image": "Django application that provides cropping, resizing, thumbnailing, overlays and masking for images and videos with the ability to set the center of attention,", "imagecorruptions": "This package provides a set of image corruptions.", "imagehash": "Image Hashing library", "imageio": "Library for reading and writing a wide range of image, video, scientific, and volumetric data formats.", "imageio-ffmpeg": "FFMPEG wrapper for Python", "imagesize": "Getting image size from png/jpeg/jpeg2000/gif file", "imagestore": "Gallery solution for django projects", "imapclient": "Easy-to-use, Pythonic and complete IMAP client library", "imaplib2": "A threaded Python IMAP4 client.", "imbalanced-learn": "Toolbox for imbalanced dataset in machine learning.", "imblearn": "Toolbox for imbalanced dataset in machine learning.", "imcsdk": "python SDK for Cisco UCS IMC", "imdbpie": "Python IMDB client using the IMDB json web service made available for their iOS app.", "imdbpy": "Python package to access the IMDb's database", "imexam": "Astropy affiliated package", "img2pdf": "Convert images to PDF via direct JPEG inclusion.", "imgaug": "Image augmentation library for deep neural networks", "imgkit": "Wkhtmltopdf python wrapper to convert html to image using the webkit rendering engine and qt", "imgurpython": "Official Imgur python library with OAuth2 and samples", "iminuit": "MINUIT2 from Python - Fitting like a boss", "immutables": "Immutable Collections", "impacket": "Network protocols Constructors and Dissectors", "impala": "Import packages from \"wrongly\" named directories", "implicit": "Collaborative Filtering for Implicit Datasets", "importanize": "Utility for organizing Python imports using PEP8 or custom rules", "important": "Utility to find unused packages in requirements  and to constrain package usage", "importd": "A django based miniframework, inspired by Sinatra", "importlib": "Backport of importlib.import_module() from Python 2.7", "importlib-metadata": "Read metadata from Python packages", "importlib-no-failure": "Backport of importlib.import_module() from Python 2.7", "importlib_resources": "Read resources from Python packages", "importmagic": "Python Import Magic - automagically add, remove and manage imports", "importscan": "Recursively import modules and sub-packages", "imposm.parser": "Fast and easy OpenStreetMap XML/PBF parser.", "impyla": "Python client for the Impala distributed query engine", "imread": "imread: Image reading library", "imutils": "A series of convenience functions to make basic image processing functions such as translation, rotation, resizing, skeletonization, displaying Matplotlib images, sorting contours, detecting edges, and much more easier with OpenCV and both Python 2.7 and Python 3.", "incf.countryutils": "A convenience API for transformations between different ISO 3166 country codes.", "include": "Dynamic import from files and other sources", "incomfort-client": "A aiohttp-based client for Intergas InComfort/InTouch Lan2RF systems", "incremental": "", "incuna-test-utils": "Custom TestCases and other test helpers for Django apps", "indeed": "Indeed Job Search Python Api Client", "index": "Index System", "indexing": "The plugin that provides the indexing support.", "indico-fonts": "Indico - Binary fonts", "indicoio": "A Python Wrapper for indico. Use pre-built state of the art machine learning algorithms with a single line of code.", "infi.conf": "Generic configuration mechanism", "infi.dtypes.iqn": "Datatype for IQN", "infi.dtypes.wwn": "Datatype for WWN", "infi.traceback": "better tracebacks", "infinisdk": "Infinidat API SDK", "infinity": "All-in-one infinity value for Python. Can be compared to any object.", "inflect": "Correctly generate plurals, singular nouns, ordinals, indefinite articles; convert numbers to words", "inflection": "A port of Ruby on Rails inflector to Python", "inflector": "Inflector for Python", "influxdb": "InfluxDB client", "infoblox-client": "Client for interacting with Infoblox NIOS over WAPI", "information": "Python library for knowledge", "inifile": "A small INI library for Python.", "iniherit": "A ConfigParser subclass with file-specified inheritance.", "iniparse": "Accessing and Modifying INI files", "initgroups": "Convenience uid/gid helper function used in Zope2.", "injector": "Injector - Python dependency injection framework, inspired by Guice", "inline": "embed inline C / C++ source codes in Python", "inlinestyler": "Inlines external CSS into HTML elements.", "inner": "a simple test", "inotify": "An adapter to Linux kernel support for inotify directory-watching.", "input": "", "inputs": "Cross-platform Python support for keyboards, mice and gamepads.", "inquirer": "Collection of common interactive command line user interfaces, based on Inquirer.js", "inspektor": "Inspektor python code checker and fixer", "instabot": "Instagram bot scripts for promotion and API python wrapper.", "instack-undercloud": "instack-undercloud", "instagram-scraper": "instagram-scraper is a command-line application written in Python that scrapes and downloads an instagram user's photos and videos. Use responsibly.", "instagramapi": "Unofficial instagram API, give you access to ALL instagram features (like, follow, upload photo and video and etc)! Write on python.", "install": "", "instantmusic": "Instantly download any song! Without knowing the name of the song!!!!", "instapush": "a python wrapper for instapush", "insteonlocal": "InsteonLocal allows local (non-cloud) control of the Insteon Hub 2245-222", "insteonplm": "Python API for controlling Insteon PowerLinc Modems", "int": "Integer conversion utility.", "intake": "Data load and catalog system", "intbitset": "C-based extension implementing fast integer bit sets.", "integer": "Package for creating integer types.", "integration": "A simple program to perfom integration", "intel-openmp": "Intel(R) OpenMP Runtime Library", "intelhex": "Python library for Intel HEX files manipulations", "intellect": "A Domain-specific language and Rules Engine for Python", "interactive": "A package to interact with any program with a command line console.", "interface": "Interface implementation", "interfaces": "Simple decorator implementation of an interface.", "interlude": "Interlude for Doctests provides an Interactive Console.", "intermine": "InterMine WebService client", "internationalization": "UNKNOWN", "internetarchive": "A python interface to archive.org.", "interruptingcow": "A watchdog that interrupts long running code.", "intervals": "Python tools for handling intervals (ranges of comparable objects).", "intervaltree": "Editable interval tree data structure for Python 2 and 3", "into": "Data migration utilities", "invenio": "Invenio Digital Library Framework.", "invenio-access": "Invenio module for common role based access control.", "invenio-accounts": "Invenio user management and authentication.", "invenio-admin": "Invenio module that adds administration panel to the system.", "invenio-app": "WSGI, Celery and CLI applications for Invenio flavours.", "invenio-assets": "Media assets management for Invenio.", "invenio-base": "Base package for building Invenio application factories.", "invenio-cache": "Cache module for Invenio.", "invenio-celery": "Celery module for Invenio.", "invenio-client": "Invenio-Client permits to connect to remote Invenio digital library instances.", "invenio-communities": "Invenio module that adds support for communities.", "invenio-config": "Invenio configuration loader.", "invenio-csl-rest": "REST API for Citation Style Language styles.", "invenio-db": "Database management for Invenio.", "invenio-deposit": "Invenio module for depositing metadata using workflows.", "invenio-files-rest": "Files download/upload REST API similar to S3 for Invenio.", "invenio-formatter": "Jinja utilities for Invenio.", "invenio-github": "Invenio module that adds GitHub integration to the platform.", "invenio-i18n": "Invenio internationalization module.", "invenio-indexer": "Record indexer for Invenio.", "invenio-jsonschemas": "Invenio module for building and serving JSONSchemas.", "invenio-logging": "Module providing logging capabilities.", "invenio-mail": "Invenio-Mail is an integration layer between Invenio and Flask-Mail.", "invenio-marc21": "Invenio module with nice defaults for MARC21 overlay.", "invenio-matcher": "Invenio module to detect duplicates on submit.", "invenio-migrator": "Utilities for migrating past Invenio versions to Invenio 3.0.", "invenio-oaiserver": "Invenio module that implements OAI-PMH server.", "invenio-oauth2server": "Invenio module that implements OAuth 2 server.", "invenio-oauthclient": "Invenio module that provides OAuth web authorization support.", "invenio-openaire": "OpenAIRE service integration for Invenio repositories.", "invenio-opendefinition": "Invenio module integrating Invenio repositories and OpenDefinition.", "invenio-pages": "Invenio module that adds support for static pages.", "invenio-pidstore": "Invenio module that stores and registers persistent identifiers.", "invenio-previewer": "Invenio module for previewing files.", "invenio-query-parser": "Search query parser supporting Invenio and SPIRES search syntax.", "invenio-records": "Invenio-Records is a metadata storage module.", "invenio-records-files": "Invenio modules that integrates records and files.", "invenio-records-rest": "REST API for invenio-records.", "invenio-records-ui": "User interface for Invenio-Records.", "invenio-rest": "REST API module for Invenio.", "invenio-search": "Invenio module for information retrieval.", "invenio-search-ui": "UI for Invenio-Search.", "invenio-sipstore": "Submission Information Package store for Invenio.", "invenio-theme": "Invenio standard theme.", "invenio-userprofiles": "User profiles module for Invenio.", "invenio-webhooks": "Invenio module for processing webhook events.", "invenio-xrootd": "XRootD file storage support for Invenio.", "invitation": "Interview solution", "invocations": "Common/best-practice Invoke tasks and collections", "invoke": "Pythonic task execution", "io": "", "ioflo": "Flow Based Programming Automated Reasoning Engine and Automation Operation System", "ios": "Python for iran.", "iowait": "Platform-independent module for I/O completion events", "ipaclient": "FreeIPA client library", "ipaddr": "Google's IP address manipulation library", "ipaddress": "IPv4/IPv6 manipulation library", "ipalib": "FreeIPA common python library", "ipaplatform": "FreeIPA platform", "ipapython": "FreeIPA python support library", "ipasn-redis": "API to access an IP-ASN-history instance via Redis.", "ipcalc": "IP subnet calculator", "ipdb": "IPython-enabled pdb", "ipdbplugin": "Nose plugin to use iPdb instead of Pdb when tests fail", "iperf3": "Python wrapper around iperf3", "ipfsapi": "Python IPFS API client library", "ipfshttpclient": "Python IPFS HTTP CLIENT library", "ipify": "The official client library for ipify: A Simple IP Address API.", "ipip-ipdb": "IPIP.net officially supported IP database ipdb format parsing library", "iptcinfo": "IPTCInfo: extract and modify IPTC (metadata) information on images - port of IPTCInfo.pm by Josh Carter <josh@multipart-mixed.com>'", "iptools": "Python utilites for manipulating IPv4 and IPv6 addresses", "ipwhois": "Retrieve and parse whois data for IPv4 and IPv6 addresses.", "ipy": "Class and tools for handling of IPv4 and IPv6 addresses and networks", "ipydatawidgets": "A set of widgets to help facilitate reuse of large datasets across widgets", "ipykernel": "IPython Kernel for Jupyter", "ipyleaflet": "A Jupyter widget for dynamic Leaflet maps", "ipympl": "Matplotlib Jupyter Extension", "ipyparallel": "Interactive Parallel Computing with IPython", "ipython": "IPython: Productive Interactive Computing", "ipython-cluster-helper": "Simplify IPython cluster start up and use for multiple schedulers.", "ipython-cypher": "Neo4j Cypher cell and line magic for IPython, Pandas, NetworkX and matplotlib", "ipython-secrets": "This package provides functions for using secrets in a Jupyter notebook.", "ipython-sql": "RDBMS access via IPython", "ipython_genutils": "Vestigial utilities from IPython", "ipyvolume": "IPython widget for rendering 3d volumes", "ipywidgets": "IPython HTML widgets for Jupyter", "iq": "IQ SDK.", "irc": "IRC (Internet Relay Chat) protocol library for Python", "irc3": "plugable irc client library based on asyncio with DCC and SASL support", "iris": "A Python project for Illumon Iris", "iron-cache": "Client library for IronCache, the cache-in-the-cloud provided by Iron.io.", "iron-core": "Universal classes and methods for Iron.io API wrappers to build on.", "iron-mq": "Client library for IronMQ, a message queue in the cloud", "iron-worker": "The Python client for IronWorker, a cloud service for background processing.", "ironic-discoverd": "Hardware introspection for OpenStack Ironic", "ironic-lib": "Ironic common library", "isbnid": "Python ISBN ids", "isbnlib": "Extract, clean, transform, hyphenate and metadata for ISBNs (International Standard Book Number).", "isc": "", "isc_dhcp_leases": "Small python module for reading /var/lib/dhcp/dhcpd.leases from isc-dhcp-server", "iscconf": "Parser for ISC configuration files.", "iso-639": "Python library for ISO 639 standard", "iso3166": "Self-contained ISO 3166-1 country definitions.", "iso639": "ISO639-2 support for Python.", "iso8601": "Simple module to parse ISO 8601 dates", "isodate": "An ISO 8601 date/time/duration parser and formatter", "isort": "A Python utility / library to sort Python imports.", "isotopic-logging": "Mark and trace events in your log alike isotopic labeling", "isoweek": "Objects representing a week", "issues": "Issues", "it": "Modern python code review tool / framework", "itchat": "A complete wechat personal account api", "item": "API to describe schema of data to extract them from HTML", "items": "Attribute accessible dicts and collections thereof", "its": "An \u201cIssue tracking system\u201d as part of your repository", "itsdangerous": "Various helpers to pass data to untrusted environments and back.", "itty": "The itty-bitty Python web framework.", "itypes": "Simple immutable types for python.", "iwlib": "Python module to interface with iwlib", "j2cli": "Command-line interface to Jinja2 for templating in shell scripts.", "jack": "A command line tool for time-based queries on log files.", "jaeger-client": "Jaeger Python OpenTracing Tracer implementation", "james": "simple standalone WSGI server with code reloading", "jamo": "A Hangul syllable and jamo analyzer.", "jams": "A JSON Annotated Music Specification for Reproducible MIR Research", "janome": "Japanese morphological analysis engine.", "janus": "Mixed sync-async queue to interoperate between asyncio tasks and classic threads", "japronto": "A HTTP application toolkit and server bundle based on uvloop and picohttpparser", "jaraco.apt": "Tools for Debian's APT package manager", "jaraco.classes": "Utility functions for Python class constructs", "jaraco.collections": "Collection objects similar to those in stdlib by jaraco", "jaraco.context": "Context managers by jaraco", "jaraco.functools": "Functools like those found in stdlib", "jaraco.itertools": "jaraco.itertools", "jaraco.logging": "Support for Python logging facility", "jaraco.packaging": "tools to supplement packaging Python releases", "jaraco.stream": "routines for dealing with data streams", "jaraco.text": "Module for text manipulation", "jaraco.timing": "Routines for quick and dirty profiling and rate limits", "jaraco.util": "General utility modules that supply commonly-used functionality", "jarn.jsi18n": "Plone i18n for JavaScript", "jarn.viewdoc": "Python documentation viewer", "jasmine": "Jasmine is a Behavior Driven Development testing framework for JavaScript. It does not rely on browsers, DOM, or any JavaScript framework. Thus it's suited for websites, Node.js (http://nodejs.org) projects, or anywhere that JavaScript can run.", "jasmine-core": "Jasmine is a Behavior Driven Development testing framework for JavaScript. It does not rely on browsers, DOM, or any JavaScript framework. Thus it's suited for websites, Node.js (http://nodejs.org) projects, or anywhere that JavaScript can run.", "jasper": "An asynchronous behavior-driven development framework", "java-random": "Implementation of Java's Random", "javabridge": "Python wrapper for the Java Native Interface", "javalang": "Pure Python Java parser and tools", "javascript": "The joy of javscript from Python.", "javascripthon": "Javascript for refined palates: a Python 3 to ES6 Javascript translator", "javasphinx": "Sphinx extension for documenting Java projects", "jax": "Differentiate, compile, and transform Numpy code.", "jaxlib": "XLA library for JAX", "jaydebeapi": "Use JDBC database drivers from Python 2/3 or Jython with a DB-API.", "jcconv": "jcconv \"JapaneseCharacterCONVerter\", interconvert hiragana, katakana, halfwidth kana", "jdatetime": "Jalali datetime binding for python", "jdc": "Dynamic classes for Jupyter notebooks.", "jdcal": "Julian dates from proleptic Gregorian and Julian calendars.", "je": "jenkins system tests CLI", "jedi": "An autocompletion tool for Python that can be used for text editors.", "jeepney": "Low-level, pure Python DBus protocol wrapper.", "jeetpatel": "A simple program for addition and subtraction,mutiplication and divsion", "jellyfish": "a library for doing approximate and phonetic matching of strings.", "jenkins-job-builder": "Manage Jenkins jobs with YAML", "jenkinsapi": "A Python API for accessing resources on a Jenkins continuous-integration server.", "jgraph": "View graph data structures in the IPython notebook.", "jieba": "Chinese Words Segmentation Utilities", "jieba3k": "Chinese Words Segementation Utilities", "jiggle-version": "Opinionated, no config build version incrementer. No regex. Drop in and go.", "jingo": "An adapter for using Jinja2 templates with Django.", "jingo-markdown": "Jingo (Jinja2) extension and filter for parse markdown text markup.", "jinja": "A small but fast and easy to use stand-alone template engine written in pure python.", "jinja2": "A very fast and expressive template engine.", "jinja2-cli": "A CLI interface to Jinja2", "jinja2-highlight": "Jinja2 extension to highlight source code using Pygments", "jinja2-time": "Jinja2 Extension for Dates and Times", "jira": "Python library for interacting with JIRA via REST APIs.", "jira-python": "API wrapper for Jira CRM written in Python", "jishaku": "A discord.py extension including useful tools for bot development and debugging.", "jmbo": "The Jmbo base product introduces a content type and various tools required to build Jmbo products.", "jmbo-calendar": "Jmbo calendar app.", "jmbo-foundry": "Jmbo Foundry ties together the various Jmbo products enabling you to rapidly build multilingual web and mobi sites with the minimum amount of code and customization.", "jmbo-friends": "Friends and badges for Jmbo.", "jmbo-post": "Jmbo post application. Post is a synonym for article. It is the most common content type.", "jmespath": "JSON Matching Expressions", "jms-es-sdk": "Jumpserver elastic search storage sdk", "jms-storage": "Jumpserver storage python sdk tools", "jnius": "Dynamic access to Java classes from Python", "job": "Python job finder", "joblib": "Lightweight pipelining: using Python functions as pipeline jobs.", "jobs": "UNKNOWN", "jocker": "Jinja2 Based Dockerfile and Image Generator", "johnny-cache": "Django caching framework that automatically caches all read queries.", "jose": "An implementation of the JOSE draft", "josepy": "JOSE protocol implementation in Python", "jot": "JSON Web Tokens", "journalism": "UNKNOWN", "jp": "json print query filter", "jpath": "Access nested dicts and lists using JSON-like path notation.", "jpeg": "read/write jpeg COM, EXIF, IPTC medata", "jpeg4py": "libjpeg-turbo cffi bindings and helper classes", "jplephem": "Use a JPL ephemeris to predict planet positions.", "jpush": "JPush's officially supported Python client library", "jpype1": "A Python to Java bridge.", "jpype1-py3": "Python-Java bridge. Fork of the jPype project by Steve Menard (http://jpype.sourceforge.net/), with the modifications applied by Luis Nell (https://github.com/originell/jpype)", "jq": "jq is a lightweight and flexible JSON processor.", "jquery": "Jquery javascript library for TurboGears", "js": "Root directory for Fanstatic packages", "js.angular": "Fanstatic packaging of AngularJS", "js.bootstrap": "fanstatic twitter bootstrap.", "js.chosen": "Fanstatic packaging of Chosen", "js.deform": "Fanstatic packaging of deform", "js.fineuploader": "Fanstatic packaging of Fine Uploader", "js.html5shiv": "Fanstatic packaging of html5shiv", "js.jqgrid": "Fanstatic packaging of jqgrid", "js.jquery": "jQuery packaged for Fanstatic.", "js.jquery_form": "Fanstatic packaging of jQuery Form", "js.jquery_joyride": "Fanstatic packaging of joyride", "js.jquery_maskedinput": "Fanstatic packaging of jquery.maskedinput", "js.jquery_maskmoney": "Fanstatic packaging of jQuery-maskMoney", "js.jquery_qtip": "Fanstatic packaging of jquery.qTip", "js.jquery_sortable": "Fanstatic packaging of jQuery Sortable", "js.jquery_tablednd": "Fanstatic packaging of jQuery TableDND", "js.jquery_tablesorter": "Fanstatic packaging of jQuery tablesorter", "js.jquery_timepicker_addon": "Fanstatic packaging of jQuery-Timepicker-Addon", "js.jquery_tooltip": "fanstatic jQuery tooltip.", "js.jqueryui": "fanstatic jQuery UI.", "js.jqueryui_tagit": "Fanstatic packaging of Tag-it!", "js.modernizr": "Fanstatic packaging of Modernizr", "js.select2": "Fanstatic packaging of select2", "js.socialshareprivacy": "Fanstatic packaging of jquery.socialshareprivacy", "js.tinymce": "Fanstatic packaging of TinyMCE", "js2py": "JavaScript to Python Translator & JavaScript interpreter written in 100% pure Python.", "jsbeautifier": "JavaScript unobfuscator and beautifier.", "jsl": "A Python DSL for defining JSON schemas", "jsmin": "JavaScript minifier.", "json-delta": "A diff/patch pair for JSON-serialized data structures.", "json-e": "A data-structure parameterization system written for embedding context in JSON objects", "json-log-formatter": "JSON log formatter", "json-logging-py": "JSON / Logstash formatters for Python logging", "json-merge-patch": "JSON Merge Patch library (https://tools.ietf.org/html/rfc7386)", "json-rpc": "JSON-RPC transport implementation", "json-spec": "Implements JSON Schema, JSON Pointer and JSON Reference.", "json-table-schema": "Python library for dealing with JSON Table Schema files", "json2html": "JSON to HTML Table Representation", "json5": "A Python implementation of the JSON5 data format.", "jsonchecker": "Script that validates JSON files and checks for duplicate keys.", "jsondatabase": "", "jsondiff": "Diff JSON and JSON-like structures in Python", "jsonfield": "A reusable Django field that allows you to store validated JSON in your model.", "jsonform": "Form validation for JSON-like data (i.e. document) in Python.", "jsonify": "A csv to json converter", "jsonlib": "JSON serializer/deserializer for Python", "jsonlib2": "JSON serializer/deserializer for Python", "jsonlines": "Library with helpers for the jsonlines file format", "jsonmerge": "Merge a series of JSON documents.", "jsonmodels": "Models to make easier to deal with structures that are converted to, or read from JSON.", "jsonnet": "Python bindings for Jsonnet - The data templating language", "jsonobject": "A library for dealing with JSON as python objects", "jsonobject-couchdbkit": "Python couchdb kit", "jsonpatch": " Apply JSON-Patches (RFC 6902) ", "jsonpath": "An XPath for JSON", "jsonpath-ng": "A final implementation of JSONPath for Python that aims to be standard compliant, including arithmetic and binary comparison operators and providing clear AST for metaprogramming.", "jsonpath-rw": "A robust and significantly extended implementation of JSONPath for Python, with a clear AST for metaprogramming.", "jsonpath-rw-ext": "Extensions for JSONPath RW", "jsonpickle": "Python library for serializing any arbitrary object graph into JSON", "jsonpointer": "Identify specific nodes in a JSON document (RFC 6901)", "jsonref": "An implementation of JSON Reference for Python", "jsonresolver": "JSON data resolver with support for plugins.", "jsonrpc": "A JSON-RPC 2.0 client-server library", "jsonrpc-async": "A JSON-RPC client library for asyncio", "jsonrpc-requests": "A JSON-RPC client library, backed by requests", "jsonrpc-websocket": "A JSON-RPC websocket client library for asyncio", "jsonrpcclient": "Send JSON-RPC requests", "jsonrpclib": "This project is an implementation of the JSON-RPC v2.0 specification (backwards-compatible) as a client library.", "jsonrpclib-pelix": "This project is an implementation of the JSON-RPC v2.0 specification (backwards-compatible) as a client library, for Python 2.7 and Python 3. This version is a fork of jsonrpclib by Josh Marshall, made to be also usable with Pelix/iPOPO remote services.", "jsonrpcserver": "Process JSON-RPC requests", "jsons": "For serializing Python objects to JSON (dicts) and back", "jsonschema": "An implementation of JSON Schema validation for Python", "jsonsir": "A serializer for JSON-like data in Python.", "jsonstreamer": "Provides a SAX-like push parser for JSON based on YAJL", "jsontableschema": "A utility library for working with JSON Table Schema in Python", "jsontokens": "JSON Web Token Python Library", "jsonutil": "a wrapper around simplejson which deserializes decimals to Decimal instead of to float", "jsonxs": "Use path expression strings to get and set values in JSON", "jtextfsm": "UNKNOWN", "juju-deployer": "A tool for deploying complex stacks with juju.", "jujubundlelib": "A python library for working with Juju bundles", "junit-xml": "Creates JUnit XML test result documents that can be read by tools such as Jenkins", "junit2html": "Generate HTML reports from Junit results", "junitxml": "PyJUnitXML, a pyunit extension to output JUnit compatible XML.", "junos-eznc": "Junos 'EZ' automation for non-programmers", "jupyter": "Jupyter metapackage. Install all the Jupyter components in one go.", "jupyter-book": "Jupyter Book: Create an online book with Jupyter Notebooks and Jekyll", "jupyter-client": "Jupyter protocol implementation and client libraries", "jupyter-console": "Jupyter terminal console", "jupyter-contrib-nbextensions": "A collection of Jupyter nbextensions.", "jupyter-core": "Jupyter core package. A base package on which Jupyter projects rely.", "jupyter-echarts-pypkg": "Echarts pypi packages for jupyter and python", "jupyter-pip": "Allows IPython notebook extension authors to make their extension pip installable!", "jupyter-server-proxy": "Jupyter server extension to supervise and proxy web services", "jupyter-tensorboard": "Start tensorboard in Jupyter! Jupyter notebook integration for tensorboard.", "jupyter_contrib_core": "Common utilities for jupyter-contrib projects.", "jupyter_dashboards": "Extension for Jupyter Notebook for laying out, viewing, and deploying notebooks as dynamic dashboards", "jupyter_highlight_selected_word": "Jupyter notebook extension that enables highlighting every instance of the current word in the notebook.", "jupyter_kernel_test": "Machinery for testing Jupyter kernels via the messaging protocol.", "jupyter_latex_envs": "Jupyter notebook extension which supports (some) LaTeX environments within markdown cells. Also provides support for labels and crossreferences, document wide numbering, bibliography, and more...", "jupyter_nbextensions_configurator": "jupyter serverextension providing configuration interfaces for nbextensions.", "jupytercontrib": "Some Jupyter contrib extensions", "jupyterhub": "JupyterHub: A multi-user server for Jupyter notebooks", "jupyterhub-dummyauthenticator": "Dummy Authenticator for JupyterHub", "jupyterhub-kubespawner": "JupyterHub Spawner for Kubernetes", "jupyterhub-ltiauthenticator": "JupyterHub authenticator implementing LTI v1", "jupyterhub-tmpauthenticator": "JupyterHub authenticator that hands out temporary accounts for everyone", "jupyterlab": "The JupyterLab notebook server extension.", "jupyterlab-git": "A server extension for JupyterLab's git extension", "jupyterlab-launcher": "Jupyter Launcher", "jupyterlab-server": "JupyterLab Server", "jupyterlab_iframe": "IFrame widgets for JupyterLab", "jupyterthemes": "Select and install a Jupyter notebook theme", "jupytext": "Jupyter notebooks as Markdown documents, Julia, Python or R scripts", "just": "Automatically just read and write files based on extension.", "justext": "Heuristic based boilerplate removal tool", "jwcrypto": "Implementation of JOSE Web standards", "jws": "JSON Web Signatures implementation in Python", "jwt": "JSON Web Token library for Python 3.", "jxmlease": "jxmlease converts between XML and intelligent Python data structures.", "kademlia": "Kademlia is a distributed hash table for decentralized peer-to-peer computer networks.", "kafka": "Pure Python client for Apache Kafka", "kafka-python": "Pure Python client for Apache Kafka", "kaggle": "Kaggle API", "kaggle-cli": "An unofficial Kaggle command line tool.", "kaitaistruct": "Kaitai Struct declarative parser generator for binary data: runtime library for Python", "kaiterra-async-client": "Kaiterra API Async Client", "kajiki": "Fast XML-based template engine with Genshi syntax and Jinja blocks", "kamaki": "A multipurpose, interactive command-line tool, and also a client development library for managing OpenStack clouds.", "kappa": "A CLI tool for AWS Lambda developers", "kaptan": "Configuration manager", "kazam": "A screencasting program created with design in mind.", "kazoo": "Higher Level Zookeeper Client", "kclboot": "Unofficial AWS Kinesis Client Library Bootstrapper", "kdtree": "A Python implemntation of a kd-tree", "keba-kecontact": "A python library to communicate with the KEBA charging stations via udp", "keen": "Python Client for Keen IO", "keep": "Personal shell command keeper", "keepalive": "urllib keepalive support for python", "keepassdb": "Python library for reading and writing KeePass 1.x databases.", "keepkey": "Python library for communicating with KeepKey Hardware Wallet", "keepnote": "A cross-platform note taking application", "kenlm": "", "keras": "Deep Learning for humans", "keras-applications": "Reference implementations of popular deep learning models", "keras-bert": "BERT implemented in Keras", "keras-maskrcnn": "Keras implementation of MaskRCNN instance aware segmentation.", "keras-preprocessing": "Easy data preprocessing and data augmentation for deep learning models", "keras-resnet": "", "keras-retinanet": "Keras implementation of RetinaNet object detection.", "keras-rl": "Deep Reinforcement Learning for Keras", "keras-tqdm": "Keras models with TQDM progress bars in Jupyter notebooks", "keras-vis": "Neural Network visualization toolkit for keras", "kerberos": "Kerberos high-level interface", "kernel": "UNKNOWN", "kevin-scraper-engine": "Web Scraping module of RSQUARE LABS", "key": "Short getters for python", "keyboard": "Hook and simulate keyboard events on Windows and Linux", "keychain": "Library for BIP32 hierarchical deterministic keychains / wallets.", "keylib": "Library for creating and working with private keys, public keys, and bitcoin addresses.", "keyring": "Store and access your passwords safely.", "keyrings.alt": "Alternate keyring implementations", "keys": "Sapphire Key Value System", "keystone": "OpenStack Identity", "keystone-engine": "Keystone assembler engine", "keystoneauth1": "Authentication Library for OpenStack Identity", "keystonemiddleware": "Middleware for OpenStack Identity", "kfac": "K-FAC for TensorFlow", "kg": "Access KEGG from the command line.", "kgb": "Utilities for spying on function calls in unit tests.", "khmer": "khmer k-mer counting library", "ki": "Reinforcment Learning Inspired by Earth", "kid": "A simple and pythonic XML template language", "kik": "UNKNOWN", "kinds": "Smart, pythonic, ad-hoc, typed polymorphism for Python", "kinto": "Kinto Web Service - Store, Sync, Share, and Self-Host.", "kinto-redis": "Kinto Redis", "kitchen": "Kitchen contains a cornucopia of useful code", "kitnirc": "IRC bot framework", "kivy": "A software library for rapid development of hardware-accelerated multitouch applications.", "kivy-garden": "Garden tool for kivy flowers.", "kiwiki-client": "KIWI Lock Client Library", "kiwisolver": "A fast implementation of the Cassowary constraint solver", "kl": "Simple keylogger for Linux + X11", "klein": "werkzeug + twisted.web", "kmod": "Python binding for kmod", "knack": "A Command-Line Interface framework", "knnimpute": "k-Nearest Neighbor imputation", "knowledge": "UNKNOWN", "knxip": "A native Python KNX/IPNet implementation", "koji": "Koji is a system for building and tracking RPMS. The base package contains shared libraries and the command-line interface.", "kombu": "Messaging library for Python.", "kombu-sqlalchemy": "Kombu transport using SQLAlchemy as the message store.", "konch": "CLI and configuration utility for the Python shell, optimized for simplicity and productivity.", "konfig": "Yet Another Config Parser.", "konlpy": "Python package for Korean natural language processing.", "konnected": "A async Python library for interacting with Konnected home automation controllers (see https://konnected.io)", "kotti": "A high-level, Pythonic web application framework based on Pyramid and SQLAlchemy.  It includes an extensible Content Management System called the Kotti CMS.", "kotti_etherpad": "Etherpad integration into your Kotti site", "kotti_image": "Image content type for Kotti", "kotti_tinymce": "TinyMCE plugins for Kotti", "krakenex": "kraken.com cryptocurrency exchange API", "krauler": "A minimalistic, recursive web crawling library for Python.", "krest": "The Kaminario REST (krest) is a client library that provides ORM like interface for working with Kaminario K2 REST API", "kss.core": "KSS (Kinetic Style Sheets) core framework", "kss.demo": "KSS (Kinetic Style Sheets) demo", "ktext": "Pre-processing text in parallel for Keras in python.", "kubernetes": "Kubernetes python client", "kudu-python": "Python interface to the Apache Kudu C++ Client API", "kuryr-lib": "Kuryr shared config and utilities", "kv": "KV provides a dictionary-like interface on top of SQLite.", "kvm": "An API for managing KVM host.", "kwargify": "Python function kwargifier", "kyle": "Kyle the Python module", "kyoukai": "A fast, asynchronous web framework for Python 3.5+", "kytos": "Kytos, an open source SDN Platform", "kz": "kz", "l2cs": "Rewrites queries from lucene syntax to Amazon Cloudsearch syntax", "la": "Label the rows, columns, any dimension, of your NumPy arrays.", "lakeside": "Python API for controlling Eufy LED bulbs", "lalsuite": "LIGO Scientific Collaboration Algorithm Library - minimal Python package", "lambdautils": "Utilities for AWS Lambda functions", "lamson": "Lamson is a modern Pythonic mail server built like a web application server.", "landslide": "HTML5 slideshow generator for Markdown, ReST, and Textile", "langdetect": "Language detection library ported from Google's language-detection.", "langid": "langid.py is a standalone Language Identification (LangID) tool.", "langtable": "guess reasonable defaults for locale, keyboard, territory, ...", "language": "Basic tools for working with natural language text data", "language-check": "Checks grammar using LanguageTool.", "lark-parser": "a modern parsing library", "lasagne": "A lightweight library to build and train neural networks in Theano", "later": "A simple in-process thread-safe scheduler.", "latex": "Wrappers for calling LaTeX/building LaTeX documents.", "latexcodec": "A lexer and codec to work with LaTeX code in Python.", "latimes-calculate": "Some simple math we use to do journalism.", "latlon": "Methods for representing geographic coordinates", "launcher": "Launches any python program", "launchpadlib": "Script Launchpad through its web services interfaces.  Officially supported.", "law": "Build large-scale task workflows using luigi, remote job submission, remote targets, and environment", "layer": "tensorflow custom comfort wrapper", "layered-yaml-attrdict-config": "YAML-based configuration module", "layers": "Layered source layouts for software development projects", "layout": "Content Layout Engine", "lazr.authentication": "This is a template for your lazr package.  To start your own lazr package,", "lazr.config": "Create configuration schemas, and process and validate configurations.", "lazr.restfulclient": "A programmable client library that takes advantage of the commonalities among", "lazr.smtptest": "A test framework for SMTP based applications", "lazr.sshserver": "The Launchpad SSH server.", "lazr.uri": "A self-contained, easily reusable library for parsing, manipulating,", "lazy": "Lazy attributes for Python objects", "lazy-object-proxy": "A fast and thorough lazy object proxy.", "lbindex": "Indexer Daemon for the neo-lightbase service", "lc": "Beta reducer and shorthand representer for the \u03bb-calculus", "lck.django": "Various common Django-related routines.", "lconf": "L(ight) CONF(iguration): A simple human-readable data serialization format for dynamic configuration.", "lda": "Topic modeling with latent Dirichlet allocation", "ldap": "Placeholder for the ldap name", "ldap3": "A strictly RFC 4510 conforming LDAP V3 pure Python client library", "ldappool": "A simple connector pool for python-ldap.", "ldif3": "generate and parse LDIF data (see RFC 2849).", "lea": "Discrete probability distributions in Python", "leancloud-sdk": "LeanCloud Python SDK", "leap.common": "Common files used by the LEAP project.", "leap.keymanager": "LEAP's Key Manager", "leap.mail": "Mail Services provided by Bitmask, the LEAP Client.", "leap.soledad.client": "Synchronization of locally encrypted data among devices (client components).", "leap.soledad.common": "Synchronization of locally encrypted data among devices (common files).", "learning": "For data-intern", "leather": "Python charting for 80% of humans.", "ledcontroller": "Controller library for limitlessled/easybulb/milight Wi-Fi LEDs", "lee": "Yet another leetcode cli", "legacy": "Legacy Support", "leidenalg": "Leiden is a general algorithm for methods of community detection in large networks.", "lektor": "A static content management system.", "lepl": "A Parser Library for Python 2.6+/3+: Recursive Descent; Full Backtracking", "lesscpy": "Python LESS compiler", "lesson1module": "A program of nested lists with the option of indentation. Fixed Hard coding bug and added the option of tabs and an option of one parameter for controlling all tabs.", "let": "Assign variables wherever, whenever you want.", "letsencrypt": "ACME client", "letsencrypt-apache": "Apache plugin for Let's Encrypt", "letter": "Send you letters for fun or profit", "lettuce": "Behaviour Driven Development for python", "level": "Level system for games", "leveldb": "Python bindings for leveldb database library", "leven": "Levenshtein edit distance library", "levenshtein-search": "Search through documents for approximately matching strings", "lfdocs-conf": "Linux Foundation DocsConf", "lfs-contact": "A simple contact form for LFS", "lfs-order-numbers": "", "lfs-paypal": "Integration of PayPal into LFS", "lfs-theme": "The default theme for LFS", "li": "A tool to quickly fetch a license.", "li-repo": "Loja Integrada's models for Django ORM.", "liable": "Auto-tests generator.", "liac-arff": "A module for read and write ARFF files in Python.", "lib": "StdLib: Standard Library for Microservices Python Bindings", "libarchive": "Python adapter for universal, libarchive-based archive access.", "libarchive-c": "Python interface to libarchive", "libbde-python": "Python bindings module for libbde", "libcharmstore": "Library to access charmstore data", "libclang-py3": "Python3 bindings for libclang", "libcnml": "A CNML parser for Python", "libewf-python": "Python bindings module for libewf", "libextract": "A HT/XML web scraping tool", "libfsntfs-python": "Python bindings module for libfsntfs", "libfvde-python": "Python bindings module for libfvde", "libfwnt-python": "Python bindings module for libfwnt", "libmagic": "libmagic bindings", "libnacl": "Python bindings for libsodium based on ctypes", "libopencv": "libopencv", "libpq-dev": "Psycopg2 binary dependencies", "libpurecool": "Dyson Pure Cool/Hot+Cool Link and 360 eye robot vacuum devices Python library", "libpurecoollink": "Dyson Pure Cool/Hot+Cool Link and 360 eye robot vacuum devices Python library", "libpyfoscam": "Python Library for Foscam IP Cameras", "libpysal": "Core components of PySAL A library of spatial analysis functions.", "libpyvivotek": "Python Library for Vivotek IP Cameras", "libqcow-python": "Python bindings module for libqcow", "librabbitmq": "AMQP Client using the rabbitmq-c library.", "librarian-curator": "None", "library": "Useful library package stuff.", "librato-metrics": "Python API Wrapper for Librato", "librosa": "Python module for audio and music processing", "librouteros": "Python implementation of MikroTik RouterOS API", "libsaas": "Abstraction library for SaaS APIs", "libsass": "Sass for Python: A straightforward binding of libsass for Python.", "libsigscan-python": "Python bindings module for libsigscan", "libsmdev-python": "Python bindings module for libsmdev", "libsmraw-python": "Python bindings module for libsmraw", "libsoundtouch": "Bose Soundtouch Python library", "libssh2": "", "libtaxii": "TAXII 1.X Library.", "libthumbor": "libthumbor is the python extension to thumbor", "libtiff": "PyLibTiff: a Python tiff library.", "libtmux": "scripting library / orm for tmux", "libusb1": "Pure-python wrapper for libusb-1.0", "libuuid": "C Extension for faster UUID generation using libuuid.", "libvhdi-python": "Python bindings module for libvhdi", "libvirt-python": "The libvirt virtualization API python binding", "libvmdk-python": "Python bindings module for libvmdk", "libvshadow-python": "Python bindings module for libvshadow", "libvslvm-python": "Python bindings module for libvslvm", "libwapiti": "Python bindings for libwapiti", "libxml2-python": "libxml2 and libxslt package", "license": "Library that encapsulates free software licenses", "licenses": "A list of open (http://opensource.org/, http://opendefinition.org/) licenses\ntogether with API and web service.", "lief": "", "life360": "Life360 Communications Module", "lifelines": "Survival analysis in Python, including Kaplan Meier, Nelson Aalen and regression", "liffylights": "LIFX Python library", "lightfm": "LightFM recommendation model", "lightgbm": "LightGBM Python Package", "lightify": "A library to work with OSRAM lightify.", "lightstep": "LightStep Python OpenTracing Implementation", "lightwave": "Python library to provide a realiable communication link with LightWaveRF lights and switches.", "ligo-gracedb": "A Python package for accessing the GraceDB API.", "like": "A simple printer of nested lists", "lime": "Local Interpretable Model-Agnostic Explanations for machine learning classifiers", "limitlessled": "Control LimitlessLED products.", "limits": "Rate limiting utilities", "linaro-django-pagination": "linaro-django-pagination", "line": "May the LINE be with you...", "line-bot-sdk": "LINE Messaging API SDK for Python", "line-profiler": "Line-by-line profiler.", "linear-tsv": "Line-oriented, tab-separated value format", "linecache2": "Backports of the linecache module", "lingpy": "Python library for quantitative tasks in historical linguistics", "lingua": "Translation toolset", "linkchecker": "check links in web documents or full websites", "linkheader": "Parse and format link headers according to RFC 5988 \"Web Linking\"", "linking": "Linkify plain text, convert URLs and emails", "links": "Link-utilities missing from urllib|urllib2", "lino": "A framework for writing desktop-like web applications using Django and ExtJS or React", "lino-welfare": "A Lino plugin library for Belgian PCSWs", "linode-api": "Linode API Library", "linode-python": "Python bindings for Linode API", "linux": "", "listparser": "Parse OPML, FOAF, and iGoogle subscription lists.", "lists": "some functions for list", "lithoxyl": "A systematic approach to logging, profiling, and statisticscollection. Very lightweight, very Pythonic.", "litreview": "Literature curation tool.", "little": "", "liveboxplaytv": "Python bindings for the Orange Livebox Play TV appliance", "livejson": "Bind Python objects to JSON files", "livereload": "Python LiveReload is an awesome tool for web developers", "livestreamer": "Livestreamer is command-line utility that extracts streams from various services and pipes them into a video player of choice.", "livestreamer-curses": "Livestreamer-curses is a curses frontend to livestreamer", "lizard": "A code analyzer without caring the C/C++ header files. It works with Java, C/C++, JavaScript, Python, Ruby, Swift, Objective C. Metrics includes cyclomatic complexity number etc.", "lizard-map": "Basic map setup for lizard web sites", "lizard-ui": "Basic user interface for lizard websites", "lk": "A programmer's search tool, parallel and fast", "ll-xist": "Extensible HTML/XML generator, cross-platform templating language, Oracle utilities and various other tools", "llfuse": "Python bindings for the low-level FUSE API", "llvmlite": "lightweight wrapper around basic LLVM functionality", "llvmmath": "LLVM math library", "llvmpy": "Python bindings for LLVM", "lmdb": "Universal Python binding for the LMDB 'Lightning' Database", "lmfit": "Least-Squares Minimization with Bounds and Constraints", "lmgtfy": "Let me Google that for you", "lml": "Load me later. A lazy plugin management system.", "lmnotify": "A package for sending notifications to LaMetric Time.", "load": "load python module from a file", "loaded": "A network-distributed, language-agnostic build agent.", "loads": "A distributed load testing tool.", "local": "", "localstack-client": "A lightweight Python client for LocalStack.", "localstack-ext": "Extensions for LocalStack", "location": "\u5b8c\u5584\u4fee\u590dbaidu\u63a5\u53e3", "locationsharinglib": "A library to retrieve coordinates from an google account that has been shared locations of other accounts.", "lock": "module for enabling file locks", "locket": "File-based locks for Python for Linux and Windows", "lockfile": "Platform-independent file locking module", "locust": "Use package locustio instead", "locustio": "Website load testing framework", "log-symbols": "Colored symbols for various log levels for Python", "logan": "Logan is a toolkit for building standalone Django applications.", "logbook": "A logging replacement for Python", "logconfig": "Simple helper moudle for configuring Python logging", "logentries": "Python Logger plugin to send logs to Logentries", "logger": "Python logging helper", "logging": "A logging module for Python", "logging-color-formatter": "A colored logging formatter", "loggly-python-handler": "Python logging handler that sends messages to Loggly", "logilab-astng": "rebuild a new abstract syntax tree from Python's ast", "logilab-common": "collection of low-level Python packages and modules used by Logilab projects", "login": "Module for common login service", "loginform": "Fill HTML login forms automatically", "logmatic-python": "Python plugin to send logs to Logmatic.io", "logstash_formatter": "JSON formatter meant for logstash", "logstats": "A module to collect and display stats for long running processes", "loguru": "Python logging made (stupidly) simple", "logutils": "Logging utilities", "logzero": "Robust and effective logging for Python 2 and 3", "london-tube-status": "Parse London tube data into a dictionary", "longerusername": "UNKNOWN", "look": "Look", "loompy": "Work with Loom files for single-cell RNA-seq data", "loopjit": "Syntax, types, and codegen helpers for compiling loop-oriented numerical code to LLVM in Python.", "lorem": "Generator for random text that looks like Latin.", "lorem-ipsum-generator": "Generates random lorem ipsum text", "loremipsum": "A Lorem Ipsum text generator", "louie": "Signal dispatching mechanism", "louis": "A simple louis .py file", "louvain": "Louvain is a general algorithm for methods of community detection in large networks.", "lov2pi": "Python sdk for lov2pi webservice", "love": "Package creation and management, using Love.", "lpthw.web": "lpthw.web: a fork of web.py for Learn Python The Hard Way", "lru": "A simple LRU cache implementation", "lru-dict": "An Dict like LRU container.", "lrzip": "Python bindings for LRZIP", "lscsoft-glue": "Grid LSC User Engine", "lsst-dd-rtd-theme": "LSST Data Management technical note Sphinx theme.", "lt": "An implementation of an Encoder and Decoder for the Luby Transform Fountain code. Useful for transmitting data over very lossy channels where retry-based transmission protocols struggle.", "ltc_scrypt": "Bindings for scrypt proof of work used by Litecoin", "ltd-mason": "LSST the Docs build tool", "lu": "\u5355\u8bcd\u67e5\u8be2\u5de5\u5177", "lucene-querybuilder": "A DSL to build Lucene text queries in Python.", "luckydonald-utils": "A collection of utilities I use across different projects", "luftdaten": "Python API for interacting with luftdaten.info.", "luigi": "", "luma.core": "A component library to support SBC display drivers", "luma.oled": "A small library to drive an OLED device with either SSD1306, SSD1309, SSD1322, SSD1325, SSD1327, SSD1331, SSD1351, SSD1362 or SH1106 chipset", "lunardate": "A Chinese Calendar Library in Pure Python", "lunatic-python-bugfix": "Two-way bridge between Python and Lua", "lupa": "Python wrapper around Lua and LuaJIT", "lupupy": "A python cli for Lupusec alarm panels.", "lw12": "Library to control the Lagute LW-12 WiFi LED controller.", "lws": "Fast spectrogram phase reconstruction using Local Weighted Sums", "lxml": "Powerful and Pythonic XML processing library combining libxml2/libxslt with the ElementTree API.", "ly": "This is just a test module", "lyft_rides": "Unofficial Lyft Rides API Python SDK", "lynx": "Python configuration library", "lz4": "LZ4 Bindings for Python", "m2crypto": "M2Crypto: A Python crypto and SSL toolkit", "m2r": "Markdown and reStructuredText in a single file.", "m2secret": "Encryption and decryption module and CLI utility", "m3u8": "Python m3u8 parser", "ma": "Collection of tools and utilities. This is just a metapackage,\n    which depends on all other ma.x packages", "macaroonbakery": "A Python library port for bakery, higher level operation to work with macaroons", "macfsevents": "Thread-based interface to file system observation primitives.", "mach": "Generic command line command dispatching framework.", "machine": "A sample Python project", "machinist": "Machinist is a tool for building finite state machines.", "macholib": "Mach-O header analysis and editing", "macropy3": "Macros for Python: Quasiquotes, Case Classes, LINQ and more!", "macs2": "Model Based Analysis for ChIP-Seq data", "magenta": "Use machine learning to create art and music", "magic-wormhole": "Securely transfer data between computers", "magicmock": "A generic mock server", "magicseaweed": "Provides API wrapper to magicseaweed.com.", "magnitude": "Python library for computing with numbers with units", "mahotas": "Mahotas: Computer Vision Library", "mail": "Simple wrapper over Python's email package for common operations, and a mail pipe.", "mailchimp": "A CLI client and Python API library for the MailChimp email platform.", "mailchimp3": "A python client for v3 of MailChimp API", "maildump": "An SMTP server that makes all received mails accessible via a web interface and REST API.", "mailer": "A module to send email simply in Python", "mailinglogger": "Enhanced emailing handlers for the python logging package.", "mailjet-rest": "Mailjet V3 API wrapper", "mailman": "Mailman -- the GNU mailing list manager", "mailmanclient": "mailmanclient -- Python bindings for Mailman REST API", "mailshake": "Dramatically simplify sending email from your python app", "mailsnake": "MailChimp API v1.3, STS, Export, Mandrill wrapper for Python.", "main": "calculation of minimum price of given book", "major": "Python implementation of the major system.", "make": "Create project layout from jinja2 templates.", "mako": "A super-fast templating language that borrows the  best ideas from the existing templating languages.", "mamba": "The definitive testing tool for Python. Born under the banner of Behavior Driven Development.", "mammoth": "Convert Word documents from docx to simple and clean HTML and Markdown", "manage": "Command Line Manager + Interactive Shell for Python Projects", "manage.py": "Human friendly CLI builder", "manager": "Manager is the Components Manager package of Umbra, sIBL_GUI and sIBL_Reporter.", "mando": "Create Python CLI apps with little to no effort at all!", "mandrill": "A CLI client and Python API library for the Mandrill email as a service platform.", "mangopaysdk": "A client library written in python to work with mangopay v2 api", "manhole": "Manhole is in-process service that will accept unix domain socket connections and present the", "manifestdestiny": "Library to create and manage test manifests", "manifesto": "Pluggable cache manifest for Django.", "manifestparser": "Library to create and manage test manifests", "mantissa": "A multiprotocol application deployment platform", "manuel": "Manuel lets you build tested documentation.", "map": "map applies a command to files/folders at a certain path.", "mapbox": "A Python client for Mapbox services", "mapbox-vector-tile": "Mapbox Vector Tile", "mapentity": "Generic CRUD with maps", "mapnik": "Python bindings for Mapnik", "mapproxy": "An accelerating proxy for tile and web map services", "marathon": "Marathon Client Library", "marionette-driver": "Marionette Driver", "marionette-harness": "Marionette test automation harness", "marionette_client": "Marionette test automation client", "marisa-trie": "Static memory-efficient and fast Trie-like structures for Python.", "mark": "RDF Bookmarking Utilities", "markdown": "Python implementation of Markdown.", "markdown-checklist": "Python Markdown extension for task lists with checkboxes", "markdown-include": "This is an extension to Python-Markdown which provides an \"include\" function, similar to that found in LaTeX (and also the C pre-processor and Fortran). I originally wrote it for my FORD Fortran auto-documentation generator.", "markdown2": "A fast and complete Python implementation of Markdown", "markdownify": "Convert HTML to markdown.", "markey": "Markup parser", "markment": "Structured documentation generator for markdown", "markov": "Python library for Hidden Markov Models", "markovify": "A simple, extensible Markov chain generator. Uses include generating random semi-plausible sentences based on an existing text.", "markup": "generate HTML markup programmatically", "markuppy": "An HTML/XML generator", "markupsafe": "Safely add untrusted strings to HTML/XML markup.", "marrow.interface": "An anti-Pythonic declarative strict interface definition and validation system.", "marrow.mailer": "A light-weight modular mail delivery framework for Python 2.7+, 3.3+, Pypy, and Pypy3.", "marrow.util": "A collection of many commonly reimplemented utility classes and functions.", "marshmallow": "A lightweight library for converting complex datatypes to and from native Python datatypes.", "marshmallow-enum": "Enum field for Marshmallow", "marshmallow-jsonapi": "JSON API 1.0 (https://jsonapi.org) formatting with marshmallow", "marshmallow-jsonschema": "JSON Schema Draft v4 (http://json-schema.org/) formatting with marshmallow", "marshmallow-sqlalchemy": "SQLAlchemy integration with the marshmallow (de)serialization library", "martian": "Embedding of configuration information in Python code.", "martor": "Django Markdown Editor", "masonite": "The core for the Masonite framework", "masonite-cli": "", "masonite-entry": "", "masonite-scheduler": "", "master": "UNKNOWN", "master-sake": "A self-documenting build automation tool", "mastodon.py": "Python wrapper for the Mastodon API", "material": "UNKNOWN", "mathparse": "", "matplotlib": "Python plotting package", "matplotlib-venn": "Functions for plotting area-proportional two- and three-way Venn diagrams in matplotlib.", "matrix": "Generic matrix generator.", "matrix-client": "Client-Server SDK for Matrix", "mattermostwrapper": "A mattermost api v4 wrapper to interact with api", "matthew": "Matthew", "maxcdn": "A Python REST Client for MaxCDN REST Web Services", "maxcube-api": "eQ-3/ELV MAX! Cube Python API", "maxminddb": "Reader for the MaxMind DB format", "maxminddb-geolite2": "Provides access to the geolite2 database.  This product includes GeoLite2 data created by MaxMind, available from http://www.maxmind.com/", "may": "", "maya": "Datetimes for Humans.", "mayavi": "3D scientific data visualization library and application", "maybe": "See what a program does before deciding whether you really want it to happen.", "mbddns": "Mythic Beasts Dynamic DNS updater", "mbed-greentea": "mbed 3.0 onwards test suite, codename Greentea. The test suite is a collection of tools that enable automated testing on mbed-enabled platforms", "mbed-host-tests": "mbed tools used to flash, reset and supervise test execution for mbed-enabled devices", "mbed-ls": "mbed-ls is a Python module that detects and lists mbed-enabled devices connected to the host computer", "mbstrdecoder": "multi-byte character string decoder", "mc": "Pure Python Memcached Client", "mccabe": "McCabe checker, plugin for flake8", "mcollective": "Python library for using Marionette Collective's RPC", "mcpi": "Python library for the Minecraft Pi edition and RaspberryJuice API", "mcstatus": "A library to query Minecraft Servers for their status and capabilities.", "md": "Maildir command line mail client and library", "md-toc": "A utility that is able to generate a table of contents for a markdown file.", "mdanalysis": "An object-oriented toolkit to analyze molecular dynamics trajectories generated by CHARMM, Gromacs, NAMD, LAMMPS, or Amber.", "mdn-sphinx-theme": "A Sphinx theme for the Mozilla Developer Network", "mdp": "MDP is a Python library for building complex data processing software by combining widely used machine learning algorithms into pipelines and networks.", "mdtraj": "MDTraj: A modern, open library for the analysis of molecular dynamics trajectories", "mdx-linkify": "Link recognition for Python Markdown", "me": "me", "meaningcloud-python": "Official Python SDK for MeaningCloud APIs", "means": "Moment Expansion Approximation method implementation with simulation and inference packages", "meanwhile": "Very easy multithreading", "measure": "", "measurement": "Easily use and manipulate unit-aware measurements in Python", "mecab-python": "UNKNOWN", "mecab-python3": "Python wrapper for the MeCab morphological analyzer for Japanese", "mechanicalsoup": "A Python library for automating interaction with websites", "mechanize": "Stateful programmatic web browsing.", "mediacloud": "Media Cloud API Client Library", "medialog.foldertextfield": "Makes it possible to add a body text field to folders.", "meet": "A simple cli utility to create a meeting notes document in     either a google doc on google drive or in markdown in your directory of     choice", "meetup-api": "Python API for Meetup", "meinheld": "High performance asynchronous Python WSGI Web Server", "meld": "MELD", "meld3": "meld3 is an HTML/XML templating engine.", "melddict": "Dictionary with recursive additive and subtractive merging", "meliae": "Python Memory Usage Analyzer", "member": "", "members": "Get membership details from various data sources.", "memento_client": "Official Python library for using the Memento Protocol", "memoized-property": "A simple python decorator for defining properties that only run their fget function once", "memory-profiler": "A module for monitoring memory usage of a python program", "memsql": "Useful utilities and plugins for MemSQL integration.", "mendeleev": "Python API with a database of atomic properties for elements in the periodic table", "mendeley": "Python SDK for the Mendeley API", "menpo": "A Python toolkit for handling annotated data", "menpo3d": "Menpo library providing tools for 3D Computer Vision research", "menpodetect": "Object detection for Menpo", "menpofit": "Menpo's image feature point localisation (AAMs, SDMs, CLMs)", "menu": "Easily create command-line menus", "menuinst": "cross platform install of menu items", "mercadopago": "Mercadopago SDK module for Payments integration", "mercantile": "Web mercator XYZ tile utilities", "mercedesmejsonpy": "A library to work with Mercedes Connected Vehicle API.", "mercurial": "Fast scalable distributed SCM (revision control, version control) system", "mesa": "Agent-based modeling (ABM) in Python 3+", "mesh-tensorflow": "Mesh TensorFlow", "meshio": "I/O for various mesh formats", "meson": "A high performance build system", "mesos.cli": "Mesos CLI Tools", "mesos.interface": "Mesos interfaces", "message": "A message-oriented programming library for python.", "messagebird": "MessageBird's REST API", "messages": "A package designed to make sending messages easy and efficient!", "messytables": "Parse messy tabular data in various formats", "meta": "Byte-code and ast programming tools", "meta-ae": "Adverse Event models and handling.", "meta-labs": "Lab configuration for meta/edc", "meta-lists": "List models for Meta trial.", "meta-rando": "Randomization class and models for meta/edc", "meta-screening": "Screening models for meta/edc.", "meta-sites": "meta sites", "meta-subject": "Subject/Participant models for meta/edc.", "meta-visit-schedule": "Visit schedule for meta/edc project", "metaconfig": "A ConfigParser bootstraping library", "metadata": "Metadata for Humans", "metafone": "A Python implementation of the double metaphone algorithms.", "metakernel": "Metakernel for Jupyter", "metaphone": "A Python implementation of the metaphone and double metaphone algorithms.", "metar": "Metar - a package to parse METAR-coded weather reports", "meteoalertapi": "A small api to get alerting messages from extreme weather in Europe from https://www.meteoalarm.eu.", "meteofrance": "Meteo-France weather forecast", "meteor-ejson": "Encoder and Decoder for Extended JSON (EJSON) as used in Meteor and DDP.", "metlog-cef": "CEF extensions to metrics logging", "metlog-py": "Metrics Logging", "metrics": "metrics for Python, C, C++, Go and Javascript code (plugins for pylint, pytest-cov, and git available)", "metron": "analytics and metrics integration for Django", "meza": "A Python toolkit for processing tabular data", "mezzanine": "An open source content management platform built using the Django framework.", "mezzanine-pagedown": "PageDown rich text widget for Mezzanine", "mf2py": "Python Microformats2 parser", "mf2util": "Python Microformats2 utilities, a companion to mf2py", "mficlient": "A remote control client for Ubiquiti's mFi system", "mglearn": "Helper functions for the book 'Introduction to machine learning with Python'", "mgmtsystem": "A base system for provider management", "mh": "A small example package", "mhk_loader": "Read tsung logs and push datas to Maheki", "micawber": "a small library for extracting rich content from urls", "michael": "", "microdata": "html5lib extension for parsing microdata", "microdotphat": "Micro Dot pHAT Driver", "micropython-_markupbase": "CPython _markupbase module ported to MicroPython", "micropython-abc": "Dummy abc module for MicroPython", "micropython-base64": "CPython base64 module ported to MicroPython", "micropython-binascii": "PyPy binascii module ported to MicroPython", "micropython-calendar": "Dummy calendar module for MicroPython", "micropython-collections": "collections module for MicroPython", "micropython-collections.defaultdict": "collections.defaultdict module for MicroPython", "micropython-collections.deque": "collections.deque module for MicroPython", "micropython-datetime": "Dummy datetime module for MicroPython", "micropython-email.charset": "CPython email.charset module ported to MicroPython", "micropython-email.encoders": "CPython email.encoders module ported to MicroPython", "micropython-email.errors": "CPython email.errors module ported to MicroPython", "micropython-email.feedparser": "CPython email.feedparser module ported to MicroPython", "micropython-email.header": "CPython email.header module ported to MicroPython", "micropython-email.internal": "CPython email.internal module ported to MicroPython", "micropython-email.message": "CPython email.message module ported to MicroPython", "micropython-email.parser": "CPython email.parser module ported to MicroPython", "micropython-email.utils": "CPython email.utils module ported to MicroPython", "micropython-errno": "errno module for MicroPython", "micropython-ffilib": "MicroPython FFI helper module", "micropython-fnmatch": "CPython fnmatch module ported to MicroPython", "micropython-functools": "functools module for MicroPython", "micropython-getopt": "CPython getopt module ported to MicroPython", "micropython-hashlib": "PyPy hashlib module ported to MicroPython", "micropython-html.entities": "CPython html.entities module ported to MicroPython", "micropython-itertools": "itertools module for MicroPython", "micropython-linecache": "Dummy linecache module for MicroPython", "micropython-logging": "logging module for MicroPython", "micropython-os": "os module for MicroPython", "micropython-os.path": "os.path module for MicroPython", "micropython-pickle": "Dummy pickle module for MicroPython", "micropython-pkg_resources": "pkg_resources module for MicroPython", "micropython-posixpath": "Dummy posixpath module for MicroPython", "micropython-quopri": "CPython quopri module ported to MicroPython", "micropython-random": "Dummy random module for MicroPython", "micropython-re-pcre": "re-pcre module for MicroPython", "micropython-select": "select module for MicroPython", "micropython-signal": "signal module for MicroPython", "micropython-socket": "socket module for MicroPython", "micropython-stat": "CPython stat module ported to MicroPython", "micropython-string": "string module for MicroPython", "micropython-struct": "struct module for MicroPython", "micropython-time": "time module for MicroPython", "micropython-traceback": "traceback module for MicroPython", "micropython-tty": "tty module for MicroPython", "micropython-types": "CPython types module ported to MicroPython", "micropython-uasyncio": "Lightweight asyncio-like library for MicroPython, built around native Python coroutines.", "micropython-uasyncio.core": "Lightweight asyncio-like library for MicroPython, built around native Python coroutines. (Core event loop).", "micropython-ucontextlib": "ucontextlib module for MicroPython", "micropython-urllib.parse": "CPython urllib.parse module ported to MicroPython", "micropython-uu": "CPython uu module ported to MicroPython", "micropython-warnings": "warnings module for MicroPython", "microsoft": "This package name is reserved by Microsoft Corporation", "microsofttranslator": "Microsoft Translator V2 - Python API", "microurl": "microurl is a python module to create minfied urls", "midiutil": "A pure python library for creating multi-track MIDI files", "mido": "MIDI Objects for Python", "miflora": "Library to read data from Mi Flora sensor", "migrate": "A simple language agnostic database migration tool", "migration": "A database/model migration extension for TurboGears", "mikoto": "better Markdown Render", "millheater": "A python3 library to communicate with Mill", "mime": "MIME Types", "mimeparse": "A module provides basic functions for parsing mime-type names and matching them against a list of media-ranges.", "mimerender": "RESTful HTTP Content Negotiation for Flask, Bottle, web.py and webapp2 (Google App Engine)", "mimesis": "Mimesis: fake data generator.", "mimic": "An API-compatible mock service", "mincss": "clears the junk out of your CSS", "mind": "Mind is library for games in Python", "minepy": "minepy - Maximal Information-based Nonparametric Exploration", "ming": "Bringing order to Mongo since 2009", "mingus": "mingus is a music package for Python", "mini": "Mini", "minimal_py_setup": "Minimal Python Setup", "minimalmodbus": "Easy-to-use Modbus RTU and Modbus ASCII implementation for Python", "minimock": "The simplest possible mock library", "minimum": "A package which find minimum from given vector", "mining": "BI Application Server written by Python and Riak", "minio": "MinIO Python Library for Amazon S3 Compatible Cloud Storage for Python", "minirepo": "Create a local pypi repository to use pip off-line", "miniupnpc": "miniUPnP client", "minorminer": "heuristic algorithm to find graph minor embeddings", "mir_eval": "Common metrics for common audio/music processing tasks.", "mirakuru": "Process executor for tests.", "misaka": "A CFFI binding for Hoedown, a markdown parsing library.", "misc": "Collection of useful but unrelated functions", "missing": "Special Missing objects used in Zope2.", "missingno": "Missing data visualization module for Python.", "mistletoe": "A fast, extensible Markdown parser in pure Python.", "mistral": "Mistral Project", "mistral-lib": "Mistral shared routings and utilities (Actions API, YAQL functions API, data types etc.)", "mistune": "The fastest markdown parser in pure Python", "mit": "Use mit to Manage iTunes", "mitmproxy": "An interactive, SSL/TLS-capable intercepting proxy for HTTP/1, HTTP/2, and WebSockets.", "mixbox": "Utility library for cybox, maec, and stix packages", "mixed": "Class for fractions and mixed numbers", "mixer": "Mixer -- Is a fixtures replacement. Supported Django ORM, SqlAlchemy ORM, Mongoengine ODM and custom python objects.", "mixpanel": "Official Mixpanel library for Python", "mixpanel-py": "DEPRECATED", "mizani": "Scales for Python", "mk": "a Makefile/make replacement written in Python (used at ActiveState)", "mkdocs": "Project documentation with Markdown.", "mkdocs-awesome-pages-plugin": "An MkDocs plugin that simplifies configuring page titles and their order", "mkdocs-bootstrap": "Bootstrap theme for MkDocs", "mkdocs-bootswatch": "Bootswatch themes for MkDocs", "mkdocs-cinder": "A clean responsive theme for the MkDocs static documentation site generator", "mkdocs-material": "A Material Design theme for MkDocs", "mkdocs-minify-plugin": "An MkDocs plugin to minify HTML and/or JS files prior to being written to disk", "mkl": "Math library for Intel and compatible processors", "mkl-fft": "MKL-based FFT transforms for NumPy arrays", "mkl-random": "NumPy-based implementation of random number generation sampling using Intel (R) Math Kernel Library, mirroring numpy.random, but exposing all choices of sampling algorithms available in MKL.", "ml": "UNKNOWN", "mleap": "MLeap Python API", "mlflow": "MLflow: An ML Workflow Tool", "mlpy": "A machine learning library for Python", "mlxtend": "Machine Learning Library Extensions", "mmcv": "Open MMLab Computer Vision Foundation", "mmh3": "Python wrapper for MurmurHash (MurmurHash3), a set of fast and robust hash functions.", "mmtf-python": "A decoding libary for the PDB mmtf format", "mn": "Application software.", "mne": "MNE python project for MEG and EEG data analysis.", "mnemonic": "Implementation of Bitcoin BIP-0039", "mnist": "Python utilities to download and parse the MNIST dataset", "mo": "Incredibly simple YAML-based task runner.", "mo-collections": "More Collections! Some useful data structures for dealing with Data", "mo-dots": "More Dots! Dot-access to Python dicts like Javascript", "mo-files": "More Files! Steamlined for UTF8 and JSON.", "mo-future": "More future! Make Python 2/3 compatibility a bit easier", "mo-json": "More JSON Tools!", "mo-json-config": "More JSON Configuration! JSON configuration files with `$ref` and template overlays", "mo-kwargs": "More KWARGS! Let call parameters override kwargs", "mo-logs": "More Logs! Structured Logging and Exception Handling", "mo-math": "More Math! Many of the aggregates you are familiar with, but null-safe", "mo-testing": "More Testing! Extends the `unittest.TestCase` to provide deep, yet fuzzy, structural comparisons", "mo-threads": "More Threads! Simpler and faster threading.", "mo-times": "More Time! Time as a vector space, the way it was meant to be.", "moban": "General purpose static text generator", "mobile-codes": "Library of ISO 3166, MCC and MNC codes", "mock": "Rolling backport of unittest.mock for all Pythons", "mock-django": "UNKNOWN", "mock-open": "A better mock for file I/O", "mock-services": "Mock services.", "mockcache": "The Python dictionary-based mock memcached client library.", "mocker": "Graceful platform for test doubles in Python (mocks, stubs, fakes, and dummies).", "mocket": "Socket Mock Framework - for all kinds of socket animals, web-clients included -         with gevent/asyncio/SSL support", "mockextras": "Extensions to the mock library", "mockito": "Spying framework", "mockldap": "A simple mock implementation of python-ldap.", "mockredispy": "Mock for redis-py", "mockup": "A collection of client side patterns for faster and easier web development", "mocpy": "MOC parsing and manipulation in Python", "mod-wsgi": "Installer for Apache/mod_wsgi.", "mod_pywebsocket": "WebSocket extension for Apache HTTP Server.", "mode": "AsyncIO Service-based programming.", "model": "Object Relational Mapper (SQL database wrapper)", "model-mommy": "Smart object creation facility for Django.", "modeled": "Universal data modeling for Python.", "models": "Python models for schema-less databases.", "modern": "The Ultimate Solution for User Input", "moderngl": "ModernGL: High performance rendering for Python 3", "modernize": "A hack on top of 2to3 for modernizing code for hybrid codebases.", "modestmaps": "Modest Maps python port", "modgrammar-py2": "Modular grammar-parsing engine (Python 2.6+ / Python 3.x)", "modified": "Python file modification tracker", "modilabs-python-utils": "Collection of common Python utilities by Modi Group", "modis": "A modular Discord bot", "modoboa": "Mail hosting made simple", "module": "A warning to be more careful when pulling in dependencies", "modulegraph": "Python module dependency analysis tool", "modules": "Simple test on modules", "mohawk": "Library for Hawk HTTP authorization", "moin": "MoinMoin 1.9.10 is an easy to use, full-featured and extensible wiki software package", "moksha.hub": "Hub components for Moksha.", "moksha.wsgi": "WSGI components for Moksha.", "molecule": "Molecule aids in the development and testing of Ansible roles", "molo.commenting": "Comments helpers for sites built with Molo.", "molo.core": "Molo is a set of tools for publishing mobi sites with a community focus.", "molo.polls": "A molo module that provides the ability to run polls.", "molo.profiles": "User profiles to be used with Molo.", "molo.servicedirectory": "This is the molo.servicedirectory project.", "molo.surveys": "This is the molo.surveys project.", "molo.yourwords": "A Molo module that enables user generated content competitions", "moment": "Dealing with dates and times should be easy", "mommygae": "Automate the creation of models on ndb from Google App Engine", "momoko": "Momoko wraps Psycopg2's functionality for use in Tornado.", "monasca-common": "Monasca common python modules", "monasca-statsd": "Monasca statsd Python client", "money": "Python Money Class", "mongo": "Minimalistic pymongo object wrapper", "mongo-connector": "Mongo Connector", "mongoadmin": "A replacement for django's admin that works with mongodb.", "mongoalchemy": "UNMAINTAINED. Document-Object Mapper/Toolkit for Mongo Databases", "mongodbforms": "An implementation of django forms using mongoengine.", "mongoengine": "MongoEngine is a Python Object-Document Mapper for working with MongoDB.", "mongokit": "Python mongodb kit", "mongomock": "Fake pymongo stub for testing simple MongoDB-dependent code", "mongoquery": "A utility library that provides a MongoDB-like query language for querying python collections. It's mainly intended to parse objects structured as fundamental types in a similar fashion to what is produced by JSON or YAML parsers.", "monitoring": "Server monitoring and data-collection daemon", "monkeylearn": "Official Python client for the MonkeyLearn API", "monkeypatch": "Monkey patcher", "monolith.client": "Mozilla Monolith Client", "monotonic": "An implementation of time.monotonic() for Python 2 & < 3.3", "monthdelta": "date computations with months", "monty": "Monty is the missing complement to Python.", "mopidy": "Mopidy is an extensible music server written in Python", "more": "A helper library for Pandas, Visualizations and Scikit-learn", "more-itertools": "More routines for operating on iterables, beyond itertools", "more.jinja2": "Jinja2 template integration for Morepath", "more.pony": "Pony ORM integration in Morepath", "morepath": "A micro web-framework with superpowers", "moretools": "MORE Overly Reusable Essentials for python", "morfessor": "Morfessor", "most": "auto test with interface", "mote": "Mote LED Driver", "motephat": "Python library for driving Pimoroni Mote pHAT", "moto": "A library that allows your python tests to easily mock out the boto library", "moto-ext": "A library that allows your python tests to easily mock out the boto library", "motor": "Non-blocking MongoDB driver for Tornado or asyncio", "motorengine": "MotorEngine is a port of the amazing MongoEngine Mapper. Instead of using pymongo, MotorEngine uses Motor.", "motorparts": "Python 3 API for mopar.com.", "motorway": "Real-time ZMQ-based pure python data pipeline", "mots-vides": "Python library for managing stop words in many languages.", "mouseinfo": "An application to display XY position and RGB color information for the pixel currently under the mouse. Works on Python 2 and 3.", "moviepy": "Video editing with Python", "moviesbz": "A simple printer of nester lists", "mox": "Mock object framework", "mox3": "Mock object framework for Python", "moz-addon-packager": "Creates addons for Mozilla products.", "mozautolog": "Library for posting results to Autolog via HTTP POST", "mozbuild": "Mozilla build system functionality.", "mozcrash": "Library for printing stack traces from minidumps left behind by crashed processes", "mozdebug": "Utilities for running applications under native code debuggers intended for use in Mozilla testing", "mozdevice": "Mozilla-authored device management", "mozdownload": "Script to download builds for Firefox and Thunderbird from the Mozilla server.", "mozfile": "Library of file utilities for use in Mozilla testing", "mozhttpd": "Python webserver intended for use with Mozilla testing", "mozilla-django-oidc": "A lightweight authentication and access management library for integration with OpenID Connect enabled authentication services.", "mozilla-logger": "Django interface with statsd", "mozilla-sphinx-theme": "A theme using the default mozilla design guidelines", "mozillapulse": "Helper library for interacting with the Mozilla Pulse message system at pulse.mozilla.org", "mozinfo": "Library to get system information for use in Mozilla testing", "mozinstall": "package for installing and uninstalling Mozilla applications", "mozlog": "Robust log handling specialized for logging in the Mozilla universe", "moznetwork": "Library of network utilities for use in Mozilla testing", "mozpay": "Make web payments with Mozilla's navigator.mozPay().", "mozprocess": "Mozilla-authored process handling", "mozprofile": "Library to create and modify Mozilla application profiles", "mozrunner": "Reliable start/stop/configuration of Mozilla Applications (Firefox, Thunderbird, etc.)", "mozsvc": "Various utilities for Mozilla apps", "mozterm": "Terminal abstractions built around the blessings module.", "moztest": "Package for storing and outputting Mozilla test results", "mozversion": "Library to get version information for applications", "mp": "Machine Pseudo-Code", "mpc": "A fast and differentiable MPC solver for PyTorch.", "mpg123": "Python wrapper for libmpg123", "mpi4py": "Python bindings for MPI", "mpl-finance": "Finance plots using matplotlib", "mpld3": "D3 Viewer for Matplotlib", "mplh5canvas": "A matplotlib backend based on HTML5 Canvas.", "mplleaflet": "Convert Matplotlib plots into Leaflet web maps", "mpmath": "Python library for arbitrary-precision floating-point arithmetic", "mpyq": "A Python library for extracting MPQ (MoPaQ) files.", "mr": "UNKNOWN", "mr.bob": "Bob renders directory structure templates", "mrjob": "Python MapReduce framework", "ms": "ms", "msal": "The Microsoft Authentication Library (MSAL) for Python library enables your app to access the Microsoft Cloud by supporting authentication of users with Microsoft Azure Active Directory accounts (AAD) and Microsoft Accounts (MSA) using industry standard OAuth2 and OpenID Connect.", "msgfy": "msgfy is a Python library for convert Exception instance to a human-readable error message.", "msgpack": "MessagePack (de)serializer.", "msgpack-numpy": "Numpy data serialization using msgpack", "msgpack-pure": "MessagePack (de)serializer written in pure Python.", "msgpack-python": "MessagePack (de)serializer.", "msgpack-rpc-python": "MessagePack RPC", "msrest": "AutoRest swagger generator Python client runtime.", "msrestazure": "AutoRest swagger generator Python client runtime. Azure-specific module.", "mss": "An ultra fast cross-platform multiple screenshots module in pure python using ctypes.", "mt-940": "A library to parse MT940 files and returns smart Python collections for statistics and manipulation.", "mtcnn": "Multi-task Cascaded Convolutional Neural Networks for Face Detection, based on TensorFlow", "mtranslate": "Google translate console script with easy to use API", "muffin": "web framework based on Asyncio stack", "mujoco-py": "", "mulpyplexer": "A module that multiplexes interactions with lists of python objects.", "multi_key_dict": "Multi key dictionary implementation", "multiaddr": "Python implementation of jbenet's multiaddr", "multidict": "multidict implementation", "multihash": "multihash implementation in Python", "multilint": "Run multiple python linters easily", "multimapping": "Special MultiMapping objects used in Zope.", "multimethods.py": "updated Clojure-style multimethods for Python", "multio": "multio - an unified async library for curio and trio", "multipartposthandler": "A handler for urllib2 to enable multipart form uploading", "multipipes": "Create and scale complex pipelines on multiple cores.", "multipledispatch": "Multiple dispatch", "multiprocess": "better multiprocessing and multithreading in python", "multiprocessing": "Backport of the multiprocessing package to Python 2.4 and 2.5", "multiqc": "Create aggregate bioinformatics analysis reports across many samples and tools", "multitasking": "Non-blocking Python methods using decorators", "munch": "A dot-accessible dictionary (a la JavaScript objects)", "munkres": "Munkres (Hungarian) algorithm for the Assignment Problem", "munkres3": "munkres algorithm for the Assignment Problem. Python 3 port.", "murano-dashboard": "The Murano Dashboard", "murano-pkg-check": "Murano package validator tool", "murmurhash": "Cython bindings for MurmurHash", "music21": "A Toolkit for Computer-Aided Musical Analysis.", "musicbrainzngs": "Python bindings for the MusicBrainz NGS and the Cover Art Archive webservices", "mustache": "Mustache templating in Python", "mutagen": "read and write audio tags for many formats", "mutatormath": "Python for piecewise linear interpolation in multiple dimensions with multiple, arbitrarily placed, masters.", "mvc": "Cleanest Deep Reinforcement Learning Implementation Based on Web MVC", "mwapi": "Simple wrapper for the Mediawiki API", "mwclient": "MediaWiki API client", "mwlib": "mediawiki parser and utility library", "mwoauth": "A generic MediaWiki OAuth handshake helper.", "mwparserfromhell": "MWParserFromHell is a parser for MediaWiki wikicode.", "mwreverts": "A set of utilities for detecting reverts in MediaWiki revisions.", "mwtypes": "A set of types for processing MediaWiki data.", "mwxml": "A set of utilities for processing MediaWiki XML dump data.", "mx": "eGenix mx Base top-level package", "mxnet": "MXNet is an ultra-scalable deep learning framework. This version uses openblas.", "mxnet-cu75": "MXNet is an ultra-scalable deep learning framework. This version uses CUDA-7.5.", "mxnet-cu80": "MXNet is an ultra-scalable deep learning framework. This version uses CUDA-8.0.", "mxnet-cu90": "MXNet is an ultra-scalable deep learning framework. This version uses CUDA-9.0.", "my": "UNKNOWN", "myapp": "test", "mycapytain": "Library for CTS APIs and CapiTainS guidelines in Python", "mychevy": "Python interface to My Chevy online data", "mycli": "CLI for MySQL Database. With auto-completion and syntax highlighting.", "mycroftapi": "a library to communicate with Mycroft API", "mygene": "Python Client for MyGene.Info services.", "mygengo": "Official Python library for interfacing with the MyGengo API.", "myghty": "View/Controller Framework and Templating Engine", "mynt": "A static site generator.", "mypackage": "Program to create a package", "mypy": "Optional static typing for Python", "mypy-extensions": "Experimental type system extensions for programs checked with the mypy typechecker.", "mypy-lang": "Dummy to remind people to switch to 'pip install mypy'", "myself": "Find where myself is", "mysociety-django-images": "Attach images to any Django model, with helpful admin", "mysociety-django-popolo": "A Django-based implementation of the Popolo data specifications.", "mysociety-django-sluggable": "Slug your multiple models and manage redirections", "mysql": "Virtual package for MySQL-python", "mysql-client": "A modern mysql client driver for modern python", "mysql-connector": "MySQL driver written in Python", "mysql-connector-python": "MySQL driver written in Python", "mysql-connector-python-rf": "MySQL driver written in Python", "mysql-python": "Python interface to MySQL", "mysql-replication": "Pure Python Implementation of MySQL replication protocol build on top of PyMYSQL.", "mysql-utilities": "MySQL Utilities 1.4.3 (part of MySQL Workbench Distribution 6.0.0)", "mysqlclient": "Python interface to MySQL", "myusps": "Python 3 API for USPS Informed Delivery, a way to track packages and mailpieces.", "n26": "API and command line tools to interact with the https://n26.com/ API", "nagiosplugin": "Class library for writing Nagios (Icinga) plugins", "nailgun": "A library that facilitates easy usage of the Satellite 6 API", "nailgun-net-check": "Nailgun Network Checker", "naked": "A command line application framework", "name_tools": "Library for manipulating and comparing (English) names", "namedentities": "Named (and numeric) HTML entities to/from each other or Unicode", "namedlist": "Similar to namedtuple, but instances are mutable.", "nameko": "A microservices framework for Python that lets service developers concentrate on application logic and encourages testability.", "nameko-sentry": "Nameko extension sends entrypoint exceptions to sentry", "namely": "Python client for Namely API", "nameparser": "A simple Python module for parsing human names into their individual components.", "names": "Generate random names", "namesgenerator": "", "naming": "Object-oriented names for the digital era.", "nano": "Does less! Loosely coupled mini-apps for django.", "nanoleaf": "Python interface for Nanoleaf Aurora.", "nanotime": "nanotime python implementation", "napalm": "Network Automation and Programmability Abstraction Layer with Multivendor support", "napalm-base": "Network Automation and Programmability Abstraction Layer with Multivendor support", "napalm-eos": "Network Automation and Programmability Abstraction Layer with Multivendor support", "napalm-fortios": "Network Automation and Programmability Abstraction Layer with Multivendor support", "napalm-ibm": "Network Automation and Programmability Abstraction Layer with Multivendor support", "napalm-ios": "Network Automation and Programmability Abstraction Layer with Multivendor support", "napalm-iosxr": "Network Automation and Programmability Abstraction Layer with Multivendor support", "napalm-junos": "Network Automation and Programmability Abstraction Layer with Multivendor support", "napalm-nxos": "Network Automation and Programmability Abstraction Layer with Multivendor support", "napalm-panos": "Network Automation and Programmability Abstraction Layer with Multivendor support", "napalm-pluribus": "Network Automation and Programmability Abstraction Layer with Multivendor support", "napalm-ros": "Network Automation and Programmability Abstraction Layer driver for Mikrotik ROS", "napalm-vyos": "Network Automation and Programmability Abstraction Layer with Multivendor support", "nassl": "Experimental OpenSSL wrapper for Python 3.6+ and SSLyze.", "natsort": "Simple yet flexible natural sorting in Python.", "natural": "Convert data to their natural (human-readable) format", "naturalsort": "Simple natural order sorting API for Python", "navmazing": "A simple navigation framework", "nb2plots": "Converting between ipython notebooks and sphinx docs", "nbconvert": "Converting Jupyter Notebooks", "nbdime": "Diff and merge of Jupyter Notebooks", "nbformat": "The Jupyter Notebook format", "nbinteract": "Export interactive HTML pages from Jupyter Notebooks", "nbpresent": "Next generation slides from Jupyter Notebooks", "nbsphinx": "Jupyter Notebook Tools for Sphinx", "nbsphinx-link": "A sphinx extension for including notebook files outside sphinx source root", "nbstripout": "Strips outputs from Jupyter and IPython notebooks", "nbt2yaml": "Read and write Minecraft NBT files using Yaml.", "nbval": "A py.test plugin to validate Jupyter notebooks", "nc": "Named colors in Python", "ncclient": "Python library for NETCONF clients", "ncloud": "ncloud is a command line client to help you use and manage Nervana's deep learning cloud.", "nd": "A Python library for n-dimensional Earth observation data processing", "ndg-httpsclient": "Provides enhanced HTTPS support for httplib and urllib2 using PyOpenSSL", "ne": "print_list", "near": "\u8fed\u4ee3\u663e\u793a\u5217\u8868\u6570\u636e,\u4f18\u5316\u5217\u8868\u6570\u636e,\u4f18\u5316\u9ed8\u8ba4level\u6570\u636e,\u4e24\u79cd\u6a21\u5f0f\u4efb\u610f\u5207\u6362", "neat-python": "A NEAT (NeuroEvolution of Augmenting Topologies) implementation", "need": "NEED TO LEARN", "needle": "Automated testing for your CSS.", "needs": "Boolean Contexts", "nefertari": "REST API framework for Pyramid", "nengo": "Tools for building and simulating large-scale neural models", "neo": "Neo is a package for representing electrophysiology data in Python, together with support for reading a wide range of neurophysiology file formats", "neo-boa": "A Python compiler for the Neo Virtual Machine", "neo-python-rpc": "A Python RPC Client for the NEO Blockchain", "neo4j": "Neo4j Bolt driver for Python", "neo4j-driver": "Neo4j Bolt driver for Python", "neo4jrestclient": "Object-oriented Python library to interact with Neo4j standalone REST server", "neobolt": "Neo4j Bolt connector for Python", "neocore": "Core functionality of neo-python", "neomodel": "An object mapper for the neo4j graph database.", "neotime": "Nanosecond resolution temporal types", "neovim": "Transition packgage for pynvim", "neptune-cli": "Neptune client library", "nessclient": "Implementation/abstraction of the Ness D8x / D16x Serial Interface ASCII protocol", "nested": "A simple printer of nested lines", "net": "Python networking library", "netaddr": "A network address manipulation library for Python", "netapp-lib": "netapp-lib is required for Ansible deployments to interact with NetApp storage systems.", "netcdf": "A python library that allow to use one or multiple NetCDF files in a transparent way through polimorphic methods.", "netcdf4": "Provides an object-oriented python interface to the netCDF version 4 library.", "netdata": "Python API for interacting with Netdata.", "netdiff": "Python library for parsing network topology data (eg: dynamic routing protocols, NetJSON, CNML) and detect changes.", "netdisco": "Discover devices on your local network", "netengine": "Abstraction layer for extracting information from network devices.", "netfilterqueue": "Python bindings for libnetfilter_queue", "netifaces": "Portable network interface information.", "netius": "Netius System", "netlib": "A collection of network utilities used by pathod and mitmproxy.", "netmiko": "Multi-vendor library to simplify Paramiko SSH connections to network devices", "netscaler-api": "NetScaler API is a Python interface for interacting with Citrix NetScaler application delivery controllers, utilizing the SOAP API to execute commands.", "network": "A very simple networking library written by David Whale (@whaleygeek).", "networking-brocade": "Brocade Networking Mech. Drivers and Plugins", "networking-cisco": "Networking Cisco contains drivers for OpenStack Neutron to support Cisco equipment and products", "networking-hyperv": "This project tracks the work to integrate the Hyper-V networking with Neutron. This project contains the Hyper-V Neutron Agent Mixin, Security Groups Driver, ML2 Mechanism Driver and the utils modules they use in order to properly bind neutron ports on a Hyper-V host. This project resulted from the neutron core vendor decomposition.", "networking-midonet": "OpenStack MidoNet Neutron Plugin", "networking-nec": "Neutron plugins/drivers for NEC networking products (liberty)", "networking-odl": "OpenStack Networking", "networking-ofagent": "OpenStack Networking ofagent", "networking-vsphere": "A set of Neutron drivers and agents to manage vSphere clusters.", "networkx": "Python package for creating and manipulating graphs and networks", "neurio": "Neurio energy sensor and appliance automation API library", "neurolab": "Simple and powerfull neural network library for python", "neutron": "OpenStack Networking", "neutron-lib": "Neutron shared routines and utilities", "nevow": "Web Application Construction Kit", "new": "UNKNOWN", "newick": "A python module to read and write the Newick format", "newrelic": "New Relic Python Agent", "news": "my first python module", "newsapi": "A python wrapper for News API (newsapi.org)", "newsapi-python": "An unofficial Python client for the News API", "newspaper": "Simplified python article discovery & extraction.", "newspaper3k": "Simplified python article discovery & extraction.", "nexmo": "Nexmo Client Library for Python", "next": "required code for sae.news", "nexus": "An extendable admin interface", "nf": "Simple command line tool to make notification after target program finished work", "nfldb": "A library to manage and update NFL data in a relational database.", "nflgame": "An API to retrieve and read NFL Game Center JSON data. It can work with real-time data, which can be used for fantasy football.", "nginc": "run nginx from the commandline", "nginx_signing": "Signs urls to work with the nginx Secure Link module", "nglview": "IPython widget to interactively view molecular structures and trajectories.", "ngram": "A `set` subclass providing fuzzy search based on N-grams.", "nibabel": "Access a multitude of neuroimaging data formats", "nicedice": "Dice roller with IRC color codes", "niko-home-control": "SDK for Niko Home Control", "nikola": "A modular, fast, simple, static website and blog generator", "nilearn": "Statistical learning for neuroimaging in Python", "nilsimsa": "Locality-sensitive hashing", "niluclient": "An API client for getting pollution data from NILU sensor stations in Norway.", "nine": "Python 2 / 3 compatibility, like six, but favouring Python 3", "ninja": "Ninja is a small build system with a focus on speed", "nip": "nip is environment isolation and installation for Node.js", "nipy": "A python package for analysis of neuroimaging data", "nipype": "Neuroimaging in Python: Pipelines and Interfaces", "nitime": "Nitime: timeseries analysis for neuroscience data", "nl": "A python library that provides a production system with an API modelled on the natural language", "nlp": "Deep learning framework in Python", "nls": "NLS: Non-Linear Schrodinger equation solver.", "nltk": "Natural Language Toolkit", "nmap": "Map numbers from one range to another", "nmslib": "Non-Metric Space Library (NMSLIB)", "nnmnkwii": "Library to build speech synthesis systems designed for easy and fast prototyping.", "no": "no", "nobot": "Django recaptcha form field/widget app.", "node": "Building data structures as node trees", "node-semver": "port of node-semver", "nodeenv": "Node.js virtual environment builder", "nodejs": "Python bindings and utils for Node.js and io.js", "noise": "Perlin noise for Python", "nolearn": "scikit-learn compatible neural network library", "none": "None more AWS", "normal": "Indentation and optional arguement", "normality": "Micro-library to normalize text strings", "north": "A collection of things I copy to every project", "nose": "nose extends unittest to make testing easier", "nose-blockage": "Raise errors when communicating outside of tests", "nose-cov": "nose plugin for coverage reporting, including subprocesses and multiprocessing", "nose-cover3": "Coverage 3.x support for Nose", "nose-descriptionfixer": "A Nose plugin to fix the way tests are described when the verbose flag (-v) is used", "nose-django-querycount": "Nose plugin for counting queries in Django tests", "nose-exclude": "Exclude specific directories from nosetests runs.", "nose-faulthandler": "Nose plugin. Activates faulthandler module for test runs.", "nose-htmloutput": "Nose plugin that generates a nice html test report.", "nose-ignore-docstring": "Ignore docstring to name tests in nose.", "nose-mycode": "Produces a colour coded nose stack trace", "nose-notify": "A nose plugin to display testsuite progress in the notify osd", "nose-parameterized": "Parameterized testing with any Python test framework (DEPRECATED; See the 'parameterized' package)", "nose-perfdump": "Dump per-test performance metrics to an SQLite database for querying.", "nose-progressive": "A testrunner with a progress bar and smarter tracebacks", "nose-randomly": "Nose plugin to randomly order tests and control random.seed.", "nose-regression": "A simple regression testing plugin for nose.", "nose-selecttests": "Specify whitelist of keywords for tests to be run by nose", "nose-test-select": ".gitignore style test selection for nose (file and method name globbing)", "nose-testconfig": "Test Configuration plugin for nosetests.", "nose-timer": "A timer plugin for nosetests", "nose-watch": "A nose plugin that re-runs test suite on filesystem event.", "nose2": "unittest2 with plugins, the succesor to nose", "nose2-cov": "nose2 plugin for coverage reporting, including subprocesses and multiprocessing", "nose_fixes": "A plugin to make nose behave better.", "nose_xunitmp": "Xunit output when running multiprocess tests using nose", "nosedep": "Nose test dependency support", "nosegae": "NoseGAE: nose plugin for Google App Engine testing", "nosehtml": "HTML Output plugin for Nose / Nosetests", "nosehtmloutput": "Nose plugin to produce test results in html.", "nosenicedots": "Nose plugin that prints nicer dots grouped by class/module.", "nosexcover": "Extends nose.plugins.cover to add Cobertura-style XML reports", "nosy": "Run a specified command (by default, the nose test discovery and\nexecution tool) whenever a source file is changed.", "not": "note without the e(vernote), the quickest dirtiest cli evernote client ever", "note": "A command line based note taking application", "notebook": "A web-based notebook environment for interactive computing", "notedown": "Convert markdown to IPython notebook.", "notes": "A simple reusable app to add notes to various models", "nothing": "a simple package that does nothing", "notifications-python-client": "Python API client for GOV.UK Notify.", "notifier": "Simple in-memory pub-sub.", "notify2": "Python interface to DBus notifications", "nova": "Cloud computing fabric controller", "novel": "Novelty detection in Python", "now": "Record what you are doing SIMPLY from the command line", "nox": "Flexible test automation.", "nox-automation": "Flexible test automation.", "np": "np = numpy++: numpy with added convenience functionality", "np-utils": "collection of utilities for array and list manipulation", "nplusone": "Detecting the n+1 queries problem in Python", "npm": "Python bindings and utils for npm.", "npyscreen": "Writing user interfaces without all that ugly mucking about in hyperspace", "nr": "Compound utility library and command-line tools for Python 2/3", "nsapi": "api wrapper for Dutch Railways (NS)", "nsenter": "Enter kernel namespaces from Python", "nsw-fuel-api-client": "API Client for NSW Government Fuel", "ntlm-auth": "Creates NTLM authentication structures", "ntplib": "Python NTP library", "nu": "", "nudatus": "Strip comments from scripts, intended for use with MicroPython and other storage constrained environments", "nuheat": "A Python library that allows control of connected NuHeat Signature radiant floor thermostats.", "nuitka": "Python compiler with full language support and CPython compatibility", "nullauthenticator": "JupyterHub: A multi-user server for Jupyter notebooks", "nulltype": "Null values and sentinels like (but not) None, False & True", "num2words": "Modules to convert numbers to words. Easily extensible.", "numa": "Interface to numa(3) Linux API for Python", "numba": "compiling Python code using LLVM", "numdifftools": "Solves automatic numerical differentiation problems in one or more variables.", "numexpr": "Fast numerical expression evaluator for NumPy", "numpy": "NumPy is the fundamental package for array computing with Python.", "numpy-stl": "Library to make reading, writing and modifying both binary and ascii STL files easy.", "numpydoc": "Sphinx extension to support docstrings in Numpy format", "nupic": "Numenta Platform for Intelligent Computing", "nupic.bindings": "Numenta Platform for Intelligent Computing - bindings", "nvidia-ml-py": "Python Bindings for the NVIDIA Management Library", "nvidia-ml-py3": "Python Bindings for the NVIDIA Management Library", "nwdiag": "nwdiag generates network-diagram image from text", "nxapi-plumbing": "A library for managing Cisco devices through NX-API using XML or jsonrpc.", "nxpd": "NetworkX Pydot Draw", "nydus": "Connection utilities", "nylas": "Python bindings for Nylas, the next-generation email platform.", "nylas-production-python": "Nylas production python utilities", "oasatelematics": "Python wrapper for the OASA Telematics API", "oath": "Python implementation of the three main OATH specifications: HOTP, TOTP and OCRA", "oauth": "Library for OAuth version 1.0a.", "oauth-dropins": "Drop-in App Engine OAuth client handlers for many popular sites.", "oauth2": "library for OAuth version 1.9", "oauth2client": "OAuth 2.0 client library", "oauthenticator": "OAuthenticator: Authenticate JupyterHub users with common OAuth providers", "oauthlib": "A generic, spec-compliant, thorough implementation of the OAuth request-signing logic", "obj": "Timestamped JSON objects", "object-detection": "A package build from Tensorflow's object detection API.", "objectpath": "The agile query language for semi-structured data. #JSON", "objects": "A corpus of object images", "objgraph": "Draws Python object reference graphs with graphviz", "observable": "minimalist event system", "observations": "Tools for loading standard data sets in machine learning", "obspy": "ObsPy - a Python framework for seismological observatories.", "obviously": "Rspec-style test helper, but with more attitude.", "oca": "Python Bindings for XMLRPC OpenNebula Cloud API", "ocflib": "libraries for account and server management", "oci": "Oracle Cloud Infrastructure Python SDK", "oct2py": "Python to GNU Octave bridge --> run m-files from python.", "octopus": "Security analysis framework for WebAssembly module (wasm) and Blockchain Smart Contract (BTC/ETH/EOS/NEO).", "odfpy": "Python API and tools to manipulate OpenDocument files", "odict": "Ordered Dictionary.", "odo": "Data migration utilities", "odoo": "", "odoorpc": "OdooRPC is a Python package providing an easy way to pilot your Odoo servers through RPC.", "odswriter": "A pure-Python module for writing OpenDocument spreadsheets (similar to csv.writer).", "oemthermostat": "A package to interface with the HTTP API of the OpenEnergyMonitor Thermostat", "of": "The Optimal Framework is the fastest path to building any modern multi-user system", "ofcourse": "Python courseware with Flask on OpenShift", "offer": "Quickly host files for local transfer.", "office": "No description yet", "offshoot": "Modern, elegant, minimalistic but powerful plugin system for Python 3.5+.", "offtrac": "Trac xmlrpc library", "ofs": "OFS - provides plugin-orientated low-level blobstore.", "ofxparse": "Tools for working with the OFX (Open Financial Exchange) file format", "oh": "A simple TCP/UDP echo server", "ohai": "A demo of reliable pth installation, with a dash of troll.", "oic": "Python implementation of OAuth2 and OpenID Connect", "oinc": "A system for compiling queries into incremental demand-driven code", "ok": "ok", "okay": "Everything is just okay", "ol-geoip": "This is a fork of the Maxmind GeoIP Python wrapper library originally from GitHub at \nhttps://github.com/jlopez/maxmind-geoip with some minor changes for the openlibrary.org project", "olaii_django_mangopay": "A Django app for processing MangoPay transactions.", "old": "", "olefile": "Python package to parse, read and write Microsoft OLE2 files (Structured Storage or Compound Document, Microsoft Office)", "oletools": "Python tools to analyze security characteristics of MS Office and OLE files (also called Structured Storage, Compound File Binary Format or Compound Document File Format), for Malware Analysis and Incident Response #DFIR", "omdb": "Python wrapper for OMDb API: http://www.omdbapi.com/", "oml": "Open Mining Language", "omnijson": "Wraps the best JSON installed, falling back on an\n    internal simplejson.", "oncilla": "Oncilla is the documentation building helper package of Oncilla, Color, Manager, Umbra, sIBL_GUI and sIBL_Reporter.", "one": "Not all nor any. Just the one.", "one_resume": "Template(YAML) based data-driven resume generator for text and Microsoft WOrd", "onedrivesdk": "Deprecated OneDrive SDK. Install `onedrivesdk<2` for legacy versions.", "onegov.core": "Contains code shared by all OneGov applications.", "onegov.file": "Images/files organized in collections.", "onegov.form": "Common OneGov form library based on WTForms.", "onegov.search": "Elasticsearch integration for OneGov Cloud", "onegov.user": "A generic user model for OneGov.", "oneline": "A Python project that adds real time streaming to your web app's data.", "ones": "ONES.AI SDK", "onetimepass": "Module for generating and validating HOTP and TOTP tokens", "onkyo-eiscp": "Control Onkyo receivers over ethernet.", "only": "@only.<OS> decorator. raise OSError if not supported OS", "onnx": "Open Neural Network Exchange", "onnxmltools": "Converts Machine Learning models to ONNX", "onnxruntime": "ONNX Runtime Python bindings", "onvif-py3": "Python Client for ONVIF Camera", "onvif-zeep-async": "Async Python Client for ONVIF Camera", "oo": "You always wanted Python to moo? Now it can. Requires PyGame", "opbeat": "The official Python module for Opbeat.com", "open": "A mutli-purpose file opener", "open-humans-api": "Tools for working with Open Humans APIs", "openapi-codec": "An OpenAPI codec for Core API.", "openapi-spec-validator": "", "openaps": "DIY Open Source Artificial Pancreas System.", "openbabel": "openbabel: Python interface to the Open Babel chemistry library", "opencensus": "A stats collection and distributed tracing framework", "opencensus-ext-azure": "OpenCensus Azure Monitor Exporter", "opencensus-ext-stackdriver": "OpenCensus Stackdriver Trace Exporter", "opencl4py": "OpenCL cffi bindings and helper classes", "opencv-contrib-python": "Wrapper package for OpenCV python bindings.", "opencv-python": "Wrapper package for OpenCV python bindings.", "opencv-python-headless": "Wrapper package for OpenCV python bindings.", "opendr": "opendr", "openevsewifi": "A python library for communicating with the ESP8266-based wifi module from OpenEVSE", "openexr": "Python bindings for ILM's OpenEXR image file format", "openfisca-core": "A versatile microsimulation free software", "openfisca-france": "French tax and benefit system for OpenFisca", "openfisca-web-api": "Web API for OpenFisca", "opengraph": "A module to parse the Open Graph Protocol", "openhomedevice": "Provides an API for requesting information from an Openhome device", "openmatrix": "OMX, the open matrix data format", "openmm": "OpenMM command line script", "openopt": "A python module for numerical optimization", "openprocurement_client": "", "openpyxl": "A Python library to read/write Excel 2010 xlsx/xlsm files", "opensensemap-api": "Python client for interacting with the openSenseMap API.", "openshift": "OpenShift python client", "openslide-python": "Python interface to OpenSlide", "openstack-doc-tools": "Tools for OpenStack Documentation", "openstack.nose_plugin": "openstack run_tests.py style output for nosetests", "openstackdocstheme": "OpenStack Docs Theme", "openstacksdk": "An SDK for building applications to work with OpenStack", "opensubmit-exec": "This is the executor daemon for the OpenSubmit web application.", "opentok": "OpenTok server-side SDK", "opentracing": "OpenTracing API for Python. See documentation at http://opentracing.io", "opentracing-instrumentation": "Tracing Instrumentation using OpenTracing API (http://opentracing.io)", "openupgradelib": "A library with support functions to be called from Odoo migration scripts.", "openvas-lib": "OpenVAS Manager for OpenVAS 6 to 8 and XML report parser", "openweathermapy": "Python package wrapping OpenWeatherMap.org's API 2.5", "openwebifpy": "Provides a python interface to interact with a device running OpenWebIf", "openwisp-users": "Provides basic multi-tenancy features for OpenWISP 2 (using the Django web-framework)", "openwisp-utils": "OpenWISP 2 Utilities", "openwrt-luci-rpc": "Module for interacting with OpenWrt Luci RPC interface", "ophyd": "", "opi.gpio": "A drop-in replacement for RPi.GPIO for the Orange Pi Zero", "opml": "Lightweight OPML parsing.", "opps": "Open Source Content Management Platform - CMS for the", "opsgenie-sdk": "Python SDK for Opsgenie REST API", "opster": "command line parsing speedster", "opt-einsum": "Optimizing numpys einsum function", "optcomplete": "Automatic shell completion support for scripts that use optparse.", "optimal": "A python metaheuristic optimization library. Currently supports Genetic Algorithms, Gravitational Search, and Cross Entropy.", "option": "Rust like Option and Result types in Python", "optional": "Optional Class for Python2/3", "optional-django": "Utils for providing optional support for django", "optionaldict": "A dict-like object that ignore NoneType values for Python", "options": "Simple, super-flexible options. Does magic upon request.", "optlang": "Formulate optimization problems using sympy expressions and solve them using interfaces to third-party optimization software (e.g. GLPK).", "optpy": "An optimization package", "optspec": "Wrapper around getopt for option mapping, counting, and parsing.", "optuna": "A hyperparameter optimization framework", "opuslib": "Python bindings to the libopus, IETF low-delay audio codec", "oracle": "", "orange": "Orange, a component-based data mining framework.", "orange-text": "Orange Text Mining add-on for Orange data mining software package.", "orange3": "Orange, a component-based data mining framework.", "orator": "The Orator ORM provides a simple yet beautiful ActiveRecord implementation.", "orca": "A pipeline orchestration tool with Pandas support", "ordat": "Wrapper for the Chicago CTA XML API.", "order": "Pythonic class collection that helps you structure external data from LHC / HEP experiments.", "ordered-set": "A MutableSet that remembers its order, so that every entry has an index.", "ordereddict": "A drop-in substitute for Py2.7's new collections.OrderedDict that works in Python 2.4-2.6.", "orderedmultidict": "Ordered Multivalue Dictionary", "orderedset": "An Ordered Set implementation in Cython.", "ore.metamime": "Mime Identification and Property Extraction", "orionsdk": "Python API for the SolarWinds Orion SDK", "ortools": "Google OR-Tools python libraries and modules", "oru": "Python client for Orange and Rockland Utility smart energy meters", "orvibo": "Control Orvibo products.", "os-api-ref": "Sphinx Extensions to support API reference sites in OpenStack", "os-apply-config": "Config files from cloud metadata", "os-brick": "OpenStack Cinder brick library for managing local volume attaches", "os-client-config": "OpenStack Client Configuation Library", "os-cloud-config": "Configuration for OpenStack clouds.", "os-collect-config": "Collect and cache metadata, run hooks on changes.", "os-dpm": "Shared library for OpenStack projects enabling IBM z Systems PR/SM hypervisor in DPM mode", "os-net-config": "OpenStack network configuration", "os-refresh-config": "Refresh system configuration", "os-service-types": "Python library for consuming OpenStack sevice-types-authority data", "os-testr": "A testr wrapper to provide functionality for OpenStack projects", "os-traits": "A library containing standardized trait strings", "os-vif": "A library for plugging and unplugging virtual interfaces in OpenStack.", "os-win": "Windows / Hyper-V library for OpenStack projects.", "os-xenapi": "XenAPI library for OpenStack projects", "osc-lib": "OpenStackClient Library", "oscar": "A Python interface to OSCAR data", "oscrypto": "TLS (SSL) sockets, key generation, encryption, decryption, signing, verification and KDFs using the OS crypto libraries. Does not require a compiler, and relies on the OS for patching. Works on Windows, OS X and Linux/BSD.", "oset": "Ordered Set.", "oslo.cache": "Cache storage for OpenStack projects.", "oslo.concurrency": "Oslo Concurrency library", "oslo.config": "Oslo Configuration API", "oslo.context": "Oslo Context library", "oslo.db": "Oslo Database library", "oslo.i18n": "Oslo i18n library", "oslo.log": "oslo.log library", "oslo.messaging": "Oslo Messaging API", "oslo.middleware": "Oslo Middleware library", "oslo.policy": "Oslo Policy library", "oslo.privsep": "OpenStack library for privilege separation", "oslo.reports": "oslo.reports library", "oslo.rootwrap": "Oslo Rootwrap", "oslo.serialization": "Oslo Serialization library", "oslo.service": "oslo.service library", "oslo.sphinx": "OpenStack Sphinx Extensions", "oslo.utils": "Oslo Utility library", "oslo.versionedobjects": "Oslo Versioned Objects library", "oslo.vmware": "Oslo VMware library", "oslosphinx": "OpenStack Sphinx Extensions and Theme", "oslotest": "Oslo test framework", "osmapi": "Python wrapper for the OSM API", "osmium": "Python bindings for libosmium, the data processing library for OSM data", "osmnx": "Retrieve, model, analyze, and visualize OpenStreetMap street networks and other spatial data", "osprofiler": "OpenStack Profiler Library", "osqp": "OSQP: The Operator Splitting QP Solver", "oss2": "Aliyun OSS (Object Storage Service) SDK", "osx": "Python for iran.", "other": "The Zen of Zope, by Alex Clark", "otherstuf": "Attributes-accessible mappings chainstuf (like ChainMap) & counterstuf (like Counter)", "otree": "oTree is a toolset that makes it easy to create and administer web-based social science experiments.", "otree-boto2-shim": "Shim package so that boto2 imports don't fail when using oTree.", "otree-core": "oTree is a toolset that makes it easy to create and administer web-based social science experiments.", "otree-save-the-change": "Automatically save only changed model data.", "ouchdb": "OuchDB is an implementation of CouchDB API on relational databases", "ouimeaux": "Open source control for Belkin WeMo devices", "oursql": "MySQL bindings for python.", "out": "Fun take on logging for non-huge projects. Gets \"outta\" the way.", "outcome": "Capture the outcome of Python function calls.", "output": "print list", "overpass": "Python wrapper for the OpenStreetMap Overpass API", "overpy": "Python Wrapper to access the OpenStreepMap Overpass API", "overrides": "A decorator to automatically detect mismatch when overriding a method.", "ovh": "\"Official OVH.com API wrapper\"", "ovirt-engine-sdk-python": "Python SDK for oVirt Engine API", "ovs": "Open vSwitch library", "ovsdbapp": "A library for creating OVSDB applications", "owslib": "OGC Web Service utility library", "ox": "python-ox - the web in a dict", "oyaml": "Ordered YAML: drop-in replacement for PyYAML which preserves dict ordering", "pa": "Paper Arxiv: A command line based academic paper management tool.", "pa11ycrawler": "A Scrapy spider for a11y auditing Open edX installations.", "pachi-py": "Python bindings to Pachi", "package": "package is a package to package your package", "packagedb-cli": "A command line tool to access the Fedora Package Database.", "packages": "", "packaging": "Core utilities for Python packages", "packbits": "PackBits encoder/decoder", "padatious": "A neural network intent parser", "padding": "Padding methods for password based encryption", "padme": "Padme is a mostly transparent proxy class for Python", "pafy": "Retrieve YouTube content and metadata", "page": "", "page_clustering": "Online k-means clustering of web pages", "page_finder": "", "pager": "Terminal/console pager module in pure Python", "pages": "", "paginate": "Divides large result sets into pages for easier browsing", "paho-mqtt": "MQTT version 3.1.1 client class", "pairtree": "Pairtree FS implementation.", "palettable": "Color palettes for Python", "pallets-sphinx-themes": "Sphinx themes for Pallets and related projects.", "pam": null, "pamela": "PAM interface using ctypes", "pamqp": "RabbitMQ Focused AMQP low-level library", "pan-python": "Multi-tool set for Palo Alto Networks PAN-OS, Panorama, WildFire and AutoFocus", "panacotta": "Python API for controlling Panasonic Blu-Ray players", "panci": "Convert between Travis-CI `.travis.yml` files and Tox `tox.ini` files", "panda": "A Python implementation of the Panda REST interface", "panda3d": "Panda3D is a framework for 3D rendering and game development for Python and C++ programs.", "pandas": "Powerful data structures for data analysis, time series, and statistics", "pandas-datareader": "Data readers extracted from the pandas codebase,should be compatible with recent pandas versions", "pandas-gbq": "Pandas interface to Google BigQuery", "pandas-profiling": "Generate profile report for pandas DataFrame", "pandas-summary": "An extension to pandas describe function.", "pandasql": "sqldf for pandas", "pando": "Pando is a Python web framework. Simplates are the main attraction.", "pandoc": "Pandoc Documents for Python", "pandocfilters": "Utilities for writing pandoc filters in python", "pandora_client": "pandora_client is a commandline client for pan.do/ra. You can use it to import videos into a pan.do/ra system. It is currently known to work on Linux and Mac OS X.", "panel": "A high level app and dashboarding solution for Python.", "panflute": "Pythonic Pandoc filters", "pantilthat": "Python library for driving Pimoroni PanTiltHAT!", "pantsbuild.pants": "A scalable build tool for large, complex, heterogeneous repos.", "paodate": "Easy object-oriented date and time handling for Python", "paper": "Keep generated fields in cache for your Django models.", "papermill": "Parametrize and run Jupyter and nteract Notebooks", "paragraph": "A computation graph micro-framework providing seamless lazy and concurrent evaluation.", "parallel": "Elementary parallel programming for Python", "param": "Declarative Python programming using Parameters.", "parameterized": "Parameterized testing with any Python test framework", "parameters": "Management of large, hierarchical parameter sets for modelling and simulation", "paramiko": "SSH2 protocol library", "paramz": "The Parameterization Framework", "parmap": "map and starmap implementations passing additional arguments and parallelizing if possible", "parmed": "Amber parameter file editor", "parse": "parse() is the opposite of format()", "parse-type": "Simplifies to build parse types based on the parse module", "parsedatetime": "Parse human-readable date/time text.", "parsel": "Parsel is a library to extract data from HTML and XML using XPath and CSS selectors", "parserator": "Create parsers", "parsimonious": "(Soon to be) the fastest pure-Python PEG parser I could muster", "parslepy": "Parsley extraction library using lxml", "parsley": "Parsing and pattern matching made easy.", "parso": "A Python Parser", "part": "A program part packer and unpacker", "partd": "Appendable key-value storage", "partialhash": "Library to partialy hash files.", "parts": "Minimal Python library for common list functions related to partitioning lists (and recombining them).", "party": "Lightweight Python client to the Artifactory API.", "parver": "Parse and manipulate version numbers.", "pass": "The pythonic awesome stylesheet language", "passa": "A resolver implementation for generating and interacting with Pipenv-compatible Lockfiles.", "passivetotal": "Client for the PassiveTotal REST API", "passlib": "comprehensive password hashing framework supporting over 30 schemes", "paste": "Tools for using a Web Server Gateway Interface stack", "pastedeploy": "Load, configure, and compose WSGI applications and servers", "pastel": "Bring colors to your terminal.", "pastescript": "A pluggable command-line frontend, including commands to setup package file layouts", "patch": "Library to parse and apply unified diffs", "path": "A module wrapper for os.path", "path-and-address": "Functions for server command-line arguments used by humans.", "path.py": "A module wrapper for os.path", "pathlib": "Object-oriented filesystem paths", "pathlib2": "Object-oriented filesystem paths", "pathos": "parallel graph management and execution in heterogeneous computing", "paths": "Python utility module for dealing with local paths", "pathspec": "Utility library for gitignore style pattern matching of file paths.", "pathtools": "File system general utilities", "pathvalidate": "pathvalidate is a Python library to sanitize/validate a string such as filenames/file-paths/etc.", "patool": "portable archive file manager", "patsy": "A Python package for describing statistical models and for building design matrices.", "pattern": "Web mining module for Python.", "patterns": "Pattern matching for python", "paul": "", "paunch": "Utility to launch and manage containers using YAML based configuration data", "pause": "A timestamp-based sleep function for Python.", "paver": "Easy build, distribution and deployment scripting", "payment": "Payment gateway library", "payments": "Library for handling online payments", "paypal": "PayPal API implementation in Python.", "paypalrestsdk": "The PayPal REST SDK provides Python APIs to create, process and manage payments.", "pbcore": "A Python library for reading and writing PacBio\u00ae data files", "pbkdf2": "PKCS#5 v2.0 PBKDF2 Module", "pbp": "simple crypto tool", "pbr": "Python Build Reasonableness", "pbs": "Python subprocess wrapper", "pcal9535a": "A library to control NXP PCAL9535A GPIO expander", "pcapy": "Python pcap extension", "pcs": "Packet Construction Set", "pdbpp": "pdb++, a drop-in replacement for pdb", "pdf2image": "A wrapper around the pdftoppm and pdftocairo command line tools to convert PDF to a PIL Image list.", "pdfdocument": "Programmatic wrapper around ReportLab.", "pdfkit": "Wkhtmltopdf python wrapper to convert html to pdf using the webkit rendering engine and qt", "pdflatex": "Simple wrapper to calling pdflatex", "pdfminer": "PDF parser and analyzer", "pdfminer.six": "PDF parser and analyzer", "pdfminer3k": "PDF parser and analyzer", "pdfquery": "Concise and friendly PDF scraper using JQuery or XPath selectors.", "pdfrw": "PDF file reader/writer library", "pdftables": "Parses PDFs and extracts what it believes to be tables.", "pdftotext": "Simple PDF text extraction", "pdoc": "A simple program and library to auto generate API documentation for Python modules.", "pdoc3": "Auto-generate API documentation for Python projects.", "pdpbox": "python partial dependence plot toolbox", "pdunehd": "A Python wrapper for Dune HD media player API", "peakutils": "Peak detection utilities for 1D data", "pebble": "Threading and multiprocessing eye-candy.", "pecan": "A WSGI object-dispatching web framework, designed to be lean and fast, with few dependencies.", "peep": "A \"pip install\" that is cryptographically guaranteed repeatable", "peepdf": "", "peepin": "Edits your requirements.txt by peep-hashing them", "peewee": "a little orm", "peewee-async": "Asynchronous interface for peewee ORM powered by asyncio.", "peewee-db-evolve": "Schema Evolution for Peewee", "pefile": "Python PE parsing module", "pefile2": "Python PE parsing module", "pegasus-wms": "Pegasus Workflow Management System Python API", "pelican": "Static site generator supporting reStructuredText and Markdown source content.", "pelican-gist": "Easily embed GitHub Gists in your Pelican articles.", "pem": "Easy PEM file parsing in Python.", "penaltymodel": "Utilities and interfaces for using penalty models.", "penaltymodel-cache": "A local cache for penalty models.", "pencompy": "Pencom relay controller over Ethernet", "pendulum": "Python datetimes made easy", "peony-twitter": "An asynchronous Twitter API client for Python 3.5+", "people": "Human Interaction API", "pep257": "Python docstring style checker", "pep517": "Wrappers to build Python packages using PEP 517 hooks", "pep562": "Backport of PEP 562.", "pep8": "Python style guide checker", "pep8-naming": "Check PEP-8 naming conventions, plugin for flake8", "pep8ify": "Cleans your python code to conform to pep8", "pep8radius": "PEP8 clean only the parts of the files which you have touched since the last commit, a previous commit or (the merge-base of) a branch.", "peppercorn": "A library for converting a token stream into a data structure for use in web form posts", "percache": "Persistently cache results of callables", "percy": "Python client library for visual regression testing with Percy (https://percy.io).", "perform": "Easily call processes from python", "performance": "Uncompromising Bytecode Optimizer For CPython 3.7", "period": "basic time period checking libary for Python", "periodictable": "Extensible periodic table of the elements", "perl": "Perl as a Python package", "permission": "Simple and flexible permission control for Flask app.", "persistence": "Persistent ExtensionClass", "persistent": "Translucent persistent objects", "personal": "Easy, secure self notification via email and sms, using smtplib and twilio", "pescador": "Multiplex generators for incremental learning", "petl": "A Python package for extracting, transforming and loading tables of data.", "petname": "Generate human-readable, random object names", "pew": "tool to manage multiple virtualenvs written in pure python", "pex": "The PEX packaging toolchain.", "pexif": "A module for editing JPEG EXIF data", "pexpect": "Pexpect allows easy control of interactive console applications.", "pf": "A dead simple task runner library with dependency injection and multi threading", "pg8000": "PostgreSQL interface library", "pgcli": "CLI for Postgres Database. With auto-completion and syntax highlighting.", "pgctl": "A tool to configure and manage developer playgrounds.", "pgi": "Pure Python GObject Introspection Bindings", "pgmagick": "Yet Another Python wrapper for GraphicsMagick", "pgpdump": "PGP packet parser library", "pgpy": "Pretty Good Privacy for Python", "pgspecial": "Meta-commands handler for Postgres Database.", "pgtool": "Command-line tool to simplify some common maintenance tasks on PostgreSQL databases", "pgxnclient": "A command line tool to interact with the PostgreSQL Extension Network.", "pgzero": "A zero-boilerplate 2D games framework", "phabricator": "Phabricator API Bindings", "phatbeat": "Python library for driving Pimoroni pHAT BEAT!", "phe": "Partially Homomorphic Encryption library for Python", "phik": "Phi_K correlation analyzer library", "phoenixdb": "Phoenix database adapter for Python", "phone": "\u624b\u673a\u53f7\u7801\u5e93", "phonenumbers": "Python version of Google's common library for parsing, formatting, storing and validating international phone numbers.", "phonenumberslite": "Python version of Google's common library for parsing, formatting, storing and validating international phone numbers.", "photutils": "An Astropy package for source detection and photometry", "php": "Handle some of the strange standards in PHP projects", "phply": "Lexer and parser for PHP source implemented using PLY", "phpmyadmin": "Phpmyadmin docker server", "phpserialize": "a port of the serialize and unserialize functions of php to python.", "phue": "A Philips Hue Python library", "pi": "Simpler python package installation", "pianohat": "A 13 key Piano HAT for your Raspberry Pi", "picamera": "A pure Python interface for the Raspberry Pi camera module.", "picard": "The next generation MusicBrainz tagger", "pick": "pick an option in the terminal with a simple GUI", "picklable-itertools": "itertools. But picklable. Even on Python 2.", "pickledb": "A lightweight and simple database using json.", "pickleshare": "Tiny 'shelve'-like database with concurrency support", "picoparse": "Very small parser library for constructing parsers straight forward, and without regular expression", "picraft": "An alternate Python interface for Minecraft.", "pid": "Pidfile featuring stale detection and file-locking, can also be used as context-manager or decorator", "pidfile": "A Pidfile Context Manager compatible with python-daemon's DaemonContext()", "pies": "The simplest way to write one program that runs on both Python 2 and Python 3.", "pies2overrides": "Defines override classes that should be included with pies only if running on Python2.", "piexif": "To simplify exif manipulations with python. Writing, reading, and more...", "pif": "Public IP address checker.", "pifacecommon": "The PiFace common functions module.", "pifacedigitalio": "The PiFace Digital I/O module.", "pifpaf": "Suite of tools and fixtures to manage daemons for testing", "piglow": "A module to drive the Pimoroni PiGlow board, based on the sn3218 i2c LED controller", "pigments": "Pigments clone of Pygments", "pigpio": "Raspberry Pi GPIO module", "pika": "Pika Python AMQP Client Library", "pika-pool": "Pools for pikas.", "pil": "Python Imaging Library", "pilight": "A pure python module to connect to a pilight daemon to send and receive commands.", "pilkit": "A collection of utilities and processors for the Python Imaging Libary.", "pillow": "Python Imaging Library (Fork)", "pillow-pil": "Pillow wrapper for PIL compatibility", "pillow-simd": "Python Imaging Library (Fork)", "pillowcase": "Smooths out installation issues due to the PIL/Pillow fork.", "pillowfight": "Eases the transition from PIL to Pillow for projects.", "pims": "Python Image Sequence", "pinax": "Pinax is an open-source collection of re-usable apps for the Django Web Framework", "pinax-blog": "Blogging app for the Django web framework", "pinax-boxes": "An app for including boxes of admin-controllable content in templates.", "pinax-eventlog": "an event logger for Django projects", "pinax-notifications": "User notification management for the Django web framework", "pinax-pages": "a Django pages app", "pinax-stripe": "a payments Django app for Stripe", "pinax-templates": "semantic templates for pinax apps", "pinax-theme-bootstrap": "a theme for Pinax based on Bootstrap", "pinax-theme-bootstrap-account": "a theme for Pinax/django-user-accounts based on Twitter's Bootstrap", "pinax-utils": "", "pinax-webanalytics": "web analytics and metrics integration for Django", "ping": "An implementation of ICMP ping in Python", "pingdom": "Pingdom Library", "pingparsing": "pingparsing is a CLI-tool/Python-library for parsing ping command output.", "pinocchio": "pinocchio plugins for the nose testing framework", "pint": "Physical quantities module", "pinyin": "Translate chinese chars to pinyin based on Mandarin.dat", "pip": "The PyPA recommended tool for installing Python packages.", "pip-autoremove": "Remove a package and its unused dependencies", "pip-check": "Display installed pip packages and their update status..", "pip-custom-platform": "pip + wheel wrapper which allows you to choose a custom platform name for building, downloading, and installing wheels.", "pip-review": "pip-review lets you smoothly manage all available PyPI updates.", "pip-shims": "Compatibility shims for pip versions 8 thru current.", "pip-tools": "pip-tools keeps your pinned dependencies fresh.", "pip-upgrader": "An interactive pip requirements upgrader. It also updates the version in your requirements.txt file.", "pip2pi": "pip2pi builds a PyPI-compatible package repository from pip requirements", "pipdeptree": "Command line utility to show dependency tree of packages", "pipe": "Module enablig a sh like infix syntax (using pipes)", "pipenv": "Python Development Workflow for Humans.", "pipenv-setup": "sync Pipfile/Pipfile.lock to setup.py", "pipenv-to-requirements": "Generate requirements[-dev].txt from Pipfile using pipenv", "pipfile": "", "piplapis-python": "Client library for use with the Pipl search API", "pipreqs": "Pip requirements.txt generator based on imports in project", "piprot": "How rotten are your requirements?", "pisa": "PDF generator using HTML and CSS", "piston-mini-client": "A package to consume Django-Piston web services", "pivy": "A Python binding for Coin", "pixiedust": "Productivity library for Jupyter Notebook", "pizzapi": "A Python wrapper for the Dominos Pizza API", "pk": "Project Caretaker. Inspired by npm.", "pkg": "UNKNOWN", "pkgconfig": "Interface Python with pkg-config", "pkginfo": "Query metadatdata from sdists / bdists / installed packages.", "pkgsettings": "Python package to ease the configuration of packages", "pkgtools": "Python Packages Tools, with Python 3.3 support", "pkgversion": "Versioning utils for python projects", "pkutils": "Python packaging utility library", "pl": "UNKNOWN", "plac": "The smartest command line arguments parser in the world", "place": "Place python library", "placebo": "Make boto3 calls that look real but have no effect", "plaid-python": "Python client library for the Plaid API and Link", "plaidml-keras": "PlaidML Keras backend implementation.", "plain": "coming soon", "plainbox": "Toolkit for software and hardware integration testing", "plan": "A Python package for writing and deploying cron jobs with a clear and beautiful syntax.", "planet": "Planet API Client", "planetary_test_data": "Planetary Test Data contains a list of planetary data for software testing purposes and utilities to retrieve them.", "planetaryimage": "Planetary image parser supporting", "plaster": "A loader interface around multiple config file formats.", "plaster-pastedeploy": "A loader implementing the PasteDeploy syntax to be used by plaster.", "platformio": "An open source ecosystem for embedded development. Cross-platform IDE and Unified Debugger. Static Code Analyzer and Remote Unit Testing. Multi-platform and Multi-architecture Build System. Firmware File Explorer and Memory Inspection. Arduino, ARM mbed, Espressif (ESP8266/ESP32), STM32, PIC32, nRF51/nRF52, RISC-V, FPGA, CMSIS, SPL, AVR, Samsung ARTIK, libOpenCM3", "playsound": "Pure Python, cross platform, single function module with no dependencies for playing sounds.", "please": "Software for the analysis of Low Energy Electron Microscopy data", "plette": "Structured Pipfile and Pipfile.lock models.", "plexapi": "Python bindings for the Plex API.", "plexauth": "Handles the authorization flow to obtain tokens from Plex.tv via external redirection.", "plexwebsocket": "Support for issuing callbacks in response to Plex websocket client updates.", "plim": "Plim is a Python port of Ruby's Slim template language built on top of Mako Templates", "plink": "A full featured Tk-based knot and link editor", "plivo": "A Python SDK to make voice calls & send SMS using Plivo and to generate Plivo XML", "plomino.tinymce": "TinyMCE Plomino Embedded Plugin", "plone": "The Plone Content Management System", "plone.alterego": "Low level support for dynamic modules", "plone.api": "A Plone API.", "plone.app.async": "Integration package for zc.async allowing asynchronous operations in Plone", "plone.app.blob": "ZODB blob support for Plone", "plone.app.blocks": "Implements the in-Plone blocks rendering process", "plone.app.caching": "Plone UI and default rules for plone.caching/z3c.caching", "plone.app.collection": "This package adds 'saved search' functionality to Plone.", "plone.app.content": "Content Views for Plone", "plone.app.contentlisting": "Listing of content for the Plone CMS", "plone.app.contentmenu": "Plone's content menu implementation", "plone.app.contentrules": "Plone integration for plone.contentrules", "plone.app.contenttypes": "Default content types for Plone based on Dexterity", "plone.app.controlpanel": "Controlpanels for Plone were moved to Products.CMFPlone.", "plone.app.customerize": "Integrate five.customerize into Plone.", "plone.app.dexterity": "Dexterity is a content type framework for CMF  applications, with particular emphasis on Plone. It can be viewed as an alternative to Archetypes that is more light-weight and modular.", "plone.app.discussion": "Enhanced discussion support for Plone", "plone.app.event": "The Plone calendar framework", "plone.app.folder": "Integration package for `plone.folder` into Plone", "plone.app.form": "zope.formlib integration for Plone", "plone.app.i18n": "Plone specific i18n extensions.", "plone.app.imaging": "User-configurable, blob-aware image scaling for Plone.", "plone.app.intid": "Installation and migration support for five.intid within Plone/CMF", "plone.app.iterate": "check-out/check-in staging for Plone", "plone.app.jquery": "jQuery integration for Plone", "plone.app.jquerytools": "jQuery Tools integration for Plone plus overlay and AJAX form helpers.", "plone.app.kss": "KSS (Kinetic Style Sheets) for Plone", "plone.app.layout": "Layout mechanisms for Plone", "plone.app.linkintegrity": "Manage link integrity in Plone.", "plone.app.locales": "Translation files for Plone", "plone.app.lockingbehavior": "Locking integration for dexterity content objects.", "plone.app.mosaic": "Plone Mosaic Site Builder and Site Layout", "plone.app.multilingual": "Multilingual Plone UI package, enables maintenance of translations for both Dexterity types and Archetypes", "plone.app.openid": "Plone OpenID authentication support", "plone.app.portlets": "Plone integration for the basic plone.portlets package", "plone.app.querystring": "A queryparser, querybuilder and extra helper tools, to parse stored queries to actual results, used in new style Plone collections", "plone.app.redirector": "redirection tool", "plone.app.referenceablebehavior": "Referenceable dexterity type behavior", "plone.app.registry": "Zope 2 and Plone  integration for plone.registry", "plone.app.relationfield": "Plone support for z3c.relationfield", "plone.app.robotframework": "Robot Framework testing resources for Plone", "plone.app.search": "Search user interface for Plone CMS.", "plone.app.testing": "Testing tools for Plone-the-application, based on plone.testing.", "plone.app.textfield": "Text field with MIME type support", "plone.app.theming": "Integrates the Diazo theming engine with Plone", "plone.app.themingplugins": "Plugins providing advanced plone.app.theming integration", "plone.app.tiles": "Plone UI integration for plone.tiles", "plone.app.toolbar": "Toolbar for Plone", "plone.app.transmogrifier": "Plone blueprints for collective.transmogrifier pipelines", "plone.app.upgrade": "Upgrade machinery for Plone.", "plone.app.users": "A package for all things users and groups related (specific to plone)", "plone.app.uuid": "Plone integration for the basic plone.uuid package", "plone.app.versioningbehavior": "Provides a behavior for using CMFEditions with dexterity content types", "plone.app.viewletmanager": "Configurable viewlet manager", "plone.app.vocabularies": "Collection of generally useful vocabularies for Plone.", "plone.app.widgets": "better plone widgets", "plone.app.workflow": "workflow and security settings for Plone", "plone.app.z3cform": "A collection of widgets, templates and other components for use with z3c.form and Plone", "plone.autoform": "Tools to construct z3c.form forms", "plone.batching": "Batching facilities used in Plone.", "plone.behavior": "Infrastructure for maintaining a registry of available behaviors", "plone.browserlayer": "Browser layer management for Zope 2 applications", "plone.cachepurging": "Cache purging support for Zope 2 applications", "plone.caching": "Zope 2 integration for z3c.caching", "plone.contentratings": "Plone support for the contentratings package", "plone.contentrules": "Plone ContentRules Engine", "plone.dexterity": "Framework for content types as filesystem code and TTW (Zope/CMF/Plone)", "plone.directives.dexterity": "Grok-like directives for creating Dexterity content", "plone.directives.form": "Grok-like directives configuring forms", "plone.event": "Event and calendaring related tools not bound to Plone", "plone.fieldsets": "An extension to zope.formlib, which allows to group fields into different fieldsets.", "plone.folder": "BTree-based folder implementation with order support", "plone.formwidget.autocomplete": "AJAX selection widget for Plone", "plone.formwidget.contenttree": "AJAX selection widget for Plone", "plone.formwidget.datetime": "Datetime widgets for Plone", "plone.formwidget.namedfile": "Image widget for z3c.form and Plone", "plone.formwidget.recaptcha": "ReCaptcha widget for Plone.", "plone.formwidget.recurrence": "Recurrence widget for Plone", "plone.i18n": "Advanced i18n/l10n features", "plone.indexer": "Hooks to facilitate managing custom index values in Zope 2/CMF applications", "plone.intelligenttext": "Provides transforms from text/x-web-intelligent to text/html and vice versa.", "plone.jsonapi.core": "Plone JSON API", "plone.keyring": "Manage secrets", "plone.locking": "webdav locking support", "plone.memoize": "Decorators for caching the values of functions and methods", "plone.multilingual": "Multilingual extensions core package", "plone.namedfile": "File types and fields for images, files and blob files with filenames", "plone.openid": "OpenID authentication support for PAS", "plone.outputfilters": "Transformations applied to HTML in Plone text fields as they are rendered", "plone.portlet.collection": "A portlet that fetches results from a collection", "plone.portlet.static": "An editable static HTML portlet for Plone.", "plone.portlets": "An extension of zope.viewlet to support dynamic portlets", "plone.principalsource": "A queriable source for accessing users and/or groups", "plone.protect": "Security for browser forms", "plone.recipe.codeanalysis": "Static code analysis for buildout-based Python projects.", "plone.recipe.zope2instance": "Buildout recipe for creating a Zope instance", "plone.registry": "Registry for application settings (like debconf/ about:config)", "plone.resource": "Static files for Plone", "plone.resourceeditor": "Integrates ACE editor into Plone", "plone.restapi": "plone.restapi is a RESTful hypermedia API for Plone.", "plone.rfc822": "RFC822 marshalling for zope.schema fields", "plone.scale": "Image scaling", "plone.schema": "Plone specific extensions and fields for zope schematas", "plone.schemaeditor": "Provides through-the-web editing of a zope schema/interface.", "plone.session": "Session based auth tkt authentication for Zope", "plone.stringinterp": "Adaptable string interpolation", "plone.subrequest": "Subrequests for Zope2", "plone.supermodel": "Serialize Zope schema definitions to and from XML", "plone.synchronize": "Simple decorators to support synchronized methods", "plone.testing": "Testing infrastructure for Zope and Plone projects.", "plone.theme": "Tools for managing themes in CMF and Plone sites", "plone.tiles": "APIs for managing tiles", "plone.transformchain": "Hook into repoze.zope2 that allows third party packages to register a sequence of hooks that will be allowed to modify the response before it is returned to the browser", "plone.uuid": "UUIDs for content items", "plone.z3cform": "plone.z3cform is a library that allows use of z3c.form with Zope and the CMF.", "plonetheme.barceloneta": "The default theme for Plone 5.", "plonetheme.classic": "The classic Plone 3 default theme.", "plonetheme.sunburst": "The default theme for Plone 4.", "plop": "", "plotly": "An open-source, interactive graphing library for Python", "plotnine": "A grammar of graphics for python", "ploy": "A tool to manage servers through a central configuration. Plugins allow provisioning, configuration and other management tasks.", "pluggy": "plugin and hook calling mechanisms for python", "pluginbase": "PluginBase is a module for Python that enables the development of flexible plugin systems in Python.", "pluginlib": "A framework for creating and importing plugins", "plugs": "Apps collection for uliweb", "plumber": "An alternative to mixin-based extension of classes.", "plumbum": "Plumbum: shell combinators library", "plumlightpad": "A python package that interacts with the Plum Lightpad", "plumpy": "A python workflow library", "plus": "A tool for helping you config, visualize, log and debug deep learning.", "ply": "Python Lex & Yacc", "plyer": "Platform-independent wrapper for platform-dependent APIs", "plyfile": "PLY file reader/writer", "plyvel": "Plyvel, a fast and feature-rich Python interface to LevelDB", "pm": "Command-line utility to manage development projects", "pmsensor": "Library to read data from environment sensors", "pmw": "", "pocket": "api wrapper for getpocket.com", "pocketcasts": "python module to interact with the unofficial Pocket Casts API.", "pockets": "A collection of helpful Python tools!", "pocketsphinx": "Python interface to CMU Sphinxbase and Pocketsphinx libraries", "poetry": "Python dependency management and packaging made easy.", "pogeo": "Fast geography package.", "point": "python print utility.", "pojson": "Convert PO files to JSON", "pokedex.py": "A Python library for the Pokedex API.", "polib": "A library to manipulate gettext files (po and mo files).", "policyuniverse": "Parse and Process AWS IAM Policies, Statements, ARNs, and wildcards.", "polling": "Powerful polling utility with many configurable options", "poloniex": "Poloniex API client for humans", "polyglot": "Polyglot is a natural language pipeline that supports massive multilingual applications.", "polygon2": "Polygon2 is a Python-2 package that handles polygonal shapes in 2D", "polyline": "A Python implementation of Google's Encoded Polyline Algorithm Format.", "pomegranate": "Pomegranate is a graphical models library for Python, implemented in Cython for speed.", "pony": "Pony Object-Relational Mapper", "popit-django": "Use PopIt stored data in your Django app", "populus": "Ethereum Development Framework", "port-for": "Utility that helps with local TCP ports managment. It can find an unused TCP localhost port and remember the association.", "portalocker": "Wraps the portalocker recipe for easy usage", "portend": "TCP port monitoring and discovery", "portia2code": "Convert portia spider definitions to python scrapy spiders", "portpicker": "A library to choose unique available network ports.", "positional": "Library to enforce positional or key-word arguments (deprecated/unmaintained)", "posix_ipc": "POSIX IPC primitives (semaphores, shared memory and message queues) for Python", "possible": "Possible is configuration management tool", "post": "http POST dict", "postcode.io": "Postcode & Geolocation API for UK for python", "poster": "Streaming HTTP uploads and multipart/form-data encoding", "postgres": "postgres is a high-value abstraction over psycopg2.", "postmarkup": "BBCode to (X)HTML rendering engine", "postmonkey": "Python wrapper for Mailchimp API", "power": "Cross-platform system power status information.", "powerlaw": "Toolbox for testing if a probability distribution fits a power law", "powerline-status": "The ultimate statusline/prompt utility.", "pox": "utilities for filesystem exploration and automated builds", "poyo": "A lightweight YAML Parser for Python. \ud83d\udc13", "pp": "Parallel and distributed programming for Python", "ppa": "Python Publishing Accessories (PPA) is a library of python modules useful to build web publication systems", "ppft": "distributed and parallel python", "pprint": "The funniest joke in the world", "pprintpp": "A drop-in replacement for pprint that's actually pretty", "pprofile": "Line-granularity, thread-aware deterministic and statistic pure-python profiler", "pqdict": "A Pythonic indexed priority queue", "practical": "work in progress", "practice": "Sorry,This is practice", "praw": "PRAW, an acronym for `Python Reddit API Wrapper`, is a python package that allows for simple access to reddit's API.", "praw-oauth2util": "OAuth2 wrapper for PRAW", "prawcore": "Low-level communication layer for PRAW 4+.", "prayer_times_calculator": "Prayer Times Calculator", "pre-commit": "A framework for managing and maintaining multi-language pre-commit hooks.", "pre-commit-hooks": "Some out-of-the-box hooks for pre-commit.", "predictionio": "PredictionIO Python SDK", "preggy": "preggy is an assertion library for Python.** What were you `expect`ing?", "prelude": "Prelude library of functional programming constructs", "premailer": "Turns CSS blocks into style attributes", "preppy": "preppy - a Preprocessor for Python", "preshed": "Cython hash table that trusts the keys are pre-hashed", "press": "An OS image installer that supports custome partitioning, lvm, and software raid", "pretend": "A library for stubbing in Python", "pretrainedmodels": "Pretrained models for Pytorch", "prettify": "IRC log prettifier", "pretty": "extensible pprint successor.", "pretty_midi": "Functions and classes for handling MIDI data conveniently.", "prettyconf": "Separation of settings from code.", "prettyplotlib": "Painlessly create beautiful default `matplotlib` plots.", "prettyprint": "prettyprint print list/dict/tuple object prettily", "prettytable": "A simple Python library for easily displaying tabular data in a visually appealing ASCII table format.", "prettytensor": "Pretty Tensor makes learning beautiful", "prezzibenzina-py": "A python package to get Prezzibenzina info", "prices": "Python price handling for humans", "primer3-py": "Python bindings for Primer3", "priority": "A pure-Python implementation of the HTTP/2 priority tree", "prison": "Rison encoder/decoder", "prmt": "Prompt user for commandline input.", "pro": "UNKNOWN", "probableparsing": "Common methods for propbable parsers", "probably": "Probably: Simple Probabilistic Data Structures", "problems": "Python practice", "proboscis": "Extends Nose with certain TestNG like features.", "proc": "Simple interface to Linux process information", "process": "Running processes in python.", "processing": "Package for using processes which mimics the threading module", "processor": "A microframework to build source -> filter -> action workflows.", "procname": "Set process titles in Python programs", "produce": "Replacement for Make geared towards processing data rather than compiling code", "product": "", "products.addremovewidget": "AddRemoveWidget + ComboBoxWidget for Plone", "products.advancedquery": "Flexible high level search construction and execution for Zope (>= 4)", "products.archaddon": "Straightforward toolbox of field types, widgets, and validators for Archetypes.", "products.archetypes": "Archetypes is a developers framework for rapidly developing and deploying rich, full featured content types within the context of Zope/CMF and Plone.", "products.atcontenttypes": "BBB: Default Content Types for Plone 2.1-4.3", "products.atextensions": "This package provides some further fields and widgets for Archetypes.", "products.atgooglevideo": "Use YouTube and Google Video on a Plone Site.", "products.atreferencebrowserwidget": "ATReferenceBrowserWidget is reference widget for Archetypes.", "products.atvocabularymanager": "Vocabulary library Plone. Central, Pluggable, TTW, with IMS VDEX Support", "products.btreefolder2": "A BTree based implementation for Zope 2's OFS.", "products.cmfactionicons": "Action icons product for the Zope Content Management Framework", "products.cmfcalendar": "Calendar product for the Zope Content Management Framework", "products.cmfcore": "Zope Content Management Framework core components", "products.cmfdefault": "Default product for the Zope Content Management Framework", "products.cmfdifftool": "Diff tool for Plone", "products.cmfdynamicviewfti": "CMFDynamicViewFTI is a product for dynamic views in CMF.", "products.cmfeditions": "Versioning for Plone", "products.cmfformcontroller": "CMFFormController provides a form validation mechanism for CMF.", "products.cmfplacefulworkflow": "Workflow policies for Plone", "products.cmfplone": "The Plone Content Management System (core)", "products.cmfquickinstallertool": "A facility for comfortable activation/deactivation of CMF compliant add ons for Zope.", "products.cmftestcase": "Integration testing framework for CMF.", "products.cmftopic": "Topic product for the Zope Content Management Framework", "products.cmfuid": "Uid product for the Zope Content Management Framework", "products.collage": "A product to create page compositions in Plone.", "products.contentmigration": "A generic content migration framework for Plone.", "products.contentwellportlets": "A Plone product that enables you to add portlets to the central column in a page", "products.datagridfield": "A table input component for Plone.", "products.daterecurringindex": "Zope 2 date index with support for recurring events.", "products.dcworkflow": "DCWorkflow product for the Zope Content Management Framework", "products.doormat": "Adds a doormat viewlet and installs it in the Plone footer. The links and text in the doormat are manageable as content.", "products.extendedpathindex": "Zope catalog index for paths", "products.externaleditor": "Zope External Editor", "products.externalmethod": "This package provides support for external Python methods within a Zope environment.", "products.genericsetup": "Read Zope configuration state from profile dirs / tarballs", "products.linguaplone": "Manage and maintain multilingual content that integrates seamlessly with Plone.", "products.loginlockout": "This Pluggable Authentication Service (PAS) plugin will lock a                  login after a predetermined number of incorrect attempts. Once                  locked, the user will be shown a page that tells them to contact                  their administrator to unlock.", "products.mailhost": "zope.sendmail integration for Zope.", "products.marshall": "Configurable Marshallers for Archetypes", "products.membrane": "Content-based users and groups for Plone", "products.mimetools": "MIMETools provides the ``dtml-mime`` tag for DocumentTemplate.", "products.mimetypesregistry": "MIME type handling for Zope", "products.ofsp": "General Zope 2 help screens.", "products.passwordresettool": "Password reset tool for Plone", "products.placelesstranslationservice": "PTS provides a way of internationalizing (i18n'ing) and localizing (l10n'ing) software for Zope 2.", "products.ploneformgen": "A through-the-web form generator for Plone", "products.plonegetpaid": "E-commerce framework for Plone", "products.plonekeywordmanager": "Change, merge and delete keywords (subjects) in Plone.", "products.plonelanguagetool": "PloneLanguageTool allows you to set the available languages in your Plone site, select various fallback mechanisms, and control the use of flags for language selection and translations.", "products.plonepas": "PlonePAS modifies the PluggableAuthService for use by Plone.", "products.plonetestcase": "Integration testing framework for Plone.", "products.pluggableauthservice": "Pluggable Zope authentication / authorization framework", "products.pluginregistry": "Configure application plugins based on interfaces", "products.portaltransforms": "MIME based content transformations", "products.printingmailhost": "A monkey patch to send MailHost messages to standard out", "products.pythonfield": "Archetypes field for Python input", "products.pythonscripts": "Provides support for restricted execution of Python scripts in Zope.", "products.resourceregistries": "Registry for managing CSS and JS", "products.securemailhost": "SecureMailHost is a reimplementation of the standard Zope2 MailHost with some security and usability enhancements.", "products.sessions": "Zope session management.", "products.silva": "Silva Content Management System", "products.standardcachemanagers": "Cache managers for Zope", "products.statusmessages": "statusmessages provides an easy way of handling internationalized status messages managed via an BrowserRequest adapter storing status messages in client-side cookies.", "products.talesfield": "An Archetypes field that stores TALES Expressions", "products.templatefields": "Supplies an Archetypes field useful for editing and storing Zope Page Templates", "products.temporaryfolder": "Zope temporary folder support.", "products.tinymce": "Adds support for TinyMCE, a platform independent web based Javascript HTML WYSIWYG editor, to Plone.", "products.validation": "Data validation package for Zope", "products.zcatalog": "Zope's indexing and search solution.", "products.zctextindex": "Obsolete distribution, use Products.ZCatalog.", "products.zopeversioncontrol": "Zope Version Control", "products.zsqlmethods": "SQL method support for Zope.", "profilehooks": "Decorators for profiling/timing/tracing individual functions", "proglog": "Log and progress bar manager for console, notebooks, web...", "program": "A warning to be more careful when pulling in dependencies", "progress": "Easy to use progress bars", "progressbar": "Text progress bar library for Python.", "progressbar-ipython": "Note: This is a just a packaged version of https://github.com/fnoble/python-progressbar.", "progressbar-latest": "Text progress bar library for Python.", "progressbar2": "A Python Progressbar library to provide visual (yet text based) progress to long running operations.", "progressbar33": "Text progress bar library for Python.", "progressist": "Minimalist and pythonic progress bar", "project": "2012-2014 69389/12", "project-generator": "Project generators for various embedded tools (IDE). IAR, uVision, Makefile and many more in the roadmap!", "prokaryote": "", "proliantutils": "Client Library for interfacing with various devices in HP Proliant Servers.", "proliphix": "API for Proliphix nt10e network thermostat.", "prometheus-flask-exporter": "Prometheus metrics exporter for Flask", "prometheus_client": "Python client for the Prometheus monitoring system.", "promise": "Promises/A+ implementation for Python", "prompt-toolkit": "Library for building powerful interactive command lines in Python", "pronouncing": "A simple interface for the CMU pronouncing dictionary", "pronto": "Python frontend to ontologies.", "proofchecker": "Python library for verifying proofs (twitter, github, domains etc) linked to a blockchain ID", "propagate": "Propagation belief graph algorithm", "proper": "Conventions over configuration web framework", "properties": "properties: an organizational aid and wrapper for validation and tab completion of class properties", "property": "A python module to read a property file.Similar to PropertyPlaceholderConfigurer in spring (java).Example : http://anandjoshi.me/pythonpropertyfileloader/", "property-manager": "Useful property variants for Python programming (required properties, writable properties, cached properties, etc)", "pros": "UNIX pipeline on python and steroids", "proselint": "A linter for prose.", "prospector": "Prospector: python static analysis tool", "protego": "Pure-Python robots.txt parser with support for modern conventions", "proto-google-cloud-datastore-v1": "GRPC library for the Google Cloud Datastore API", "proto-google-cloud-error-reporting-v1beta1": "GRPC library for the Stackdriver Error Reporting API", "proto-google-cloud-logging-v2": "GRPC library for the Stackdriver Logging API", "proto-google-cloud-pubsub-v1": "GRPC library for the Google Cloud Pub/Sub API", "proto-google-cloud-spanner-admin-database-v1": "GRPC library for the Cloud Spanner Database Admin API", "proto-google-cloud-spanner-admin-instance-v1": "GRPC library for the Cloud Spanner Instance Admin API", "proto-google-cloud-spanner-v1": "GRPC library for the Cloud Spanner API", "proto-google-cloud-speech-v1": "GRPC library for the Google Cloud Speech API", "proto-google-cloud-speech-v1beta1": "GRPC library for the Google Cloud Speech API", "proto-google-cloud-vision-v1": "GRPC library for the Google Cloud Vision API", "protobuf": "Protocol Buffers", "protobuf-to-dict": "A teeny Python library for creating Python dicts from protocol buffers and the reverse. Useful as an intermediate step before serialisation (e.g. to JSON).", "protobuf3-to-dict": "Ben Hodgson: A teeny Python library for creating Python dicts from protocol buffers and the reverse. Useful as an intermediate step before serialisation (e.g. to JSON). Kapor: upgrade it to PB3 and PY3, rename it to protobuf3-to-dict", "protocoin": "A pure Python bitcoin protocol implementation.", "protocol": "generic framework to develop protocols", "protorpc": "Google Protocol RPC", "prov": "A library for W3C Provenance Data Model supporting PROV-JSON, PROV-XML and PROV-O (RDF)", "provide": "Provide is a domainmodel application which supports application service provision work.", "provider": "A dependency injection pattern", "providers": "Providers is a simple library to enable function signature inheritance and dependency injection in a reusable and generic way.", "provision": "Create highly customized servers in the cloud", "proxmoxer": "Python Wrapper for the Proxmox 2.x API (HTTP and SSH)", "proxytypes": "General purpose proxy and wrapper types", "ps": "", "psclient": "Predictive Services Management Client", "psd-tools": "Python package for working with Adobe Photoshop PSD files", "psphere": "vSphere SDK for Python", "psq": "A simple task queue using Google Cloud Pub/Sub", "pssh": "Parallel version of OpenSSH and related tools", "psutil": "Cross-platform lib for process and system monitoring in Python.", "psychopy": "Psychology experiment software in Python", "psycogreen": "psycopg2 integration with coroutine libraries", "psycopg": "Python-PostgreSQL Database Adapter", "psycopg2": "psycopg2 - Python-PostgreSQL Database Adapter", "psycopg2-binary": "psycopg2 - Python-PostgreSQL Database Adapter", "psycopg2cffi": ".. image:: https://travis-ci.org/chtd/psycopg2cffi.svg?branch=master", "pt": "", "ptable": "A simple Python library for easily displaying tabular data in a visually appealing ASCII table format", "ptpdb": "Python debugger (pdb) build on top of prompt_toolkit", "ptpython": "Python REPL build on top of prompt_toolkit", "ptvsd": "Remote debugging server for Python support in Visual Studio and Visual Studio Code", "ptyprocess": "Run a subprocess in a pseudo terminal", "pubchempy": "A simple Python wrapper around the PubChem PUG REST API.", "public": "replace '__all__' with '@public.add' decorator", "publicsuffix": "Get a public suffix for a domain name using the Public Suffix List.", "publish": "Publish python package to PyPI and Github", "pubnub": "PubNub Real-time push service in the cloud", "pubnubsub-handler": "Handles the PubNub subscriptions between PubNub and Home-Assistant for Wink", "pubsub": "Simple Python PubSub", "pubsublogger": "Logging system using the PubSub functionality of Redis.", "pudb": "A full-screen, console-based Python debugger", "puente": "Strings extraction and other tools", "puka": "Puka - the opinionated RabbitMQ client", "pulp": "PuLP is an LP modeler written in python. PuLP can generate MPS or LP files and call GLPK, COIN CLP/CBC, CPLEX, and GUROBI to solve linear problems.", "pulsar": "Event driven concurrent framework for Python", "pulsar-galaxy-lib": "Distributed job execution application built for Galaxy (http://galaxyproject.org/).", "pulsectl": "Python high-level interface and ctypes-based bindings for PulseAudio (libpulse)", "pulumi": "Pulumi's Python SDK", "punch.py": "Update your version while having a drink", "puppet": "\u626f\u7ebf\u6728\u5076\uff0c\u540c\u82b1\u987a\u4ea4\u6613\u7aef\u754c\u9762\u64cd\u63a7API\u3002", "puput": "A Django blog app implemented in Wagtail.", "pupynere": "NetCDF file reader and writer.", "pur": "Update packages in a requirements.txt file to latest versions.", "pure-python-adb": "Pure python implementation of the adb client", "pure-sasl": "Pure Python client SASL implementation", "purepng": "Pure Python PNG image encoder/decoder", "purestorage": "Pure Storage FlashArray REST Client", "purl": "An immutable URL class for easy URL-building and manipulation", "purplex": "Pure Python lexer and parser implementation.", "push": "Twitter as a push notification service", "pushbullet.py": "A simple python client for pushbullet.com", "pusher": "A Python library to interract with the Pusher Channels API", "pusherclient": "Pusher websocket client for python", "pushetta": "Client for Pushetta API", "pvlib": "A set of functions and classes for simulating the performance of photovoltaic energy systems.", "pw": "Search in GPG-encrypted password file.", "pwaqi": "Python wrapper for World Air Quality Index data", "pweave": "Scientific reports with embedded python computations with reST, LaTeX or markdown", "pwgen": "Pure python version of pwgen", "pwmled": "Control LEDs connected to a micro controller using pwm.", "pwmt": "passwd manager tool", "py": "library with cross-python path, ini-parsing, io, code, log facilities", "py-asterisk": "Asterisk Manager API Python interface.", "py-august": "Python API for August Smart Lock and Doorbell", "py-bcrypt": "bcrypt password hashing and key derivation", "py-canary": "Python API for Canary Security Camera", "py-cpuinfo": "Get CPU info with pure Python 2 & 3", "py-dateutil": "Extensions to the standard Python datetime module", "py-ecc": "Elliptic curve crypto in python including secp256k1 and alt_bn128", "py-evm": "Python implementation of the Ethereum Virtual Machine", "py-find-injection": "simple python ast consumer which searches for common SQL injection attacks", "py-flags": "Type-safe (bit)flags for python 3", "py-getch": "Portable getch() for Python.", "py-geth": "Run Go-Ethereum as a subprocess", "py-gfm": "An implementation of Github-Flavored Markdown written as an extension to the Python Markdown library.", "py-kissmetrics": "Official KISSmetrics client library.", "py-melissa-climate": "Api wrapper for Melissa Climate http://seemelissa.com", "py-moneyed": "Provides Currency and Money classes for use in your Python code.", "py-mysql2pgsql": "Tool for migrating/converting from mysql to postgresql.", "py-openaq": "Python wrapper for the OpenAQ API", "py-postgresql": "PostgreSQL driver and tools library.", "py-pretty": "Formats dates, numbers, etc. in a pretty, human readable format.", "py-radix": "Radix tree implementation", "py-solc": "Python wrapper around the solc binary", "py-spy": "A Sampling Profiler for Python", "py-stackexchange": "A Python binding to the StackExchange (Stack Overflow, Server Fault, etc.) website APIs.", "py-synology": "Python API for Synology Surveillance Station", "py-trello": "Python wrapper around the Trello API", "py-ubjson": "Universal Binary JSON encoder/decoder", "py-vapid": "Simple VAPID header generation library", "py-zabbix": "Python module to work with zabbix.", "py-zipkin": "Library for using Zipkin in Python.", "py.test": "please use 'pytest' for installation", "py17track": "A Simple Python API for 17track.net", "py2-ipaddress": "Python 2.6 backport of 3.4's ipaddress module", "py2app": "Create standalone Mac OS X applications with Python", "py2exe": "Build standalone executables for Windows (python 3 version)", "py2neo": "Python client library and toolkit for Neo4j", "py3dns": "Python 3 DNS library", "py3k-bcrypt": "Blowfish password hashing", "py3o.formats": "Formats declarations for py3o", "py3o.template": "An easy solution to design reports using LibreOffice", "py4j": "Enables Python programs to dynamically access arbitrary Java objects", "pyacoustid": "bindings for Chromaprint acoustic fingerprinting and the Acoustid API", "pyactiveresource": "ActiveResource for Python", "pyads": "Python wrapper for TwinCAT ADS library", "pyaehw4a1": "Python interface for Hisense AEH-W4A1 module", "pyaes": "Pure-Python Implementation of the AES block-cipher and common modes of operation", "pyaff4": "Advanced Forensic Format Version 4 (AFF4) Python module.", "pyafraid": "Command-line tool for manipulating afraid.org DDNS", "pyaftership": "", "pyahocorasick": "pyahocorasick is a fast and memory efficient library for exact or approximate multi-pattern string search.  With the ahocorasick.Automaton class, you can find multiple key strings occurrences at once in some input text.  You can use it as a plain dict-like Trie or convert a Trie to an automaton for efficient Aho-Corasick search.  Implemented in C and tested on Python 2.7 and 3.4+.  Works on Linux, Mac and Windows. BSD-3-clause license.", "pyairvisual": "A simple API for AirVisual air quality data", "pyalarmdotcom": "A simple library to interface with Alarm.com built for use with Home-Assistant", "pyalgotrade": "Python Algorithmic Trading", "pyalmond": "Python module to talk to the Web Almond API.", "pyalpm": "libalpm bindings for Python 3", "pyalsaaudio": "ALSA bindings", "pyamf": "AMF support for Python", "pyamg": "", "pyaml": "PyYAML-based module to produce pretty and readable YAML-serialized data", "pyandoc": "Python wrapper for Pandoc - the universal document converter", "pyang": "A YANG (RFC 6020/7950) validator and converter", "pyangbind": "PyangBind is a plugin for pyang which converts YANG datamodels into a Python class hierarchy, such that Python can be used to manipulate data that conforms with a YANG model.", "pyannote.algorithms": "PyAnnote algorithms", "pyannote.core": "Advanced data structures for handling temporal segments with attached labels.", "pyannote.metrics": "a toolkit for reproducible evaluation, diagnostic, and error analysis of speaker diarization systems", "pyannote.parser": "pyannote parsers (deprecated)", "pyapi-gitlab": "Gitlab API wrapper for Gitlab 7.X", "pyarlo": "Python Arlo is a library written in Python 2.7/3x that exposes the Netgear Arlo cameras as Python objects.", "pyarrow": "Python library for Apache Arrow", "pyasn": "Offline IP address to Autonomous System Number lookup module.", "pyasn1": "ASN.1 types and codecs", "pyasn1-modules": "A collection of ASN.1-based protocols modules.", "pyathena": "Python DB API 2.0 (PEP 249) compliant client for Amazon Athena", "pyatmo": "Simple API to access Netatmo weather station data from any Python 3 script. Design for Home-Assitant (but not only)", "pyatom": "Python Algebraic Toolbox for Optimization Modeling", "pyatome": "Get your energy consumption from Atome Linky device", "pyatv": "Library for controlling an Apple TV", "pyaudio": "Bindings for PortAudio v19, the cross-platform audio input/output stream library.", "pyautogui": "PyAutoGUI lets Python control the mouse and keyboard, and other GUI automation tasks. For Windows, macOS, and Linux, on Python 3 and 2.", "pyaxiom": "An ocean data toolkit developed and used by Axiom Data Science", "pyazo": "Gyazo API client", "pyball": "A python client to get football news", "pybamboo": "A Python package to interact with bamboo.io.", "pybarcode": "Create standard barcodes with Python. No external modules needed (optional PIL support included).", "pybars": "handlebars.js templating for Python.", "pybars3": "Handlebars.js templating for Python 3 and 2", "pybase64": "Fast Base64 encoding/decoding", "pybbm": "PyBB Modified. Django forum application", "pybbox": "a simple python3 library for the Bouygues BBox Routeur API", "pybedtools": "Wrapper around BEDTools for bioinformatics work", "pybehnevis": "python wrapper for Behnevis API", "pybids": "bids: interface with datasets conforming to BIDS", "pybigwig": "A package for accessing bigWig files using libBigWig", "pybind11": "Seamless operability between C++11 and Python", "pybiomart": "A simple pythonic interface to biomart.", "pybitcoin": "Library for Bitcoin & other cryptocurrencies. Tools are provided for blockchain transactions, RPC calls, and private keys, public keys, and addresses.", "pybitcointools": "Python Bitcoin Tools", "pyblackbird": "Python API for talking to Monoprice Blackbird 4k 8x8 HDBaseT Matrix", "pyblake2": "BLAKE2 hash function extension module", "pyblish-base": "Plug-in driven automation framework for content", "pyblish-lite": "Lightweight graphical user interface to Pyblish", "pybloom": "PyBloom: A Probabilistic data structure", "pybloom_live": "Bloom filter: A Probabilistic data structure", "pybloomfiltermmap": "A Bloom filter (bloomfilter) for Python built on mmap", "pybluez": "Bluetooth Python extension module", "pyboleto": "Python Library to create \"boletos de cobran\u00e7a banc\u00e1ria\" for     several Brazilian banks", "pybonjour": "Pure-Python interface to Apple Bonjour and compatible DNS-SD libraries", "pybossa-client": "pybossa-client is a tiny Python library makes it easy to work with PYBOSSA.", "pybotvac": "Python package for controlling Neato pybotvac Connected vacuum robot", "pybrain": "PyBrain is the Swiss army knife for neural networking.", "pybrowserid": "Python library for the BrowserID Protocol", "pybtex": "A BibTeX-compatible bibliography processor in Python", "pybtex-docutils": "A docutils backend for pybtex.", "pybuilder": "PyBuilder", "pybullet": "Official Python Interface for the Bullet Physics SDK specialized for Robotics Simulation and Reinforcement Learning", "pycadf": "CADF Library", "pycairo": "Python interface for cairo", "pycallgraph": "Python Call Graph is a library and command line tool that visualises the flow of your Python application.  See http://pycallgraph.slowchop.com/ for more information.", "pycalver": "CalVer for python libraries.", "pycap": "PyCap: Python interface to REDCap", "pycapnp": "A cython wrapping of the C++ Cap'n Proto library", "pycaptcha": "A Python framework for CAPTCHA tests", "pycaption": "Closed caption converter", "pycares": "Python interface for c-ares", "pycarwings2": "Python library for interacting with the Nissan Leaf Carwings telematics service", "pycassa": "Python client library for Apache Cassandra", "pycbc": "Core library to analyze gravitational-wave data, find signals, and study their parameters.", "pycbc-glue": "Grid LSC User Engine", "pycbc-pylal": "legacy support python ligo algorithm library", "pycco": "A Python port of Docco: the original quick-and-dirty, hundred-line-long, literate-programming-style documentation generator.", "pycec": "Provide HDMI CEC devices as objects, especially for use with Home Assistant", "pycfdns": "A module for updating Cloudflare DNS records.", "pychalk": "Color printing in python", "pychannels": "API client for the Channels app - https://getchannels.com", "pychart": "Python Chart Generator", "pychef": "Python implementation of a Chef API client.", "pychm": "Python package to handle CHM files", "pychromecast": "Python module to talk to Google Chromecast.", "pycifrw": "CIF/STAR file support for Python", "pyciss": "Software for handling Cassini ISS data", "pyclamd": "pyClamd is a python interface to Clamd (Clamav daemon).", "pyclassifiers": "classifiers from pypi", "pycld2": "Python bindings around Google Chromium's embedded compact language detection library (CLD2)", "pycldf": "A python library to read and write CLDF datasets", "pycli": "Simple, object-oriented approach to Python CLI apps", "pyclipper": "Cython wrapper for the C++ translation of the Angus Johnson's Clipper library (ver. 6.4.2)", "pyclts": "A python library to check phonetic transcriptions", "pycmd": "pycmd: tools for managing/searching Python related files.", "pycmus": "A python cmus remote library", "pycocotools": "Tools for working with the MSCOCO dataset", "pycodestyle": "Python style guide checker", "pycodestylebear": "'PycodestyleBear' bear for coala (http://coala.rtfd.org/)", "pycoin": "Utilities for Bitcoin and altcoin addresses and transaction manipulation.", "pycollada": "python library for reading and writing collada documents", "pycomfoconnect": "Python interface for the Zehnder ComfoConnect LAN C bridge.", "pyconcepticon": "programmatic access to concepticon-data", "pycontracts": "PyContracts is a Python package that allows to declare constraints on function parameters and return values. Contracts can be specified using Python3 annotations, in a decorator, or inside a docstring :type: and :rtype: tags. PyContracts supports a basic type system, variables binding, arithmetic constraints, and has several specialized contracts (notably for Numpy arrays), as well as an extension API.", "pyconvert": "A simple and useful python API to convert python objects into xml and json documents and vice versa", "pycoolmasternet": "Lightweight Python API for CoolMasterNet HVAC bridges", "pycorenlp": "Python wrapper for Stanford CoreNLP", "pycosat": "bindings to picosat (a SAT solver)", "pycouchdb": "Modern pure python CouchDB Client.", "pycountry": "ISO country, subdivision, language, currency and script definitions and their translations", "pycountry-nopytest": "ISO country, subdivision, language, currency and script definitions and their translations", "pycparser": "C parser in Python", "pycparserext": "Extensions for pycparser", "pycpfcnpj": "Python module for brazilian register numbers for persons (CPF) and companies (CNPJ).", "pycricbuzz": "A library for fetching live cricket scores from cricbuzz", "pycrypt": "Fast TwoFish encryption.", "pycrypto": "Cryptographic modules for Python.", "pycryptodome": "Cryptographic library for Python", "pycryptodomex": "Cryptographic library for Python", "pycryptopp": "Python wrappers for a few algorithms from the Crypto++ library", "pycsco": "Python modules to simplify working with Cisco NX-OS devices", "pycsp": "PyCSP - Python CSP Library", "pycsspeechtts": "Python 3 interface to Microsoft Cognitive Services Text To Speech", "pycsw": "pycsw is an OGC CSW server implementation written in Python", "pyct": "python package common tasks for users (e.g. copy examples, fetch data, ...)", "pycuda": "Python wrapper for Nvidia CUDA", "pycups": "Python bindings for libcups", "pycurl": "PycURL -- A Python Interface To The cURL library", "pycycle": "Find and repair your import cycles in any project", "pydaikin": "Python Daikin HVAC appliances interface", "pydal": "a pure Python Database Abstraction Layer (for python version 2.7 and 3.x)", "pydanfossair": "Python interface for Danfoss Air HRV systems", "pydantic": "Data validation and settings management using python 3.6 type hinting", "pydap": "An implementation of the Data Access Protocol.", "pydas": "Upload data to a Midas Server application with Python.", "pydash": "The kitchen sink of Python utility libraries for doing \"stuff\" in a functional way. Based on the Lo-Dash Javascript library.", "pydatalog": "A pure-python implementation of Datalog, a truly declarative language derived from Prolog.", "pydbf": "Search, read and write Dbase and Xbase files", "pydblite": "PyDbLite, a fast, pure-Python in-memory database", "pydbus": "Pythonic DBus library", "pydeconz": "A Python library for communicating with deCONZ REST-API from Dresden Elektronik", "pydect200": "Control Fritz AVM DECT200", "pydeep": "Python bindings for ssdeep", "pydelijn": "Get realtime info on stop passages of De Lijn (api.delijn.be)", "pydensecrf": "A python interface to Philipp Kr\u00e4henb\u00fchl's fully-connected (dense) CRF code.", "pydenticon": "Library for generating identicons. Port of Sigil (https://github.com/cupcake/sigil) with enhancements.", "pydes": "Pure python implementation of DES and TRIPLE DES encryption algorithm", "pydevd": "PyDev.Debugger (used in PyDev, PyCharm and VSCode Python)", "pydgraph": "Official Dgraph client implementation for Python", "pydicom": "Pure python package for DICOM medical file reading and writing", "pydictionary": "Python Module to get meanings, translations, synonyms and antonyms of words", "pydispatch": "Simple Python message dispatcher", "pydispatcher": "Multi-producer-multi-consumer signal dispatching mechanism", "pydl4j": "Java dependency management for Python projects using DL4J", "pydle": "A compact, flexible and standards-abiding IRC library for Python 3.", "pydmt": "python dependency management tool", "pydns": "Python DNS library", "pydoc-markdown": "Create Python API documentation in Markdown format", "pydocstyle": "Python docstring style checker", "pydocstylebear": "'PyDocStyleBear' bear for coala (http://coala.rtfd.org/)", "pydoctor": "API doc generator.", "pydocumentdb": "Azure DocumentDB Python SDK", "pydocusign": "Python client for DocuSign signature SAAS platform.", "pydoe": "Design of experiments for Python", "pydoods": "A Python wrapper for the DOODS image detection service", "pydot": "Python interface to Graphviz's Dot", "pydot-ng": "Python interface to Graphviz's Dot", "pydot2": "Python interface to Graphviz's Dot", "pydotplus": "Python interface to Graphviz's Dot language", "pydrive": "Google Drive API made easy.", "pydroid-ipcam": "A asyncio library for handling android ipcam", "pydruid": "A Python connector for Druid.", "pydub": "Manipulate audio with an simple and easy high level interface", "pydukeenergy": "Interface to the unofficial Duke Energy API", "pydumbnet": "low-level networking library", "pyeapi": "Python Client for eAPI", "pyebox": "Get your EBox consumption (wwww.ebox.ca)", "pyecharts": "Python options, make charting easier", "pyecharts-javascripthon": "Embeded Python functions in pyecharts", "pyecharts-jupyter-installer": "Install pyecharts extensions into jupyter", "pyecharts-snapshot": "renders pyecharts output as image", "pyechonest": "Python interface to The Echo Nest APIs.", "pyeclib": "This library provides a simple Python interface for implementing erasure codes.  To obtain the best possible performance, the underlying erasure code algorithms are written in C.", "pyeconet": "Interface to the unofficial EcoNet API", "pyedimax": "Interface with Edimax Smart Plugs", "pyee": "A port of node.js's EventEmitter to python.", "pyeight": "Provides a python api to interact with an Eight Sleep mattress cover.", "pyelasticsearch": "Flexible, high-scale API to elasticsearch", "pyelftools": "Library for analyzing ELF files and DWARF debugging information", "pyelliptic": "Python OpenSSL wrapper for modern cryptography with ECC, AES, HMAC, Blowfish, ...", "pyembed": "Python OEmbed consumer library with automatic discovery of producers", "pyembed-markdown": "Python Markdown extension for embedding content using OEmbed", "pyemby": "Provides a python interface to interact with a Emby media server.", "pyemd": "A Python wrapper for Ofir Pele and Michael Werman's implementation of the Earth Mover's Distance.", "pyenchant": "Python bindings for the Enchant spellchecking system", "pyenvisalink": "A python3 library for running asynchronus communications with envisalink alarm control panel modules.", "pyepbd": "C\u00e1lculo de la eficiencia energ\u00e9tica seg\u00fan ISO/DIS 52000-1:2015", "pyephem": "Empty package that depends on \"ephem\"", "pyephember": "Python library to work with ember from EPH Controls", "pyepics": "Epics Channel Access for Python", "pyepm": "Python Ethereum Package Manager", "pyepsg": "Easy access to the EPSG database via http://epsg.io/", "pyes": "Python Elastic Search driver", "pyessent": "A wrapper around Essent's API", "pyethash": "Python wrappers for ethash, the ethereum proof of workhashing function", "pyethereum": "snellejelle & preben", "pyeupi": "Python API for the European Union anti-phishing initiative.", "pyeverlights": "A library for controlling an EverLights lighting system.", "pyexcel": "A wrapper library that provides one API to read, manipulate and writedata in different excel formats", "pyexcel-io": "A python library to read and write structured data in csv, zipped csvformat and to/from databases", "pyexcel-ods": "A wrapper library to read, manipulate and write data in ods format", "pyexcel-ods3": "A wrapper library to read, manipulate and write data in ods format", "pyexcel-webio": "A generic request and response interface for pyexcel web extensions.", "pyexcel-xls": "A wrapper library to read, manipulate and write data in xls format. Itreads xlsx and xlsm format", "pyexcel-xlsx": "A wrapper library to read, manipulate and write data in xlsx and xlsmformat", "pyexcelerate": "Accelerated Excel XLSX Writing Library for Python 2/3", "pyexcelerator": "generating Excel 97+ files; importing Excel 95+ files; Excel files dumper; OLE2 files dumper; xls2txt, xls2csv, xls2html", "pyexceptions": "An exceptions base-class to derive more powerful exceptions.", "pyexecjs": "Run JavaScript code from Python", "pyextdirect": "Python implementation of Ext Direct", "pyface": "traits-capable windowing framework", "pyfai": "Python implementation of fast azimuthal integration", "pyfaidx": "pyfaidx: efficient pythonic random access to fasta subsequences", "pyfakefs": "pyfakefs implements a fake file system that mocks the Python file system modules.", "pyfasta": "fast, memory-efficient, pythonic (and command-line) access to fasta sequence files", "pyfastaq": "Script to manipulate FASTA and FASTQ files, plus API for developers", "pyfasttext": "Yet another Python binding for fastText", "pyfc": "Fractal cube generator, analyzer and visualizer", "pyfcm": "Python client for FCM - Firebase Cloud Messaging (Android, iOS and Web)", "pyfftw": "A pythonic wrapper around FFTW, the FFT library, presenting a unified interface for all the supported transforms.", "pyfg": "Python API for fortigate", "pyfgt": "Represents the base components of the Fortinet FortiGate REST interface with abstractions", "pyfido": "Get your Fido consumption (wwww.fido.ca)", "pyfiglet": "Pure-python FIGlet implementation", "pyfire": "A Campfire API implementation in Python", "pyfirmata": "A Python interface for the Firmata procotol", "pyfits": "[DEPRECATED] Please use astropy.io.fits instead.", "pyflakes": "passive checker of Python programs", "pyflexit": "Flexit CI66 helper library", "pyflic-homeassistant": "Python library to connect to and interact with Flic buttons.", "pyflunearyou": "A clean, well-tested Python3 API for Flu Near You", "pyflux": "PyFlux: A time-series analysis library for Python", "pyfmg": "Represents the base components of the Fortinet FortiManager JSON-RPC interface", "pyfnip": "Python wrapper for FutureNow IP relay/dimmer units", "pyfolio": "pyfolio is a Python library for performance and risk analysis of financial portfolios", "pyformance": "Performance metrics, based on Coda Hale's Yammer metrics", "pyformat": "Formats Python code to follow a consistent style.", "pyfoscam": "Foscam Python Library for H.264 IP Cameras (FI9821W/P/HD816W/P)", "pyfrc": "Development tools library for python interpreter used for the FIRST Robotics Competition", "pyfritzhome": "Fritz!Box Smarthome Python Library", "pyfronius": "Automated JSON API based communication with Fronius Symo", "pyftdi": "FTDI device driver (pure Python)", "pyftpdlib": "Very fast asynchronous FTP server library", "pyfttt": "Python tools for interacting with the IFTTT Webhooks Channel", "pyfunctional": "Package for creating data pipelines with chain functional programming", "pyfxa": "Firefox Accounts client library for Python", "pyga": "Server side implementation of Google Analytics in Python.", "pygal": "A python svg graph plotting library", "pygame": "Python Game Development", "pygatt": "Python Bluetooth LE (Low Energy) and GATT Library", "pygdal": "Virtualenv and setuptools friendly version of standard GDAL python bindings", "pygdbmi": "Parse gdb machine interface output with Python", "pygeocoder": "Python interface for Google Geocoding API V3. Can be used to easily geocode, reverse geocode, validate and format addresses.", "pygeoif": "A basic implementation of the __geo_interface__", "pygeoip": "Pure Python GeoIP API", "pygerduty": "Python Client Library for PagerDuty's REST API", "pygerrit": "Client library for interacting with Gerrit", "pygetwindow": "A simple, cross-platform module for obtaining GUI information on application's windows.", "pyghmi": "Python General Hardware Management Initiative (IPMI and others)", "pygit2": "Python bindings for libgit2.", "pygithub": "Use the full Github API v3", "pygithub-requests": "Use the full Github API v3", "pygithub3": "Python wrapper for the github v3 api", "pyglet": "Cross-platform windowing and multimedia library", "pyglottolog": "python package for glottolog data curation", "pygments": "Pygments is a syntax highlighting package written in Python.", "pygments-github-lexers": "Pygments Github custom lexers.", "pygments-lexer-solidity": "Solidity lexer for Pygments", "pygments-markdown-lexer": "Pygments Markdown Lexer \u2013 A Markdown lexer for Pygments to highlight Markdown code snippets.", "pygments-pytest": "A pygments lexer for pytest output.", "pygments-style-github": "Pygments version of the github theme.", "pygments-style-solarized": "Pygments version of the Solarized theme.", "pygobject": "Python bindings for GObject Introspection", "pygogo": "A Python logging library with super powers", "pygogogate2": "Python package for controlling Gogogate2-Enabled Garage Door", "pygooglechart": "A complete Python wrapper for the Google Chart API", "pygpgme": "A Python module for working with OpenPGP messages", "pygr": "Pygr, a Python graph-database toolkit oriented primarily on bioinformatics applications", "pygraphviz": "Python interface to Graphviz", "pygresql": "Python PostgreSQL Interfaces", "pygrib": "Python module for reading/writing GRIB files", "pygsheets": "Google Spreadsheets Python API v4", "pygtail": "Reads log file lines that have not been read.", "pygtfs": "Models GTFS data in a database.", "pygtfs-homeassistant": "Models GTFS data in a database.", "pygtk": "Python bindings for GTK", "pygtp": "Python library for Go Text Protocol controllers and engines", "pygtrie": "Trie data structure implementation.", "pygtt": "A python package to get GTT transit info", "pyhacrf-datamade": "Hidden alignment conditional random field, a discriminative string edit distance", "pyhamcrest": "Hamcrest framework for matcher objects", "pyhaml": "Pythonic implementation of HAML, cross compiling to Mako template syntax.", "pyharmony": "Python library for programmatically using a Logitech Harmony Link or Ultimate Hub.", "pyhaversion": "", "pyhcl": "HCL configuration parser for python", "pyhdf": "pyhdf: Python interface to the NCSA HDF4 library.", "pyhdfs": "Pure Python HDFS client", "pyheos": "An async python library for controlling HEOS devices through the HEOS CLI Protocol", "pyhermes": "The Python interface to the Hermes message broker.", "pyhik": "Provides a python api to interact with a Hikvision camera event stream and toggle motion detection.", "pyhive": "Python interface to Hive", "pyhiveapi": "A Python library to interface with the Hive API", "pyhocon": "HOCON parser for Python", "pyhomematic": "Homematic interface", "pyhomeworks": "Lutron Homeworks Series 4 and 8 interface over Ethernet", "pyhook": "pyHook: Python wrapper for out-of-context input hooks in Windows", "pyhs100": "Interface for TPLink HS1xx plugs, HS2xx wall switches & LB1xx bulbs", "pyhs2": "Python Hive Server 2 Client Driver", "pyhull": "A Python wrapper to Qhull (http://www.qhull.org/) for the computation of the convex hull, Delaunay triangulation and Voronoi diagram", "pyhydroquebec": "Get your Hydro Quebec consumption (wwww.hydroquebec.com)", "pyialarm": "A simple library to interface with iAlarm systems, built for use with Home-Assistant", "pyicloud": "PyiCloud is a module which allows pythonistas to interact with iCloud webservices.", "pyicu": "Python extension wrapping the ICU C++ API", "pyimgur": "The easy way of using Imgur.", "pyimpfuzzy": "Python modules for impfuzzy", "pyinotify": "Linux filesystem events monitoring", "pyinquirer": "A Python module for collection of common interactive command line user interfaces, based on Inquirer.js", "pyinstaller": "PyInstaller bundles a Python application and all its dependencies into a single package.", "pyinstrument": "Call stack profiler for Python. Shows you why your code is slow!", "pyiosxr": "Python API to interact with network devices running IOS-XR", "pyipma": "Python library to retrieve information from Instituto Portugu\u00eas do Mar e Atmosfera.", "pyiqvia": "A clean, async-focused Python3 API for IQVIA data", "pyirishrail": "Python library to get the real-time transport information (RTPI) from Irish Rail", "pyisbn": "A module for working with 10- and 13-digit ISBNs", "pyiss": "A simple python3 library for info about the current International Space Station location", "pyisy": "Python module to talk to ISY994 from UDI.", "pyitachip2ir": "A library for sending IR commands to an ITach IP2IR gateway", "pyjade": "Jade syntax template adapter for Django, Jinja2, Mako and Tornado templates", "pyjnius": "A Python module to access Java classes as Python classes using JNI.", "pyjokes": "One line jokes for programmers (jokes as a service)", "pyjq": "Binding for jq JSON processor.", "pyjsparser": "Fast javascript parser (based on esprima.js)", "pyjwe": "JSON Web Encryption implementation in Python", "pyjwkest": "Python implementation of JWT, JWE, JWS and JWK", "pyjwt": "JSON Web Token implementation in Python", "pyjwt-mozilla": "JSON Web Token implementation in Python", "pykafka": "Full-Featured Pure-Python Kafka Client", "pykalman": "An implementation of the Kalman Filter, Kalman Smoother, and EM algorithm in Python", "pyke": "Python Knowledge Engine and Automatic Python Program Generator", "pykerberos": "High-level interface to Kerberos", "pykickstart": "Python module for manipulating kickstart files", "pykinect": "PyKinect Module for interacting with the Kinect SDK", "pykira": "Communicate with Kira IR-IP modules", "pykismet3": "A Python 3 module for the Akismet spam comment-spam-detection web service.", "pykka": "Pykka is a Python implementation of the actor model", "pykmip": "KMIP library", "pykml": "Python KML library", "pykube": "Python client library for Kubernetes", "pykwalify": "Python lib/cli for JSON/YAML schema validation", "pykwb": "KWB Easyfire serial library, for inclusion into homeassistant", "pylab": "pylab", "pylacrosse": "LaCrosse sensor library", "pylama": "pylama -- Code audit tool for python", "pylama_pylint": "Pylint integration to pylama library.", "pylast": "A Python interface to Last.fm and Libre.fm", "pylatex": "A Python library for creating LaTeX files and snippets", "pylatexenc": "Simple LaTeX parser providing latex-to-unicode and unicode-to-latex conversion", "pylaunches": "", "pylbfgs": "LBFGS and OWL-QN optimization algorithms", "pyld": "Python implementation of the JSON-LD API", "pyldap": "DEPRECATED; use python-ldap instead", "pyldavis": "Interactive topic model visualization. Port of the R package.", "pylev": "A pure Python Levenshtein implementation that's not freaking GPL'd.", "pylexibank": "Python library implementing the lexibank workbench", "pylgnetcast-homeassistant": "Client for the LG Smart TV running NetCast 3 or 4.", "pylgtv": "Library to control webOS based LG Tv devices", "pylibacl": "POSIX.1e ACLs for python", "pylibemu": "Libemu Python wrapper", "pylibftdi": "Pythonic interface to FTDI devices using libftdi", "pylibinjection": "Libinjection Python wrapper", "pyliblo": "Python bindings for the liblo OSC library", "pyliblzma": "Python bindings for liblzma", "pylibmc": "Quick and small memcached client for Python", "pylibrary": "Library of Wonderful Things", "pylibravatar": "Python module for Libravatar", "pylibscrypt": "Scrypt for Python", "pylibsrtp": "Python wrapper around the libsrtp library", "pylinky": "Get your consumption data from your Enedis account (www.enedis.fr)", "pylint": "python code static checker", "pylint-celery": "pylint-celery is a Pylint plugin to aid Pylint in recognising and understandingerrors caused when using the Celery library", "pylint-common": "pylint-common is a Pylint plugin to improve Pylint error analysis of the standard Python library", "pylint-django": "A Pylint plugin to help Pylint understand the Django web framework", "pylint-flask": "pylint-flask is a Pylint plugin to aid Pylint in recognizing and understanding errors caused when using Flask", "pylint-mccabe": "McCabe complexity checker as a PyLint plugin", "pylint-plugin-utils": "Utilities and helpers for writing Pylint plugins", "pylint-quotes": "Quote consistency checker for PyLint..", "pylitejet": "A library for controlling a LiteJet lighting system.", "pylogbeat": "Simple, incomplete implementation of the Beats protocol used by Elastic Beats and Logstash.", "pylokit": "Python CFFI wrapper for LibreOfficeKit", "pylons": "Pylons Web Framework", "pylons-sphinx-themes": "Sphinx themes for Pylons Project documentation.", "pylons_sphinx_latesturl": "Sphinx extension: generate", "pylookwhat": null, "pyloopenergy": "Access Loop Energy energy monitors via Socket.IO API", "pylru": "A least recently used (LRU) cache implementation", "pylsl": "Python interface to the Lab Streaming Layer", "pyltp": "pyltp: the python extension for LTP", "pylutron": "Python library for Lutron RadioRA 2", "pylutron-caseta": "Provides an API to the Lutron Smartbridge", "pylxd": "python library for lxd", "pylyrics": "Pythonic Implementation of lyrics.wikia.com", "pylzma": "Python bindings for the LZMA library by Igor Pavlov.", "pymacaroons": "Macaroon library for Python", "pymacaroons-pynacl": "Macaroon library for Python", "pymailgunner": "A simple mailgun client - pymailgun fork with Python 3 support", "pymapd": "A DB API 2 compatible client for OmniSci (formerly MapD).", "pymarc": "Read, write and modify MARC bibliographic data", "pymarkdownlint": "Markdown linter written in python. Under active development.", "pymarkovchain": "Simple markov chain implementation", "pymata": "A Python Protocol Abstraction Library For Arduino Firmata", "pymatgen": "Python Materials Genomics is a robust materials analysis code that defines core object representations for structures and molecules with support for many electronic structure codes. It is currently the core analysis code powering the Materials Project (https://www.materialsproject.org).", "pymatgen-db": "Pymatgen-db is a database add-on for the Python Materials Genomics (pymatgen) materials analysis library.", "pymavlink": "Python MAVLink code", "pymbolic": "A package for symbolic computation", "pymc": "Markov Chain Monte Carlo sampling toolkit.", "pymc3": "Probabilistic Programming in Python: Bayesian Modeling and Probabilistic Machine Learning with Theano", "pymdown-extensions": "Extension pack for Python Markdown.", "pymediainfo": "A Python wrapper for the mediainfo library.", "pymediaroom": "Remote control your Mediaroom Set-up-box", "pymemcache": "\"A comprehensive, fast, pure Python memcached client\"", "pymemoize": "Simple memoizing module.", "pymesos": "A pure python implementation of Mesos scheduler and executor", "pymessenger": "Python Wrapper for FB Messenger Bot", "pymeta3": "Pattern-matching language based on OMeta for Python 3 and 2", "pymetno": "A library to communicate with the met.no api", "pymfy": "A Somfy Open API library", "pymi": "Windows Management Infrastructure API for Python.", "pyminifier": "Python code minifier, obfuscator, and compressor", "pymisp": "Python API for MISP.", "pymitter": "Python port of the extended Node.js EventEmitter 2 approach providing namespaces, wildcards and TTL.", "pymitv": "A Python 3 based Xiaomi TV remote", "pymlconf": "Another configuration library using yaml", "pymochad": "A python library for interacting with moch", "pymod2pkg": "python module name to package name map", "pymodbus": "A fully featured modbus protocol stack in python", "pymodm": "PyMODM is a generic ODM on top of PyMongo.", "pymoe": "PyMoe is the only lib you'll ever need if you need the animu or mangu on the Python Platform. It supports AniList, VNDB, Kitsu and AniDB.", "pymollom": "A Python library for the Mollom anti-spam service", "pymongo": "Python driver for MongoDB <http://www.mongodb.org>", "pymonkey": "A tool for applying monkeypatches to python executables.", "pymonoprice": "Python API for talking to Monoprice 6-zone amplifier", "pymorphy": "Morphological analyzer (POS tagger + inflection engine) for Russian and English (+perhaps German) languages.", "pymorphy2": "Morphological analyzer (POS tagger + inflection engine) for Russian language.", "pymorphy2-dicts": "OpenCorpora.org dictionaries pre-compiled for pymorphy2", "pymorphy2-dicts-ru": "Russian dictionaries for pymorphy2", "pymorphy2-dicts-uk": "Ukrainian dictionaries for pymorphy2", "pympler": "A development tool to measure, monitor and analyze the memory behavior of Python objects.", "pymsgbox": "A simple, cross-platform, pure Python module for JavaScript-like message boxes.", "pymssql": "DB-API interface to Microsoft SQL Server for Python. (new Cython-based version)", "pymsteams": "Format messages and post to Microsoft Teams.", "pymultihash": "Python implementation of the multihash specification", "pymummer": "Wrapper for MUMmer", "pymunk": "Pymunk is a easy-to-use pythonic 2d physics library", "pymupdf": "Python bindings for the PDF rendering library MuPDF", "pymusiccast": "This library brings support for         Yamaha MusicCast devices to Home Assistant", "pymvglive": "get live-data from mvg-live.de", "pymyinstall": "Easy installation of modules for data scientists", "pymyq": "Python package for controlling MyQ-Enabled Garage Door", "pymysensors": "Python API for talking to a MySensors gateway", "pymysql": "Pure Python MySQL Driver", "pymysql_sa": "PyMySQL dialect for SQLAlchemy.", "pymystem3": "Python wrapper for the Yandex MyStem 3.1 morpholocial analyzer of the Russian language.", "pymzml": "high-throughput mzML parsing", "pynacl": "Python binding to the Networking and Cryptography (NaCl) library", "pynag": "Python modules for Nagios plugins and configuration", "pynamodb": "A Pythonic Interface to DynamoDB", "pynanoleaf": "A Python3 wrapper for the Nanoleaf API", "pync": "Python Wrapper for Mac OS 10.10 Notification Center", "pynello": "Python library for nello.io intercoms", "pynetconsole": "A pure python implementation of a NetConsole listener", "pynetgear": "Access Netgear routers using their SOAP API", "pynetio": "Binding library for Koukaam netio devices", "pynetworktables": "A pure Python implementation of NetworkTables, used for robot communications in the FIRST Robotics Competition.", "pynewtonmath": "Python 3 wrapper for the Newton math API", "pynginxconfig": "PyNginxConfig - NginX config parser and generator", "pyngus": "Callback API implemented over Proton", "pynipap": "a Python NIPAP client library", "pynisher": "A small Python library to limit the resources used by a function by executing it inside a subprocess.", "pynliner": "Python CSS-to-inline-styles conversion tool for HTML using BeautifulSoup and cssutils", "pynmea2": "Python library for the NMEA 0183 protcol", "pynn": "A Python package for simulator-independent specification of neuronal network models", "pynos": "Brocade NOS Library.", "pynput": "Monitor and control user input devices", "pynsist": "Build NSIS installers for Python applications.", "pynsive": "A Python plugin and module introspection library.", "pynsq": "official Python client library for NSQ", "pynt": "Lightweight Python Build Tool.", "pynt-contrib": "Common pynt tasks.", "pyntc": "Kickoff functions for getting instancs of device objects.", "pynuki": "Python bindings for nuki.io bridges", "pynut2": "A Python abstraction class to access NUT servers.", "pynvim": "Python client to neovim", "pynvrtc": "Python bindings to NVRTC", "pynwb": "Package for working with Neurodata stored in the NWB format", "pynws": "Python library to retrieve observations and forecasts from NWS/NOAA", "pynx584": "NX584/NX8E Interface Library and Server", "pynxos": "A library for managing Cisco NX-OS devices through NX-API.", "pynzb": "pynzb is a unified API for parsing NZB files, with several concrete implementations included", "pynzbgetapi": "Basic Python NZBGet API client.", "pyoai": "The oaipmh module is a Python implementation of an \"Open Archives\nInitiative Protocol for Metadata Harvesting\" (version 2) client and server.\nThe protocol is described here:\n\nhttp://www.openarchives.org/OAI/openarchivesprotocol.html", "pyobihai": "A Python wrapper for Obihai", "pyobjc": "Python<->ObjC Interoperability Module", "pyobjc-core": "Python<->ObjC Interoperability Module", "pyobjc-framework-accounts": "Wrappers for the framework Accounts on macOS", "pyobjc-framework-addressbook": "Wrappers for the framework AddressBook on macOS", "pyobjc-framework-adsupport": "Wrappers for the framework AdSupport on macOS", "pyobjc-framework-applescriptkit": "Wrappers for the framework AppleScriptKit on macOS", "pyobjc-framework-applescriptobjc": "Wrappers for the framework AppleScriptObjC on macOS", "pyobjc-framework-applicationservices": "Wrappers for the framework ApplicationServices on macOS", "pyobjc-framework-authenticationservices": "Wrappers for the framework AuthenticationServices on macOS", "pyobjc-framework-automator": "Wrappers for the framework Automator on macOS", "pyobjc-framework-avfoundation": "Wrappers for the framework AVFoundation on macOS", "pyobjc-framework-avkit": "Wrappers for the framework AVKit on macOS", "pyobjc-framework-businesschat": "Wrappers for the framework BusinessChat on macOS", "pyobjc-framework-calendarstore": "Wrappers for the framework CalendarStore on macOS", "pyobjc-framework-cfnetwork": "Wrappers for the framework CFNetwork on macOS", "pyobjc-framework-cloudkit": "Wrappers for the framework CloudKit on macOS", "pyobjc-framework-cocoa": "Wrappers for the Cocoa frameworks on macOS", "pyobjc-framework-collaboration": "Wrappers for the framework Collaboration on macOS", "pyobjc-framework-colorsync": "Wrappers for the framework ColorSync on Mac OS X", "pyobjc-framework-contacts": "Wrappers for the framework Contacts on macOS", "pyobjc-framework-contactsui": "Wrappers for the framework ContactsUI on macOS", "pyobjc-framework-coreaudio": "Wrappers for the framework CoreAudio on macOS", "pyobjc-framework-coreaudiokit": "Wrappers for the framework CoreAudioKit on macOS", "pyobjc-framework-corebluetooth": "Wrappers for the framework CoreBluetooth on macOS", "pyobjc-framework-coredata": "Wrappers for the framework CoreData on macOS", "pyobjc-framework-corehaptics": "Wrappers for the framework CoreHaptics on macOS", "pyobjc-framework-corelocation": "Wrappers for the framework CoreLocation on macOS", "pyobjc-framework-coremedia": "Wrappers for the framework CoreMedia on macOS", "pyobjc-framework-coremediaio": "Wrappers for the framework CoreMediaIO on macOS", "pyobjc-framework-coreml": "Wrappers for the framework CoreML on macOS", "pyobjc-framework-coremotion": "Wrappers for the framework CoreMotion on macOS", "pyobjc-framework-coreservices": "Wrappers for the framework CoreServices on macOS", "pyobjc-framework-corespotlight": "Wrappers for the framework CoreSpotlight on macOS", "pyobjc-framework-coretext": "Wrappers for the framework CoreText on macOS", "pyobjc-framework-corewlan": "Wrappers for the framework CoreWLAN on macOS", "pyobjc-framework-cryptotokenkit": "Wrappers for the framework CryptoTokenKit on macOS", "pyobjc-framework-devicecheck": "Wrappers for the framework DeviceCheck on macOS", "pyobjc-framework-dictionaryservices": "Wrappers for the framework DictionaryServices on macOS", "pyobjc-framework-discrecording": "Wrappers for the framework DiscRecording on macOS", "pyobjc-framework-discrecordingui": "Wrappers for the framework DiscRecordingUI on macOS", "pyobjc-framework-diskarbitration": "Wrappers for the framework DiskArbitration on macOS", "pyobjc-framework-dvdplayback": "Wrappers for the framework DVDPlayback on macOS", "pyobjc-framework-eventkit": "Wrappers for the framework Accounts on macOS", "pyobjc-framework-exceptionhandling": "Wrappers for the framework ExceptionHandling on macOS", "pyobjc-framework-executionpolicy": "Wrappers for the framework ExecutionPolicy on macOS", "pyobjc-framework-externalaccessory": "Wrappers for the framework ExternalAccessory on macOS", "pyobjc-framework-fileprovider": "Wrappers for the framework FileProvider on macOS", "pyobjc-framework-fileproviderui": "Wrappers for the framework FileProviderUI on macOS", "pyobjc-framework-findersync": "Wrappers for the framework FinderSync on macOS", "pyobjc-framework-fsevents": "Wrappers for the framework FSEvents on macOS", "pyobjc-framework-gamecenter": "Wrappers for the framework GameCenter on macOS", "pyobjc-framework-gamecontroller": "Wrappers for the framework GameController on macOS", "pyobjc-framework-gamekit": "Wrappers for the framework GameKit on macOS", "pyobjc-framework-gameplaykit": "Wrappers for the framework GameplayKit on macOS", "pyobjc-framework-imagecapturecore": "Wrappers for the framework ImageCaptureCore on macOS", "pyobjc-framework-imserviceplugin": "Wrappers for the framework IMServicePlugIn on macOS", "pyobjc-framework-inputmethodkit": "Wrappers for the framework InputMethodKit on macOS", "pyobjc-framework-installerplugins": "Wrappers for the framework InstallerPlugins on macOS", "pyobjc-framework-instantmessage": "Wrappers for the framework InstantMessage on macOS", "pyobjc-framework-intents": "Wrappers for the framework Intents on macOS", "pyobjc-framework-interfacebuilderkit": "Wrappers for the framework InterfaceBuilderKit on macOS", "pyobjc-framework-iosurface": "Wrappers for the framework IOSurface on macOS", "pyobjc-framework-ituneslibrary": "Wrappers for the framework iTunesLibrary on macOS", "pyobjc-framework-latentsemanticmapping": "Wrappers for the framework LatentSemanticMapping on macOS", "pyobjc-framework-launchservices": "Wrappers for the framework LaunchServices on macOS", "pyobjc-framework-libdispatch": "Wrappers for libdispatch on macOS", "pyobjc-framework-linkpresentation": "Wrappers for the framework LinkPresentation on macOS", "pyobjc-framework-localauthentication": "Wrappers for the framework LocalAuthentication on macOS", "pyobjc-framework-mapkit": "Wrappers for the framework MapKit on macOS", "pyobjc-framework-mediaaccessibility": "Wrappers for the framework MediaAccessibility on macOS", "pyobjc-framework-medialibrary": "Wrappers for the framework MediaLibrary on macOS", "pyobjc-framework-mediaplayer": "Wrappers for the framework MediaPlayer on macOS", "pyobjc-framework-mediatoolbox": "Wrappers for the framework MediaToolbox on macOS", "pyobjc-framework-message": "Wrappers for the framework Message on macOS", "pyobjc-framework-metalkit": "Wrappers for the framework MetalKit on macOS", "pyobjc-framework-modelio": "Wrappers for the framework ModelIO on macOS", "pyobjc-framework-multipeerconnectivity": "Wrappers for the framework MultipeerConnectivity on macOS", "pyobjc-framework-naturallanguage": "Wrappers for the framework NaturalLanguage on macOS", "pyobjc-framework-netfs": "Wrappers for the framework NetFS on macOS", "pyobjc-framework-network": "Wrappers for the framework Network on macOS", "pyobjc-framework-networkextension": "Wrappers for the framework NetworkExtension on macOS", "pyobjc-framework-notificationcenter": "Wrappers for the framework NotificationCenter on macOS", "pyobjc-framework-opendirectory": "Wrappers for the framework OpenDirectory on macOS", "pyobjc-framework-osakit": "Wrappers for the framework OSAKit on macOS", "pyobjc-framework-oslog": "Wrappers for the framework OSLog on macOS", "pyobjc-framework-pencilkit": "Wrappers for the framework PencilKit on macOS", "pyobjc-framework-photos": "Wrappers for the framework Photos on macOS", "pyobjc-framework-photosui": "Wrappers for the framework PhotosUI on macOS", "pyobjc-framework-preferencepanes": "Wrappers for the framework PreferencePanes on macOS", "pyobjc-framework-pubsub": "Wrappers for the framework PubSub on macOS", "pyobjc-framework-pushkit": "Wrappers for the framework PushKit on macOS", "pyobjc-framework-qtkit": "Wrappers for the framework QTKit on macOS", "pyobjc-framework-quartz": "Wrappers for the Quartz frameworks on macOS", "pyobjc-framework-quicklookthumbnailing": "Wrappers for the framework QuickLookThumbnailing on macOS", "pyobjc-framework-safariservices": "Wrappers for the framework SafariServices on macOS", "pyobjc-framework-scenekit": "Wrappers for the framework SceneKit on macOS", "pyobjc-framework-screensaver": "Wrappers for the framework ScreenSaver on macOS", "pyobjc-framework-scriptingbridge": "Wrappers for the framework ScriptingBridge on macOS", "pyobjc-framework-searchkit": "Wrappers for the framework SearchKit on macOS", "pyobjc-framework-security": "Wrappers for the framework Security on macOS", "pyobjc-framework-securityfoundation": "Wrappers for the framework SecurityFoundation on macOS", "pyobjc-framework-securityinterface": "Wrappers for the framework SecurityInterface on macOS", "pyobjc-framework-servernotification": "Wrappers for the framework ServerNotification on macOS", "pyobjc-framework-servicemanagement": "Wrappers for the framework ServiceManagement on macOS", "pyobjc-framework-social": "Wrappers for the framework Social on macOS", "pyobjc-framework-soundanalysis": "Wrappers for the framework SoundAnalysis on macOS", "pyobjc-framework-speech": "Wrappers for the framework Speech on macOS", "pyobjc-framework-spritekit": "Wrappers for the framework SpriteKit on macOS", "pyobjc-framework-storekit": "Wrappers for the framework StoreKit on macOS", "pyobjc-framework-syncservices": "Wrappers for the framework SyncServices on macOS", "pyobjc-framework-systemconfiguration": "Wrappers for the framework SystemConfiguration on macOS", "pyobjc-framework-systemextensions": "Wrappers for the framework SystemExtensions on macOS", "pyobjc-framework-usernotifications": "Wrappers for the framework UserNotifications on macOS", "pyobjc-framework-videosubscriberaccount": "Wrappers for the framework VideoSubscriberAccount on macOS", "pyobjc-framework-videotoolbox": "Wrappers for the framework VideoToolbox on macOS", "pyobjc-framework-vision": "Wrappers for the framework Vision on macOS", "pyobjc-framework-webkit": "Wrappers for the framework WebKit on macOS", "pyobjc-framework-xgridfoundation": "Wrappers for the framework XgridFoundation on macOS", "pyocclient": "Python client library for ownCloud", "pyocd": "Cortex-M debugger for Python", "pyocr": "A Python wrapper for OCR engines (Tesseract, Cuneiform, etc)", "pyodbc": "DB API Module for ODBC", "pyoembed": "A Python library for oEmbed that supports auto-discovered and manually included providers.", "pyombi": "A python module to retrieve information from Ombi.", "pyomo": "Pyomo: Python Optimization Modeling Objects", "pyone": "Python Bindings for OpenNebula XML-RPC API", "pyopencl": "Python wrapper for OpenCL", "pyopengl": "Standard OpenGL bindings for Python", "pyopengl-accelerate": "Acceleration code for PyOpenGL", "pyopenssl": "Python wrapper module around the OpenSSL library", "pyopenuv": "A simple Python API data from openuv.io", "pyoppleio": "Python library for interfacing with opple mobile control light", "pyorbital": "Orbital parameters and astronomical computations in Python", "pyorient": "OrientDB native client library", "pyosc": "Simple OpenSoundControl module in Pure Python", "pyota": "IOTA API library for Python", "pyotgw": "A library to interface with the opentherm gateway through serial or network connection.", "pyotp": "Python One Time Password Library", "pyowlet": "Python client for Owlet monitors", "pyowm": "A Python wrapper around OpenWeatherMap web APIs", "pypandoc": "Thin wrapper for pandoc.", "pyparseuri": "PyParseURI - allows you to parse URIs easily", "pyparsing": "Python parsing module", "pyparted": "Python bindings for GNU parted", "pypca": "A python cli for PCA 301 smart plugs.", "pypcap": "pypcap -- Python interface to pcap a packet capture library", "pypck": "LCN-PCK library", "pypd": "A python client for PagerDuty API", "pypdf": "PDF toolkit", "pypdf2": "PDF toolkit", "pypdfocr": "Converts a scanned PDF into an OCR'ed pdf using Tesseract-OCR and Ghostscript", "pypdftk": "Python wrapper for PDFTK", "pypdns": "Python API for PDNS.", "pypeg2": "An intrinsic PEG Parser-Interpreter for Python", "pypeline": "Easy rendering of markup languages", "pyperclip": "A cross-platform clipboard module for Python. (Only handles plain text for now.)", "pyphen": "Pure Python module to hyphenate text", "pypi-publisher": "A cli for publishing packages to pypi, without the hassle", "pypika": "A SQL query builder API for Python", "pyping": "A pure python ICMP ping implementation using raw sockets", "pypinyin": "\u6c49\u5b57\u62fc\u97f3\u8f6c\u6362\u6a21\u5757/\u5de5\u5177.", "pypiserver": "A minimal PyPI server for use with pip/easy_install.", "pypitools": "pypitools helps you with various pypi tasks", "pypiwin32": "", "pypjlink2": "PJLink is a standard for controlling data projectors.", "pypluribus": "Python API to interact with Pluribus devices", "pypng": "Pure Python PNG image encoder/decoder", "pypoint": "API for Minut Point", "pypollencom": "A simple API for Pollen.com data", "pypolyline": "Fast Google Polyline encoding and decoding using Rust FFI", "pypom": "python page object model for selenium", "pypowervm": "Python binding for the PowerVM REST API", "pyppeteer": "Headless chrome/chromium automation library (unofficial port of puppeteer)", "pyprind": "Python Progress Bar and Percent Indicator Utility", "pyprint": "A library providing printing facilities for python applications.", "pyprof2calltree": "Help visualize profiling data from cProfile with kcachegrind and qcachegrind", "pyproj": "Python interface to PROJ (cartographic projections and coordinate transformations library)", "pyps4-2ndscreen": "PS4 2nd Screen Python Library", "pyps4-homeassistant": "PS4 2nd Screen Python Library", "pypsrp": "PowerShell Remoting Protocol and WinRM for Python", "pypssl": "Python API for PSSL.", "pyptlib": "A python implementation of the Pluggable Transports for Circumvention specification for Tor", "pypubsub": "Python Publish-Subscribe Package", "pypugjs": "PugJS syntax template adapter for Django, Jinja2, Mako and Tornado templates", "pypuppetdb": "Library for working with the PuppetDB REST API.", "pypyodbc": "PyPyODBC - A Pure Python ODBC module by ctypes", "pypytools": "A collection of useful tools to use PyPy-specific features, with CPython fallbacks", "pyqcy": "QuickCheck-like testing framework for Python", "pyqrcode": "A QR code generator written purely in Python with SVG, EPS, PNG and terminal output.", "pyqt-distutils": "A set of distutils extension for building Qt ui files", "pyqt4": "Python bindings for the Qt cross platform GUI toolkit", "pyqt5": "Python bindings for the Qt cross platform application toolkit", "pyqt5-sip": "The sip module support for PyQt5", "pyqt5-stubs": "PEP561 stub files for the PyQt5 framework", "pyqt5-tools": "Tools to supplement the official PyQt5 wheels", "pyqtchart": "Python bindings for the Qt Charts library", "pyqtgraph": "Scientific Graphics and GUI Library for Python", "pyqtwebengine": "Python bindings for the Qt WebEngine framework", "pyquaternion": "A fully featured, pythonic library for representing and using quaternions.", "pyquery": "A jquery-like library for python", "pyquickhelper": "Various functionalities: folder synchronization, simple logging function, helpers to generate documentation with sphinx, sphinx extension, to run a command line, to run a notebook...", "pyquil": "A Python library to generate Quantum Instruction Language (Quil) Programs.", "pyqwikswitch": "Library to interface Qwikswitch USB Hub", "pyrabbit": "A Pythonic interface to the RabbitMQ Management HTTP API", "pyrad": "RADIUS tools", "pyrail": "Python wrapper for the iRail API", "pyrainbird": "Rain Bird Controller", "pyramid": "The Pyramid Web Framework, a Pylons project", "pyramid-debugtoolbar": "A package which provides an interactive HTML debugger for Pyramid application development", "pyramid-jinja2": "Jinja2 template bindings for the Pyramid web framework", "pyramid-mako": "Mako template bindings for the Pyramid web framework", "pyramid-retry": "An execution policy for Pyramid that supports retrying requests after certain failure exceptions.", "pyramid-services": "A service layer abstraction for the Pyramid Web Framework.", "pyramid-tm": "A package which allows Pyramid requests to join the active transaction", "pyramid-zcml": "Zope Config Markup Language support for Pyramid", "pyramid_assetgen": "Integrate Assetgen with the Pyramid framework.", "pyramid_beaker": "Beaker session factory backend for Pyramid", "pyramid_chameleon": "pyramid_chameleon", "pyramid_deform": "Bindings to the Deform form library for the Pyramid web framework", "pyramid_fas_openid": "A view for pyramid that functions as an OpenID consumer.", "pyramid_iprestrict": "IP based restriction tween for pyramid", "pyramid_mailer": "Sendmail package for Pyramid", "pyramid_multiauth": "pyramid_multiauth", "pyramid_redis_sessions": "Pyramid web framework session factory backed by Redis", "pyramid_simpleform": "pyramid_simpleform", "pyramid_webassets": "pyramid_webassets", "pyramid_zodbconn": "Provide integration betwen Pyramid and ZODB", "pyrax": "Python language bindings for OpenStack Clouds.", "pyre-check": "A performant type checker for Python", "pyreact": "Python bridge to JSX & the React JavaScript library.", "pyreadline": "A python implmementation of GNU readline.", "pyreadstat": "Reads and Writes SAS, SPSS and Stata files into/from pandas data frames.", "pyrebase": "A simple python wrapper for the Firebase API", "pyrebase4": "A simple python wrapper for the Firebase API with current deps", "pyrecswitch": "A pure-python interface for controlling Ankuoo RecSwitch MS6126", "pyrect": "PyRect is a simple module with a Rect class for Pygame-like rectangular areas.", "pyregion": "python parser for ds9 region files", "pyrelic": "Python API Wrapper for NewRelic API", "pyremotevbox": "Python API to talk to a remote VirtualBox using VirtualBox WebService", "pyrender": "Easy-to-use Python renderer for 3D visualization", "pyrepetier": "Repetier Server API library", "pyrepl": "A library for building flexible command line interfaces", "pyres": "Python resque clone", "pyresample": "Geospatial image resampling in Python", "pyrestful": "A simple and useful Restful API for Tornado Web Server", "pyresttest": "Python RESTful API Testing & Microbenchmarking Tool", "pyrex": "Language for writing Python extension modules", "pyrfc3339": "Generate and parse RFC 3339 timestamps", "pyrfr": "", "pyrfxtrx": "a library to communicate with the RFXtrx family of devices", "pyric": "Python Wireless Library", "pyrmvtransport": "Define module-level imports.", "pyro": "distributed object middleware for Python (IPC/RPC), version 3.x", "pyro-ppl": "A Python library for probabilistic modeling and inference", "pyro4": "distributed object middleware for Python (RPC)", "pyrogram": "Telegram MTProto API Client Library and Framework for Python", "pyroma": "Test your project's packaging friendliness", "pyrouge": "A Python wrapper for the ROUGE summarization evaluation package.", "pyroute2": "Python Netlink library", "pyrr": "3D mathematical functions using NumPy", "pyrrd": "An Object-Oriented Python Interface for RRDTool", "pyrserve": "A Python client to remotely access the R statistic package via network", "pyrsistent": "Persistent/Functional/Immutable data structures", "pyrss2gen": "Generate RSS2 using a Python data structure", "pyrtf": "PyRTF - Rich Text Format Document Generation", "pyruter": "", "pyrxp": "Python RXP interface - fast validating XML parser", "pysabnzbd": "Python wrapper for SABnzbd API", "pysaj": "Library to communicate with SAJ inverters", "pysal": "A library of spatial analysis functions.", "pysaliency": "python library to develop, evaluate and benchmark saliency models", "pysam": "pysam", "pysaml2": "Python implementation of SAML Version 2 Standard", "pysc2": "Starcraft II environment and library for training agents.", "pyscaffold": "Template tool for putting up the scaffold of a Python project", "pyscard": "Smartcard module for Python.", "pyscreenshot": "python screenshot", "pyscreeze": "A simple, cross-platform screenshot module for Python 2 and 3.", "pyscroll": "Fast scrolling maps library for pygame and python 2.7 & 3.3+", "pyscrypt": "Pure-Python Implementation of the scrypt password-based key derivation function and scrypt file format library", "pyscss": "pyScss, a Scss compiler for Python", "pysdcp": "SDCP library to control Sony Projectors", "pysdl2": "Python SDL2 bindings", "pysendfile": "A Python interface to sendfile(2)", "pysensibo": "asyncio-friendly python API for Sensibo", "pysensors": "Python bindings to libsensors (via ctypes)", "pysensu-yelp": "Emits Yelp-flavored Sensu events to a Sensu Client", "pyserial": "Python Serial Port Extension", "pyserial-asyncio": "Python Serial Port Extension - Asynchronous I/O support", "pysesame": "Python API for Sesame smart locks", "pysesame2": "Python API for Sesame Smartlock made by CANDY HOUSE, Inc.", "pysftp": "A friendly face on SFTP", "pysha3": "SHA-3 (Keccak) for Python 2.7 - 3.5", "pyshark": "Python wrapper for tshark, allowing python packet parsing using wireshark dissectors", "pysher": "Pusher websocket client for python, based on Erik Kulyk's PythonPusherClient", "pyshorteners": "A Python lib to consume the most used shorteners APIs", "pyshp": "Pure Python read/write support for ESRI Shapefile format", "pyside": "Python bindings for the Qt cross-platform application and UI framework", "pyside2": "Python bindings for the Qt cross-platform application and UI framework", "pysimplegui": "GUI SDK Launched in 2018 Actively developed and supported. Super-simple to create custom GUI's.  Python 2.7 & 3 Support. 200 Demo programs & Cookbook for rapid start. Extensive documentation. Examples using Machine Learning(GUI, OpenCV Integration,  Chatterbot), Rainmeter Style Floating Desktop Widgets, Matplotlib + Pyplot integration, add GUI to command line scripts, PDF & Image Viewer. Great for beginners as well as advanced GUI programmers", "pysimplesoap": "Python simple and lightweight SOAP Library (master branch)", "pyslack": "Slack API Client", "pysma": "Library to interface an SMA Solar WebConnect module", "pysmartapp": "A python library for building a SmartThings SmartApp", "pysmartdl": "A Smart Download Manager for Python", "pysmartthings": "A python library for interacting with the SmartThings cloud API build with asyncio and aiohttp.", "pysmarty": "Python API for Salda Smarty Modbus TCP", "pysmb": "pysmb is an experimental SMB/CIFS library written in Python to support file sharing between Windows and Linux machines", "pysmbc": "Python bindings for libsmbclient", "pysmbclient": "A convenient smbclient wrapper", "pysmi": "SNMP SMI/MIB Parser", "pysnmp": "SNMP library for Python", "pysnmp-apps": "SNMP command-line tools", "pysnmp-mibs": "A collection of IETF & IANA MIBs pre-compiled for PySNMP", "pysnooper": "A poor man's debugger for Python.", "pysocks": "A Python SOCKS client module. See https://github.com/Anorov/PySocks for more information.", "pysodium": "python libsodium wrapper", "pysolar": "Collection of Python libraries for simulating the irradiation of any point on earth by the sun", "pysolr": "Lightweight python wrapper for Apache Solr.", "pysoma": "A simple package for controlling SOMA devices", "pysonos": "A SoCo fork with fixes for Home Assistant.", "pysoundfile": "An audio library based on libsndfile, CFFI and NumPy", "pyspark": "Apache Spark Python API", "pyspatialite": "DB-API 2.0 interface for SQLite 3.x with Spatialite 2.x", "pyspcwebgw": "A Python library for communicating with SPC Web Gateway.", "pyspelling": "Spell checker.", "pyspf": "SPF (Sender Policy Framework) implemented in Python.", "pysphere": "Python API for interacting with the vSphere Web Services SDK", "pyspider": "A Powerful Spider System in Python", "pyspotify": "Python wrapper for libspotify", "pyspotlight": "Python interface to the DBpedia Spotlight REST API", "pysqlcipher": "DB-API 2.0 interface for SQLCIPHER 3.x", "pysqlcipher3": "DB-API 2.0 interface for SQLCIPHER 3.x", "pysqlite": "DB-API 2.0 interface for SQLite 3.x", "pysqlite3": "DB-API 2.0 interface for Sqlite 3.x", "pysrt": "SubRip (.srt) subtitle parser and writer", "pystache": "Mustache for Python", "pystachio": "type-checked dictionary templating library", "pystan": "Python interface to Stan, a package for Bayesian inference", "pystaticconfiguration": "A python library for loading static configuration", "pystatsd": "pystatsd is a client for Etsy's statsd server, a front end/proxy for the Graphite stats collection and graphing server.", "pystatuschecker": "A very simple package for checking the status of a service and its components", "pystemmer": "Snowball stemming algorithms, for information retrieval", "pystiebeleltron": "Python API for interacting with the Stiebel Eltron ISG web gateway via Modbus for controlling integral ventilation units and heat pumps.", "pystmark": "A Python library for the Postmark API (http://developer.postmarkapp.com/).", "pystride": "Python client for Atlassian Stride", "pystun": "A Python STUN client for getting NAT type and external IP (RFC 3489)", "pystun-patched-for-raiden": "A Python STUN client for getting NAT type and external IP (RFC 3489)", "pysubnettree": "", "pysuez": "Get your water consumption data from your Suez account (www.toutsurmoneau.fr)", "pysupla": "Simple Supla's OpenAPI wrapper", "pyswitchbot": "A library to communicate with Switchbot", "pyswitchmate": "A library to communicate with Switchmate", "pysyncthru": "Automated JSON API based communication with Samsung SyncThru Web Service", "pytablereader": "pytablereader is a Python library to load structured table data from files/strings/URL with various data format: CSV / Excel / Google-Sheets / HTML / JSON / LDJSON / LTSV / Markdown / SQLite / TSV.", "pytablewriter": "pytablewriter is a Python library to write a table in various formats: CSV / Elasticsearch / HTML / JavaScript / JSON / LaTeX / LDJSON / LTSV / Markdown / MediaWiki / NumPy / Excel / Pandas / Python / reStructuredText / SQLite / TOML / TSV.", "pytagcloud": "Create beautiful tag clouds as images or HTML", "pytaglib": "cross-platform, Python 2.x/3.x audio metadata (\"tagging\") library based on TagLib", "pytango": "A python binding for the Tango control system", "pytautulli": "", "pytdx": "A Python Interface to TDX protocol", "pyte": "Simple VTXXX-compatible terminal emulator.", "pytelegrambotapi": "Python Telegram bot api.", "pyteleloisirs": "Get TV program data from teleloisirs", "pyteomics": "A framework for proteomics data analysis.", "pytesla": "Python bindings to the Model S REST API", "pytesseract": "Python-tesseract is a python wrapper for Google's Tesseract-OCR", "pytest": "pytest: simple powerful testing with Python", "pytest-aiofiles": "pytest fixtures for writing aiofiles tests with pyfakefs", "pytest-aiohttp": "pytest plugin for aiohttp support", "pytest-allure-adaptor": "Plugin for py.test to generate allure xml reports", "pytest-arraydiff": "pytest plugin to help with comparing array output from tests", "pytest-astropy": "Meta-package containing dependencies for testing", "pytest-asyncio": "Pytest support for asyncio.", "pytest-attrib": "pytest plugin to select tests based on attributes similar to the nose-attrib plugin", "pytest-azurepipelines42": "Formatting PyTest output for Azure Pipelines UI", "pytest-base-url": "pytest plugin for URL based testing", "pytest-bdd": "BDD for pytest", "pytest-benchmark": "A ``pytest`` fixture for benchmarking code. It will group the tests into rounds that are calibrated to the chosen timer. See calibration_ and FAQ_.", "pytest-black": "A pytest plugin to enable format checking with black", "pytest-cache": "pytest plugin with mechanisms for caching across test runs", "pytest-capturelog": "py.test plugin to capture log messages", "pytest-catchlog": "py.test plugin to catch log messages. This is a fork of pytest-capturelog.", "pytest-codestyle": "pytest plugin to run pycodestyle", "pytest-console-scripts": "Pytest plugin for testing console scripts", "pytest-cookies": "The pytest plugin for your Cookiecutter templates. \ud83c\udf6a", "pytest-cov": "Pytest plugin for measuring coverage.", "pytest-cover": "Pytest plugin for measuring coverage. Forked from `pytest-cov`.", "pytest-coverage": "", "pytest-dash": "pytest fixtures to run dash applications.", "pytest-datadir": "pytest plugin for test data directories and files", "pytest-datafiles": "py.test plugin to create a 'tmpdir' containing predefined files/directories.", "pytest-dbfixtures": "Databases fixtures plugin for py.test.", "pytest-dependency": "Manage dependencies of tests", "pytest-describe": "Describe-style plugin for pytest", "pytest-django": "A Django plugin for pytest.", "pytest-django-queries": "Generate performance reports from your django database performance tests.", "pytest-docker-pexpect": "pytest plugin for writing functional tests with pexpect and docker", "pytest-docstyle": "pytest plugin to run pydocstyle", "pytest-doctestplus": "Pytest plugin with advanced doctest features.", "pytest-dotenv": "A py.test plugin that parses environment files before running tests", "pytest-drop-dup-tests": "A Pytest plugin to drop duplicated tests during collection", "pytest-echo": "pytest plugin with mechanisms for echoing environment variables, package version and generic attributes", "pytest-env": "py.test plugin that allows you to add environment variables.", "pytest-error-for-skips": "Pytest plugin to treat skipped tests a test failure", "pytest-expecter": "Better testing with expecter and pytest.", "pytest-factoryboy": "Factory Boy support for pytest.", "pytest-faker": "Faker integration with the pytest framework.", "pytest-falcon": "Pytest helpers for Falcon.", "pytest-faulthandler": "py.test plugin that activates the fault handler module for tests (dummy package)", "pytest-flake8": "pytest plugin to check FLAKE8 requirements", "pytest-flakes": "pytest plugin to check source code with pyflakes", "pytest-flask": "A set of py.test fixtures to test Flask applications.", "pytest-forked": "run tests in isolated forked subprocesses", "pytest-freezegun": "Wrap tests with fixtures in freeze_time", "pytest-fxa": "pytest plugin for Firefox Accounts", "pytest-helpers-namespace": "PyTest Helpers Namespace", "pytest-html": "pytest plugin for generating HTML reports", "pytest-httpbin": "Easily test your HTTP library against a local copy of httpbin", "pytest-instafail": "py.test plugin to show failures instantly", "pytest-invenio": "Pytest fixtures for Invenio.", "pytest-ipdb": "A py.test plug-in to enable drop to ipdb debugger on test failure.", "pytest-isort": "py.test plugin to check import ordering using isort", "pytest-json": "Generate JSON test reports", "pytest-lazy-fixture": "It helps to use fixtures in pytest.mark.parametrize", "pytest-localserver": "py.test plugin to test server connections locally.", "pytest-logbook": "py.test plugin to capture logbook log messages", "pytest-logging": "Configures logging and allows tweaking the log level with a py.test flag", "pytest-mccabe": "pytest plugin to run the mccabe code complexity checker.", "pytest-metadata": "pytest plugin for test session metadata", "pytest-mock": "Thin-wrapper around the mock package for easier use with py.test", "pytest-mozwebqa": "Mozilla WebQA plugin for py.test.", "pytest-mpl": "pytest plugin to help with testing figures output from Matplotlib", "pytest-mypy": "Mypy static type checker plugin for Pytest", "pytest-openfiles": "Pytest plugin for detecting inadvertent open file handles", "pytest-ordering": "pytest plugin to run your tests in a specific order", "pytest-pep8": "pytest plugin to check PEP8 requirements", "pytest-postgresql": "Postgresql fixtures and fixture factories for Pytest.", "pytest-profiling": "Profiling plugin for py.test", "pytest-pudb": "Pytest PuDB debugger integration", "pytest-pycharm": "Plugin for py.test to enter PyCharm debugger on uncaught exceptions", "pytest-pycodestyle": "pytest plugin to run pycodestyle", "pytest-pylint": "pytest plugin to check source code with pylint", "pytest-pypi": "Easily test your HTTP library against a local copy of pypi", "pytest-pythonpath": "pytest plugin for adding to the PYTHONPATH from command line or configs.", "pytest-qt": "pytest support for PyQt and PySide applications", "pytest-random": "py.test plugin to randomize tests", "pytest-random-order": "Randomise the order in which pytest tests are run with some control over the randomness", "pytest-randomly": "Pytest plugin to randomly order tests and control random.seed.", "pytest-remotedata": "Pytest plugin for controlling remote data access.", "pytest-reorder": "Reorder tests depending on their paths and names.", "pytest-repeat": "pytest plugin for repeating tests", "pytest-reqs": "pytest plugin to check pinned requirements", "pytest-rerunfailures": "pytest plugin to re-run tests to eliminate flaky failures", "pytest-runner": "Invoke py.test as distutils command with dependency resolution", "pytest-salt": "Pytest Salt Plugin", "pytest-sanic": "a pytest plugin for Sanic", "pytest-selenium": "pytest plugin for Selenium", "pytest-services": "Services plugin for pytest testing framework", "pytest-socket": "Pytest Plugin to disable socket calls during tests", "pytest-spec": "pytest plugin to display test execution output like a SPECIFICATION", "pytest-splinter": "Splinter plugin for pytest testing framework", "pytest-sugar": "pytest-sugar is a plugin for pytest that changes the default look and feel of pytest (e.g. progressbar, show tests that fail instantly).", "pytest-tap": "Test Anything Protocol (TAP) reporting plugin for pytest", "pytest-tempdir": "Predictable and repeatable tempdir support.", "pytest-testmon": "selects tests affected by changed files and methods", "pytest-timeout": "py.test plugin to abort hanging tests", "pytest-tornado": "A py.test plugin providing fixtures and markers to simplify testing of asynchronous tornado applications.", "pytest-travis-fold": "Folds captured output sections in Travis CI build log", "pytest-trio": "Pytest plugin for trio", "pytest-twisted": "A twisted plugin for py.test.", "pytest-variables": "pytest plugin for providing variables to tests/fixtures", "pytest-vcr": "Plugin for managing VCR.py cassettes", "pytest-virtualenv": "Virtualenv fixture for py.test", "pytest-warnings": "pytest plugin to list Python warnings in pytest report", "pytest-watch": "Local continuous test runner with pytest and watchdog.", "pytest-xdist": "pytest xdist plugin for distributed testing and loop-on-failing modes", "pytest-xvfb": "A pytest plugin to run Xvfb for tests.", "pytfiac": "API for Tfiac AC", "pyth": "Python text markup and conversion", "pythainlp": "Thai Natural Language Processing library", "pythinkingcleaner": "Library to control ThinkingCleaner devices", "python": "A high-level object-oriented programming language", "python-aalib": "interface to AAlib", "python-acapela": "Python Acapela Text-To-Speech", "python-aiml": "An interpreter package for AIML, the Artificial Intelligence Markup Language", "python-alipay-sdk": "Python SDK for AliPay, RSA is the only sign method we support", "python-amazon-product-api": "A Python wrapper for the Amazon Product Advertising API.", "python-amazon-simple-product-api": "A simple Python wrapper for the Amazon.com Product Advertising API", "python-apt": "Python bindings for libapt.", "python-arango": "Python Driver for ArangoDB", "python-augeas": "Python bindings for Augeas", "python-axolotl": "Python port of libaxolotl-android, originally written by Moxie Marlinspik", "python-axolotl-curve25519": "curve25519 with ed25519 signatures, used by libaxolotl", "python-babel": "The compiler for next generation Python.", "python-barbicanclient": "Client Library for OpenStack Barbican Key Management API", "python-barcode": "Create standard barcodes with Python. No external modules needed. (optional Pillow support included).", "python-bcrypt": "Blowfish password hashing", "python-bidi": "Pure python implementation of the BiDi layout algorithm", "python-binance": "Binance REST API python implementation", "python-binary-memcached": "A pure python module to access memcached via its binary protocol with SASL auth support", "python-bioformats": "Read and write life sciences file formats", "python-bitcoinlib": "The Swiss Army Knife of the Bitcoin protocol.", "python-bitcoinrpc": "Enhanced version of python-jsonrpc for use with Bitcoin", "python-bittrex": "Python bindings for bittrex API.", "python-blockchain-api": "Python API for interacting with blockchain.info.", "python-box": "Advanced Python dictionaries with dot notation access", "python-bugzilla": "Bugzilla XMLRPC access module", "python-build": "Tool to download and build python based upon pyenv.", "python-card-me": "UNKNOWN", "python-cas": "Python CAS client library", "python-catcher": "Beautiful stack traces for Python", "python-ceilometerclient": "OpenStack Telemetry API Client Library", "python-chart": "Python Chart Generator", "python-chess": "A pure Python chess library with move generation and validation, Polyglot opening book probing, PGN reading and writing, Gaviota tablebase probing, Syzygy tablebase probing and XBoard/UCI engine communication.", "python-cinderclient": "OpenStack Block Storage API Client Library", "python-cjson": "Fast JSON encoder/decoder for Python", "python-clementine-remote": "Python library and CLI for the Clementine Music Player remote protocol.", "python-cloudfiles": "CloudFiles client library for Python", "python-congressclient": "Client for Congress", "python-constraint": "python-constraint is a module implementing support for handling CSPs (Constraint Solving Problems) over finite domain", "python-consul": "Python client for Consul (http://www.consul.io/)", "python-coveralls": "Python interface to coveralls.io API\n", "python-creole": "python-creole is an open-source (GPL) markup converter in pure Python for: creole2html, html2creole, html2ReSt, html2textile", "python-crfsuite": "Python binding for CRFsuite", "python-crontab": "Python Crontab API", "python-cueclient": "Message Broker Provisioning Service Cue Client", "python-daemon": "Library to implement a well-behaved Unix daemon process.", "python-dateutil": "Extensions to the standard Python datetime module", "python-ddp": "An event driven ddp client", "python-debian": "Debian package related modules", "python-debianbts": "Python interface to Debian's Bug Tracking System", "python-decouple": "Strict separation of settings from code.", "python-designateclient": "OpenStack DNS-as-a-Service - Client", "python-digest": "A Python library to aid in implementing HTTP Digest Authentication.", "python-digitalocean": "digitalocean.com API to manage Droplets and Images", "python-dockercloud": "Python Library for Dockercloud", "python-docs-theme": "The Sphinx theme for the CPython docs and related projects", "python-docx": "Create and update Microsoft Word .docx files.", "python-dotenv": "Add .env support to your django/flask apps in development and deployments", "python-dracclient": "Library for managing machines with Dell iDRAC cards", "python-easyconfig": "A simple library for loading configurations easily in Python, inspired by `flask.config`.", "python-ecobee-api": "Python API for talking to Ecobee thermostats", "python-editor": "Programmatically open an editor, capture the result.", "python-engineio": "Engine.IO server", "python-env": "Get and Set environment variables using .env file", "python-escpos": "Python library to manipulate ESC/POS Printers", "python-etcd": "A python client for etcd", "python-etherscan-api": "Python API for interacting with etherscan.io.", "python-evtx": "Pure Python parser for recent Windows event log files (.evtx).", "python-exconsole": "Emergency/postmortem Python console", "python-family-hub-local": "Python API for accessing information from Samsung FamilyHub fridges locally.", "python-fedora": "Python modules for interacting with Fedora Services", "python-firebase": "Python interface to the Firebase's REST API.", "python-flot-utils": "Makes it easy to convert Python data structures to JSON strings suitable for flot series and options", "python-forecastio": "A thin Python Wrapper for the Dark Sky (formerly Forecast.io) weather API", "python-freezerclient": "OpenStack Disaster Recovery API Client Library", "python-frontmatter": "Parse and manage posts with YAML (or other) frontmatter", "python-fuelclient": "Command line interface and Python API wrapper for Fuel.", "python-gc100": "A Python-based socket client for Global Cache GC100 digital I/O interface", "python-gcm": "Python client for Google Cloud Messaging for Android (GCM)", "python-genomespaceclient": "Python bindings and commandline client to the GenomeSpace API", "python-geohash": "Fast, accurate python geohashing library", "python-geoip": "Provides GeoIP functionality for Python.", "python-geoip-geolite2": "Provides access to the geolite2 database.  This product includes GeoLite2 data created by MaxMind, available from http://www.maxmind.com/", "python-gettext": "Python Gettext po to mo file compiler.", "python-gflags": "Obsolete. Please migrate to absl-py instead.", "python-gilt": "gilt - A GIT layering tool.", "python-gitlab": "Interact with GitLab API", "python-glanceclient": "OpenStack Image API Client Library", "python-glareclient": "OpenStack Artifact API Client Library", "python-gmaps": "Google Maps API client", "python-gnupg": "A wrapper for the Gnu Privacy Guard (GPG or GnuPG)", "python-google-places": "A simple wrapper around the Google Places API.", "python-google-spreadsheet": "A simple Python wrapper for the Google Spreadsheets API", "python-googleanalytics": "A python library for talking to the Google Analytics API", "python-googlegeocoder": "A simple Python wrapper for version three of Google's geocoder API", "python-graph-core": "A library for working with graphs in Python", "python-graph-dot": "https://github.com/pmatiello/python-graph", "python-gssapi": "An object-oriented interface to GSSAPI for Python", "python-heatclient": "OpenStack Orchestration API Client Library", "python-hglib": "Mercurial Python library", "python-hkp": "Python HKP client", "python-hnvclient": "Python client for the HNV (Hyper-V Network Virtualization) REST API.", "python-hoiio": "A python module for Hoiio REST API", "python-hostlist": "Python module for hostlist handling", "python-hpilo": "iLO automation from python or shell", "python-http-client": "HTTP REST client, simplified for Python", "python-hue": "Python client for Philips Hue", "python-igraph": "High performance graph data structures and algorithms", "python-inotify": "Interface to Linux inotify subsystem", "python-instagram": "Instagram API client", "python-intercom": "Intercom API wrapper", "python-interface": "Pythonic Interface definitions", "python-iptables": "Python bindings for iptables", "python-ironic-inspector-client": "Python client for Ironic Inspector", "python-ironicclient": "OpenStack Bare Metal Provisioning API Client Library", "python-izone": "A python interface to the iZone airconditioner controller", "python-jenkins": "Python bindings for the remote Jenkins API", "python-join-api": "Python API for interacting with Join by joaoapps.", "python-jose": "JOSE implementation in Python", "python-jose-cryptodome": "JOSE implementation in Python using pycryptodome", "python-json-logger": "A python library adding a json log formatter", "python-jsonrpc": "Python JSON-RPC Client Server Library - Simple To Use Python JSONRPC-Library", "python-jsonrpc-server": "JSON RPC 2.0 server library", "python-juicenet": "Read and control Juicenet/Juicepoint/Juicebox based EVSE devices", "python-jwt": "Module for generating and verifying JSON Web Tokens", "python-k8sclient": "This is Kubernetes API python client code. This code is generated by swagger-codegen. Kubernetes provide swagger-spec to generate client code for different versions. The specs live in Kubernetes repo.", "python-karborclient": "Python client library for Karbor API", "python-keycloak": "python-keycloak is a Python package providing access to the Keycloak API.", "python-keycloak-client": "Install Python Keycloak client.", "python-keyczar": "Toolkit for safe and simple cryptography", "python-keystoneclient": "Client Library for OpenStack Identity", "python-keystoneclient-rackspace": "Rackspace Auth Plugin for OpenStack Clients.", "python-kingbirdclient": "", "python-lambda": "The bare minimum for a Python app running on Amazon Lambda.", "python-lambda-local": "Run lambda function in python on local machine.", "python-language-server": "Python Language Server for the Language Server Protocol", "python-ldap": "Python modules for implementing LDAP clients", "python-lefthandclient": "HPE LeftHand/StoreVirtual HTTP REST Client", "python-levenshtein": "Python extension for computing string edit distances and similarities.", "python-libbitcoinclient": "Python native client for the libbitcoin blockchain server.", "python-libnmap": "Python NMAP library enabling you to start async nmap tasks, parse and compare/diff scan results", "python-libsbml": "LibSBML Python API", "python-libtorrent": "Python bindings for libtorrent-rasterbar", "python-ligo-lw": "Python LIGO Light-Weight XML I/O Library", "python-linkedin": "Python Interface to the LinkedIn API", "python-loaders": "Small collection of custom module loaders for Python.", "python-logstash": "Python logging handler for Logstash.", "python-logstash-async": "Asynchronous Python logging handler for Logstash.", "python-louvain": "Louvain algorithm for community detection", "python-lzo": "Python bindings for the LZO data compression library", "python-magic": "File type identification using libmagic", "python-magic-bin": "File type identification using libmagic binary package", "python-magnumclient": "Client library for Magnum API", "python-manilaclient": "Client library for OpenStack Manila API.", "python-marconiclient": "Client Library for OpenStack Marconi Queueing API", "python-markdown-math": "Math extension for Python-Markdown", "python-mcrypt": "Python interface to mcrypt library", "python-memcached": "Pure python memcached client", "python-mhash": "Python interface to mhash library", "python-midi": "Python MIDI API", "python-miio": "Python library for interfacing with Xiaomi smart appliances", "python-mimeparse": "A module provides basic functions for parsing mime-type names and matching them against a list of media-ranges.", "python-mirobo": "Python library for interfacing with Xiaomi Vacuum cleaner robot", "python-mistralclient": "Mistral Client Library", "python-mnist": "Simple MNIST and EMNIST data parser written in pure Python", "python-modargs": "modargs is a simple command line argument parsing library that infers arguments from functions in a module", "python-monascaclient": "Monasca API Client Library", "python-monkey-business": "Utility functions for monkey-patching python code", "python-mpd": "Python MPD client library", "python-mpd2": "A Python MPD client library", "python-msspeak": "Text-To-Speech with MSSpeak", "python-multipart": "A streaming multipart parser for Python", "python-muranoclient": "python-muranoclient", "python-mystrom": "Asynchronous Python API client for interacting with myStrom devices", "python-nest": "Python API and command line tool for talking to the Nest\u2122 Thermostat", "python-networkmanager": "Easy communication with NetworkManager", "python-neutronclient": "CLI and Client Library for OpenStack Networking", "python-nmap": "This is a python class to use nmap and access scan results from python3", "python-novaclient": "Client library for OpenStack Compute API", "python-nss": "Python bindings for Network Security Services (NSS) and Netscape Portable Runtime (NSPR)", "python-ntlm": "Python library that provides NTLM support, including an authentication handler for urllib2. Works with pass-the-hash in additon to password authentication.", "python-ntlm3": "Python 3 compatible NTLM library", "python-nvd3": "Python NVD3 - Chart Library for d3.js", "python-oauth2": "OAuth 2.0 provider for python", "python-obelisk": "Python native client for the obelisk blockchain server.", "python-octaviaclient": "Octavia client for OpenStack Load Balancing", "python-oembed": "OEmbed consumer library for Python", "python-omgeo": "Geocoding Library using ESRI, Google, Bing Maps, US Census, OpenStreetMap, Pelias, and MapQuest geocoders", "python-oneviewclient": "Library to use OneView to provide nodes for Ironic", "python-openid": "OpenID support for servers and consumers.", "python-openid-cla": "This is an implementation of the OpenID cla extension for python-openid", "python-openid-teams": "This is an implementation of the OpenID teams extension for python-openid", "python-openstackclient": "OpenStack Command-line Client", "python-osc": "Open Sound Control server and client implementations in pure Python", "python-otp": "Python module for one-time passwords", "python-owasp-zap-v2.4": "OWASP ZAP 2.9 API client", "python-pam": "Python PAM module using ctypes, py3/py2", "python-pentabarf-xml": "Generate pentabarf XML schedule for events/conferences", "python-postmark": "Postmark library for Python 2.7 and greater.", "python-pptx": "Generate and manipulate Open XML PowerPoint (.pptx) files", "python-prctl": "Python(ic) interface to the linux prctl syscall", "python-ptrace": "python binding of ptrace", "python-pushover": "Comprehensive bindings and command line utility for the Pushover notification service", "python-pytun": "Linux TUN/TAP wrapper for Python", "python-qbittorrent": "Python wrapper for qBittorrent >4.1.x", "python-qpid-proton": "An AMQP based messaging library.", "python-qt": "Python compatibility wrapper for Qt Bindings (PySide/PyQt4)", "python-quantumclient": "CLI and Client Library for OpenStack Networking", "python-radius": "Pure python radius implementation which supports Message-Authenticator and Status-Server.", "python-rapidjson": "Python wrapper around rapidjson", "python-rapidjson-schema": "RapidJSON schema validation", "python-recsys": "A recommender system based on Singular Value Decomposition", "python-redis-lock": "Lock context manager implemented via redis SETNX/BLPOP.", "python-redmine": "Library for communicating with a Redmine project management application", "python-registry": "Read access to Windows Registry files.", "python-resize-image": "A Small python package to easily resize images", "python-ripple-api": "Python API for interacting with ripple.com.", "python-roku": "Client for the Roku media player", "python-rrdtool": "Working Python RRDTool binding", "python-rtmidi": "A Python binding for the RtMidi C++ library implemented using Cython.", "python-saharaclient": "Client library for Sahara API", "python-saml": "Onelogin Python Toolkit. Add SAML support to your Python software using this library", "python-scciclient": "Python ServerView Common Command Interface (SCCI) Client Library", "python-scrapyd-api": "A Python wrapper for working with the Scrapyd API", "python-seamicroclient": "Client library for Seamicro chassis API", "python-searchlightclient": "OpenStack Indexing and Search API Client Library", "python-senlinclient": "OpenStack Clustering API Client Library", "python-simple-hipchat": "Easy peasy wrapper for HipChat's v1 API", "python-slugify": "A Python Slugify application that handles Unicode", "python-smaugclient": "Python client for Smaug (Data Protection as a Service for OpenStack)", "python-smpp": "Python SMPP Library", "python-snappy": "Python library for the snappy compression library from Google", "python-sochain-api": "Python API for interacting with chain.so.", "python-social-auth": "Python social authentication made simple.", "python-socketio": "Socket.IO server", "python-solumclient": "Client library for Solum API", "python-songpal": "Python library for interfacing with Sony's Songpal devices", "python-spidermonkey": "JavaScript / Python bridge.", "python-sql": "Library to write SQL queries", "python-ssmi": "Python module implementing SSMI for USSD and SMS.", "python-statsd": "statsd is a client for Etsy's node-js statsd server. A proxy for the Graphite stats collection and graphing server.", "python-stdnum": "Python module to handle standardized numbers and codes", "python-string-utils": "Utility functions for strings checking and manipulation.", "python-subunit": "Python implementation of subunit test streaming protocol", "python-swiftclient": "OpenStack Object Storage API Client Library", "python-synology": "Python API for communication with Synology DSM", "python-systemd": "Systemd interfaces wrapper", "python-tackerclient": "CLI and Client Library for OpenStack Tacker", "python-tado": "PyTado from chrism0dwk, modfied by w.malgadey", "python-taiga": "Taiga python API", "python-taint": "Find security vulnerabilities in Python web applications using static analysis.", "python-tds": "Python DBAPI driver for MSSQL using pure Python TDS (Tabular Data Stream) protocol implementation", "python-telegram-bot": "We have made you a wrapper you can't refuse", "python-telnet-vlc": "A library to control or get information about VLC using Telnet", "python-termstyle": "console colouring for python", "python-terraform": "This is a python module provide a wrapper of terraform command line tool", "python-troveclient": "Client library for OpenStack DBaaS API", "python-tumblpy": "A Python Library to interface with Tumblr v2 REST API & OAuth", "python-tvrage": "python client for the tvrage.com XML API", "python-twitch": "Library for interaction with the videogame streaming platform twitch", "python-twitch-client": "Easy to use Python library for accessing the Twitch API", "python-twitter": "A Python wrapper around the Twitter API", "python-u2flib-server": "Python based U2F server library", "python-utils": "Python Utils is a module with some convenient utilities not included with the standard Python install", "python-vagrant": "Python bindings for interacting with Vagrant virtual machines.", "python-valve": "Python implementation for Source servers, RCON, A2S, VDF, the Steam Web API and various other Valve products and services.", "python-varnish": "Simple Python interface for the Varnish management port", "python-velbus": "Python Library for the Velbus protocol", "python-vitrageclient": "Vitrage Client API Library", "python-vlc": "VLC bindings for python.", "python-wappalyzer": "Python implementation of the Wappalyzer web application detection utility", "python-watcherclient": "Python client library for Watcher API", "python-whois": "Whois querying and parsing of domain registration information.", "python-wink": "Access Wink devices via the Wink API", "python-wns": "wns python library", "python-wordpress-xmlrpc": "WordPress XML-RPC API Integration Library", "python-xlib": "Python X Library", "python-xmp-toolkit": "Python XMP Toolkit for working with metadata.", "python-yadis": "Yadis service discovery library.", "python-yaml": "python-yaml package", "python-yubico": "Python code for talking to Yubico's YubiKeys", "python-zaqarclient": "Client Library for OpenStack Zaqar Messaging API", "python-zunclient": "Client Library for Zun", "python2-pythondialog": "A Python interface to the UNIX dialog utility and mostly-compatible programs (Python\u00a02 backport)", "python3-digest": "A Python library to aid in implementing HTTP Digest Authentication.", "python3-indy": "This is the official SDK for Hyperledger Indy (https://www.hyperledger.org/projects), which provides a distributed-ledger-based foundation for self-sovereign identity (https://sovrin.org). The major artifact of the SDK is a c-callable library.", "python3-ldap": "project renamed ldap3 - please install the ldap3 package instead of python3-ldap", "python3-memcached": "Pure python memcached client", "python3-openid": "OpenID support for modern servers and consumers.", "python3-saml": "Onelogin Python Toolkit. Add SAML support to your Python software using this library", "python3-xlib": "Python3 X Library", "python_opendata_transport": "Python API for interacting with transport.opendata.ch.", "python_speech_features": "Python Speech Feature extraction", "pythondialog": "A Python interface to the UNIX dialog utility and mostly-compatible programs", "pythondoc": "A Python documentation generator, inspired by JavaDoc.", "pythonegardia": "Python 3 support for Egardia / Woonveilig alarm", "pythoneggtools": "Command line tools for working with Python packages", "pythongists": "A Python Module to create and access GitHub Gists", "pythonnet": ".Net and Mono integration for Python", "pythonping": "A simple way to ping in Python", "pythonpy": "python -c, with tab completion and shorthand", "pythonwhois": "Module for retrieving and parsing the WHOIS data for a domain. Supports most domains. No dependencies.", "pythonwpy": "python -c, with tab completion and shorthand", "pythonz-bd": "Manage python installations in your system, berdario's shallow fork", "pytibber": "A python3 library to communicate with Tibber", "pytidylib": "Python wrapper for HTML Tidy (tidylib) on Python 2 and 3", "pytile": "A simple Python API for Tile\u00ae Bluetooth trackers", "pytils": "Russian-specific string utils", "pytimeparse": "Time expression parser", "pytmx": "loads tiled tmx maps.  for python 2.7 and 3.3+", "pytoml": "A parser for TOML-0.4.0", "pytools": "A collection of tools for Python", "pytorch": "", "pytorch-ignite": "A lightweight library to help with training neural networks in PyTorch.", "pytorch-pretrained-bert": "PyTorch version of Google AI BERT model with script to load Google pre-trained models", "pytorch-transformers": "Repository of pre-trained NLP Transformer models: BERT & RoBERTa, GPT & GPT-2, Transformer-XL, XLNet and XLM", "pytouchline": "A Roth Touchline interface library", "pytraccar": "", "pytrackr": "Interface to the TrackR API", "pytradfri": "IKEA Tr\u00e5dfri/Tradfri API. Control and observe your lights from Python.", "pytrafikverket": "api for trafikverket in sweden", "pytraj": "Python API for cpptraj: a data analysis package for biomolecular simulation", "pytransportnsw": "Get transport information from TransportNSW", "pytrends": "Pseudo API for Google Trends", "pytrie": "A pure Python implementation of the trie data structure.", "pytsk3": "Python bindings for the sleuthkit", "pyttsx": "pyttsx - cross platform text-to-speech", "pyttsx3": "Text to Speech (TTS) library for Python 2 and 3. Works without internet connection or delay. Supports multiple TTS engines, including Sapi5, nsss, and espeak.", "pytube": "A pythonic library for downloading YouTube Videos.", "pytumblr": "A Python API v2 wrapper for Tumblr", "pytvmaze": "Python interface to the TV Maze API (www.tvmaze.com)", "pytweening": "A collection of tweening / easing functions.", "pytx": "Python Library for Facebook ThreatExchange", "pytype": "Python type inferencer", "pytyrant": "Pure python client implementation of the Tokyo Tyrant protocol", "pytz": "World timezone definitions, modern and historical", "pytzdata": "The Olson timezone database for Python.", "pyubee": "Simple library for getting stats from Ubee routers.", "pyuca": "a Python implementation of the Unicode Collation Algorithm", "pyudev": "A libudev binding", "pyugrid": "A package for working with triangular unstructured grids, and the data on them", "pyulog": "Python log parser for ULog.", "pyunifi": "API for Ubiquity Networks UniFi controller", "pyunpack": "unpack archive files", "pyuploadcare": "Python library for Uploadcare.com", "pyupnp-async": "Python Library for UPnP operations using asyncio", "pyuptimerobot": "A python module to monitor Uptime Robot monitors.", "pyusb": "Python USB access module", "pyuserinput": "A simple, cross-platform module for mouse and keyboard control", "pyutf8": "Extension for dealing with valid and invalid UTF-8 strings", "pyutil": "a collection of utilities for Python programmers", "pyutilib": "PyUtilib: A collection of Python utilities", "pyutilib.component.core": "The PyUtilib Component Architecture.", "pyutmp": "Python UTMP wrapper for Un*x systems", "pyutu": "Python library for interaction with the AWS Pricing API", "pyuv": "Python interface for libuv", "pyv8": "Python Wrapper for Google V8 Engine", "pyvbox": "Complete implementation of VirtualBox's COM API with a Pythoninc interface", "pyvcd": "Python VCD file support.", "pyvcf": "Variant Call Format (VCF) parser for Python", "pyvcloud": "VMware vCloud Director Python SDK", "pyvera": "Python API for talking to Vera Z-Wave controllers", "pyvesync": "pyvesync is a library to manage Etekcity Switches", "pyvex": "A Python interface to libVEX and VEX IR", "pyvicare": "Library to communicate with the Viessmann ViCare API", "pyvim": "Pure Python Vi Implementation", "pyvirtualdisplay": "python wrapper for Xvfb, Xephyr and Xvnc", "pyvisa": "Python VISA bindings for GPIB, RS232, TCPIP and USB instruments", "pyvisa-py": "Python VISA bindings for GPIB, RS232, and USB instruments", "pyviz-comms": "Bidirectional communication for the PyViz ecosystem.", "pyvizio": "Python library for interfacing with Vizio SmartCast TVs and Sound Bars (2016+ models)", "pyvlx": "PyVLX is a wrapper for the Velux KLF 200 API.", "pyvmomi": "VMware vSphere Python SDK", "pyvot": "Pythonic interface for data exploration in Excel", "pyvows": "pyVows is a BDD test engine based on Vows.js <http://vowsjs.org>.", "pyw215": "Interface for d-link W215 Smart Plugs.", "pyw800rf32": "A library to communicate with the W800rf32 family of devices", "pywallet": "Simple BIP32 (HD) wallet creation for BTC, BTG, BCH, LTC, DASH, USDT, QTUM and DOGE", "pywapi": "Python wrapper around different weather APIs", "pywatchman": "Watchman client for python", "pywavelets": "PyWavelets, wavelet transform module", "pywb": "Pywb Webrecorder web archive replay and capture tools", "pywbem": "pywbem - A WBEM client", "pywebdav": "WebDAV library including a standalone server for python", "pywebhdfs": "UNKNOWN", "pywebpush": "WebPush publication library", "pywebrun": "Python Web Runner - Running Python scripts over HTTP", "pywebview": "Build GUI for your Python program with JavaScript, HTML, and CSS.", "pywemo": "Lightweight Python module to discover and control WeMo devices", "pywhois": "A whois program with truncated output", "pywikibase": "Python package to handle Wikibase DataModel", "pywikibot": "Python MediaWiki Bot Framework", "pywin32": "Python for Window Extensions", "pywin32-ctypes": "", "pywinauto": "A set of Python modules to automate the Microsoft Windows GUI", "pywinexe": "A Python wrapper client for the winexe utility", "pywinpty": "Python bindings for the winpty library", "pywinrm": "Python library for Windows Remote Management", "pywinusb": "A package that simplifies USB/HID communications on windows", "pywright": "Engine and scripting language to create and run Phoenix Wright fan cases", "pyx": "Python package for the generation of PostScript, PDF, and SVG files", "pyxattr": "Filesystem extended attributes for python", "pyxb": "Python XML Schema Bindings", "pyxcli": "IBM Python XCLI Client", "pyxdameraulevenshtein": "pyxDamerauLevenshtein implements the Damerau-Levenshtein (DL) edit distance algorithm for Python in Cython for high performance.", "pyxdg": "PyXDG contains implementations of freedesktop.org standards in python.", "pyxeoma": "Python wrapper for Xeoma web server API", "pyxero": "Python API for accessing the REST API of the Xero accounting tool.", "pyxform": "A Python package to create XForms for ODK Collect.", "pyxiaomigateway": "A library to communicate with the Xiaomi Gateway", "pyxml": "Python/XML package", "pyxmlsec": "Python bindings for XMLSec Library", "pyyaml": "YAML parser and emitter for Python", "pyyeelight": "a simple python3 library for Yeelight Wifi Bulbs", "pyzabbix": "Zabbix API Python interface", "pyzbar": "Read one-dimensional barcodes and QR codes from Python 2 and 3.", "pyzmail": "Python easy mail library, to parse, compose and send emails", "pyzmq": "Python bindings for 0MQ", "pyzmq-static": "Obsolete fork of pyzmq", "pyzos": "Python interface for Zemax OpticStudio COM API (ZOS-API)", "pyzotero": "Python wrapper for the Zotero API", "qa": "", "qdarkstyle": "The most complete dark stylesheet for Python and Qt applications", "qgrid": "An Interactive Grid for Sorting and Filtering DataFrames in Jupyter Notebook", "qi.portlet.tagclouds": "A configurable plone portlet that displays tag clouds", "qiime": "Quantitative Insights Into Microbial Ecology", "qiime-tools": "Useful additions to the QIIME analysis pipeline including tools for data visualization and cluster-computing.", "qimage2ndarray": "Conversion between QImages and numpy.ndarrays.", "qiniu": "Qiniu Resource Storage SDK", "qiskit": "Software for developing quantum computing programs", "qnapstats": "Python API for obtaining QNAP NAS system stats", "qpid-python": "Python client implementation and AMQP conformance tests for Apache Qpid", "qpid-tools": "Python libraries for the Apache Qpid C++ broker", "qr": "Redis-powered queues, capped collections, deques, and stacks", "qrcode": "QR Code image generator", "qrtools": "qrtools is a suite of tools for handling QR codes.", "qscintilla": "Python bindings for the QScintilla programmers editor widget", "qserve": "job queue server", "qt-graph-helpers": "orangeqt ploting library", "qt.py": "Python 2 & 3 compatibility wrapper around all Qt bindings - PySide, PySide2, PyQt4 and PyQt5.", "qt4reactor": "Twisted Qt Integration", "qt5reactor": "Twisted Qt Integration", "qt5reactor-fork": "Twisted Qt Integration", "qtawesome": "FontAwesome icons in PyQt and PySide applications", "qtconsole": "Jupyter Qt console", "qtpy": "Provides an abstraction layer on top of the various Qt bindings (PyQt5, PyQt4 and PySide) and additional custom QWidgets.", "qtpylib": "Quantitative Trading Python Library", "quality": "", "quamash": "Implementation of the PEP 3156 Event-Loop with Qt.", "quandl": "Package for quandl API access", "quantaxis": "QUANTAXIS:Quantitative Financial Strategy Framework", "quantities": "Support for physical quantities with units, based on numpy", "quantlib": "Python bindings for the QuantLib library", "quantlib-python": "Backward-compatible meta-package for the QuantLib module", "quantum-gateway": "Query a Quantum Gateway", "quantum-grove": "A collection of quantum algorithms built using pyQuil and Forest", "quart": "A Python ASGI web microframework with the same API as Flask", "que": "CSS selectors for parsing html on the command line", "queries": "Simplified PostgreSQL client built upon Psycopg2", "query-string": "get url query string dict", "querystring-parser": "QueryString parser for Python/Django that correctly handles nested dictionaries", "question": "UNKNOWN", "questionary": "Python library to build pretty command line user prompts \u2b50\ufe0f", "queuelib": "Collection of persistent (disk-based) queues", "quickdiagrams": "A text-to-class_diagram conversion tool.", "quik": "A fast and lightweight Python template engine", "quintagroup.analytics": "Plone site's statistics", "quite": "QT UI Extension", "quokka-flask-admin": "Fork of Flask-Admin for QuokkaCMS", "quokka-flask-htmlbuilder": "Fork of Flexible Python-only HTML generation for Flask", "quokka-flask-mongoengine": "Fork of Flask support for MongoDB and with WTF model forms", "quokka-speaklater": "Fork of implements a lazy string for python useful for use with gettext", "quokka-themes": "Provides infrastructure for theming Quokka applications", "quorum": "Quorum Extensions for Flask", "r2pipe": "Pipe interface for radare2", "rabbitmq": "CFFI bindings to librabbitmq 0.8.0", "rabbitpy": "A pure python, thread-safe, minimalistic and pythonic RabbitMQ client library", "rachiopy": "A Python module for the Rachio API.", "rackspace-auth-openstack": "Rackspace Auth Plugin for OpenStack Clients.", "rackspace-novaclient": "Metapackage to install python-novaclient and Rackspace extensions", "rad": "A super easy console highlighter. Text goes in, color comes out.", "radar": "Generate random date(time).", "radicale": "CalDAV and CardDAV Server", "radiotherm": "client library for wifi thermostats sold by radiothermostat.com", "radon": "Code Metrics in Python", "raet": "Reliable Asynchronous Event Transport protocol", "raiden-contracts": "Raiden contracts library and utilities", "raiden-webui": "Raiden webui", "rainbow_logging_handler": "Ultimate Python colorized logger with user-custom color", "rainbowhat": "Rainbow HAT Driver", "raincloudy": "A Python library to communicate with Melnor RainCloud Smart Garden Watering Irrigation Timer (https://wwww.melnor.com/)", "rake": "('Rapid Automatic Keywords Extraction', 'Just a Practice')", "rake-nltk": "Python implementation of the Rapid Automatic Keyword Extraction algorithm using NLTK", "ram": "Recurrent Attention Model", "ramlfications": "A Python RAML parser", "ramlient": "Access to a RAML API done right, in Python.", "ramses": "Generate a RESTful API for Pyramid using RAML", "randomize": "Randomize the order of the tests within a unittest.TestCase class", "randomwords": "A useful module for a random text, e-mails and lorem ipsum.", "rapidpro-expressions": "Python implementation of the RapidPro expression and templating system", "rapidpro-python": "Python client library for the RapidPro", "rapidsms": "Build SMS applications with Python and Django", "rapidsms-httprouter": "Provides HTTP endpoints for a RapidSMS router, doing all handling in the Django thread.", "raptus.article.core": "Provides a configurable article content type (replaces the default Page content type).", "rarfile": "RAR archive reader for Python", "rasa": "Open source machine learning framework to automate text- and voice-based conversations: NLU, dialogue management, connect to Slack, Facebook, and more - Create chatbots and voice assistants", "rasa-core": "Machine learning based dialogue engine for conversational software.", "rasa-core-sdk": "Machine learning based dialogue engine for conversational software.", "rasa-nlu": "Rasa NLU a natural language parser for bots", "rasa-sdk": "Machine learning based dialogue engine for conversational software.", "raspyrfm-client": "A library to send rc signals with the RaspyRFM module", "rasterio": "Fast and direct raster I/O for use with Numpy and SciPy", "rasterstats": "Summarize geospatial raster datasets based on vector geometries", "ratelim": "Makes it easy to respect rate limits.", "ratelimit": "API rate limit decorator", "ratelimiter": "Simple python rate limiting object", "rauth": "A Python library for OAuth 1.0/a, 2.0, and Ofly.", "raven": "Raven is a client for Sentry (https://getsentry.com)", "raven-aiohttp": "An asyncio transport for raven-python", "rawes": "rawes elasticsearch driver", "rawpy": "RAW image processing for Python, a wrapper for libraw", "rax_services_python_novaclient_ext": "Services extension for python-novaclient", "ray": "A system for parallel and distributed Python that unifies the ML ecosystem.", "raygun4py": "Official Raygun provider for Python 2.7 and Python 3+", "razorpay": "Razorpay Python Client", "rb": "rb, the redis blaster", "rbtools": "Command line tools and API for working with code and document reviews on Review Board", "rcp": "Reference implementation of the Remote Component Protocol", "rcssmin": "CSS Minifier", "rd": "reliable-download client tool", "rdfextras": "RDFExtras provide tools, extra stores and such for RDFLib.", "rdflib": "RDFLib is a Python library for working with RDF, a simple yet powerful language for representing information.", "rdflib-jsonld": "rdflib extension adding JSON-LD parser and serializer", "rdiff-backup": "Documentation for rdiff-backup", "rdkit": "RDKit Cheminformatics Library", "react": "Server-side rendering of React components with data from your Python system", "read": "read(path,size=-1,encoding=None) function - read file, open.read replacement", "readability-api": "Python client for the Readability Reader and Parser APIs.", "readability-lxml": "fast html to text parser (article readability tool) with python3 support", "readable": "testing and assertion library", "readchar": "Utilities to read single characters and key-strokes", "readlike": "GNU Readline-like line editing module", "readline": "The standard Python readline extension statically linked against the GNU readline library.", "readme": "readme is a library for rendering \"readme\" descriptions for Warehouse", "readme_renderer": "readme_renderer is a library for rendering \"readme\" descriptions for Warehouse", "readmemaker": "A Python utility library to help make a README file from document files.", "readthedocs-build": "Build infrastructure for Read the Docs", "readthedocs-sphinx-ext": "Sphinx extension for Read the Docs overrides", "really": "The missing package for Python", "rebulk": "Rebulk - Define simple search patterns in bulk to perform advanced matching on any string.", "recaptcha-client": "A plugin for reCAPTCHA and reCAPTCHA Mailhide", "receipts": "Verify web app receipts", "recollect-waste": "Python 3 API for Recollect Waste to track waste pickup and types.", "recommonmark": "A docutils-compatibility bridge to CommonMark, enabling you to write CommonMark inside of Docutils & Sphinx projects.", "reconfigure": "An ORM for config files", "record": "Special Record objects used in Zope.", "record-recommender": "Record to Record Recommendations for Invenio.", "recordclass": "Mutable variants of tuple (mutabletuple) and collections.namedtuple (recordclass), which support assignments and more memory saving variants (dataobject, structclass, litelist, ...).", "recordio": "An implementation of the RecordIO file format.", "records": "SQL for Humans", "recordtype": "Similar to namedtuple, but instances are mutable.", "recursive": "", "redbaron": "Abstraction on top of baron, a FST for python to make writing refactoring code a realistic task", "redis": "Python client for Redis key-value store", "redis-py-cluster": "Library for communicating with Redis Clusters. Built on top of redis-py lib", "redisco": "Python Containers and Simple Models for Redis", "redislite": "Redis built into a python package", "redlock": "Distributed locks with Redis", "redlock-py": "Redis locking mechanism", "rednose": "coloured output for nosetests", "redo": "Utilities to retry Python callables.", "redpill": "A cross-plaform package management framework", "reentry": "A plugin manager based on setuptools entry points mechanism", "reflector": "TCP connection reflector", "refo": "Regular expressions for objects", "reg": "Clever dispatch", "regendoc": "a tool to check/update simple file/shell examples in documentation", "regenmaschine": "A simple API for RainMachine sprinkler controllers", "regex": "Alternative regular expression module, to replace re.", "regexp": "Python \"re\" shortcut library", "registrar": "Blockstack registrar for bulk registrations and updates", "reindent": "reindent script by Tim Peters", "rekall-capstone": "Capstone disassembly engine", "rekall-core": "Rekall Memory Forensic Framework", "related": "Related: Straightforward nested object models in Python", "relatively": "Abundance figure with absolute and relative abundances across a hierarchy", "relatorio": "A templating library able to output odt and pdf files", "releases": "A Sphinx extension for changelog manipulation", "remember": "Memoize callables", "remix": "The internet synthesizer. Make things with music.", "removestar": "A tool to automatically replace 'import *' imports with explicit imports in files", "render": "UNKNOWN", "render50": "This is render50, with which you can render source code as PDFs.", "reno": "RElease NOtes manager", "reparser": "Simple regex-based lexer/parser for inline markup", "replacement": "Replacement is a python utility that parses a yaml template and outputs text.", "report": "Json Reports to generate Markdown and HTML .", "reporting": "patterns in reporting", "reportlab": "The Reportlab Toolkit", "repoze.catalog": "Searching and indexing based on zope.index", "repoze.lru": "A tiny LRU cache implementation and decorator", "repoze.sendmail": "Repoze Sendmail", "repoze.sphinx.autointerface": "Sphinx extension: auto-generates API docs from Zope interfaces", "repoze.tm2": "Per-request transactions via WSGI middleware", "repoze.what": "Authorization framework for WSGI applications", "repoze.what-pylons": "The repoze.what v1 plugin for Pylons/TG2 integration", "repoze.what-quickstart": "The repoze.what Quickstart plugin", "repoze.what.plugins.sql": "The repoze.what SQL plugin", "repoze.who": "repoze.who is an identification and authentication framework for WSGI.", "repoze.who-friendlyform": "Collection of repoze.who friendly form plugins", "repoze.who-testutil": "Test utilities for repoze.who-powered applications", "repoze.who.plugins.openid": "An OpenID plugin for repoze.who", "repoze.who.plugins.sa": "The repoze.who SQLAlchemy plugin", "repoze.workflow": "Content workflow for repoze.bfg", "repoze.xmliter": "Wrapper for ``lxml`` trees which serializes to string upon iteration.", "repoze.zcml": "Core directives for use in ZCML-based applications", "reppy": "Replacement robots.txt Parser", "represent": "Create __repr__ automatically or declaratively.", "reproduce": "Computational reproduction library.", "reproject": "Reproject astronomical images", "req": "Simple format for serialization, similar to json.  Not useful for most general use.", "requesocks": "Python HTTP for Humans, with socks proxy support", "request": "http REQUEST (GET+POST) dict", "request-id": "Attach a unique identifier to every WSGI request.", "requestbuilder": "Command line-driven HTTP request builder", "requests": "Python HTTP for Humans.", "requests-async": "async-await support for `requests`.", "requests-aws": "AWS authentication for Amazon S3 for the python requests module", "requests-aws4auth": "AWS4 authentication for Requests", "requests-cache": "Persistent cache for requests library", "requests-credssp": "HTTPS CredSSP authentication with the requests library.", "requests-file": "File transport adapter for Requests", "requests-ftp": "FTP Transport Adapter for Requests.", "requests-futures": "Asynchronous Python HTTP for Humans.", "requests-hawk": "requests-hawk", "requests-html": "HTML Parsing for Humans.", "requests-kerberos": "A Kerberos authentication handler for python-requests", "requests-mock": "Mock out responses from the requests package", "requests-oauth": "Hook for adding Open Authentication support to Python-requests HTTP library.", "requests-oauth2": "OAuth2 support to Python-Requests HTTP library.", "requests-oauthlib": "OAuthlib authentication support for Requests.", "requests-toolbelt": "A utility belt for advanced users of python-requests", "requests-unixsocket": "Use requests to talk HTTP via a UNIX domain socket", "requests_ntlm": "This package allows for HTTP NTLM authentication using the requests library.", "requestsexceptions": "Import exceptions from potentially bundled packages in requests.", "require": "A framework for module definitions", "required": "A easy dependency validator", "requirejs": "Run RequireJS (r.js) without node.", "requirements-detector": "Python tool to find and list requirements of a Python project", "requirements-parser": "Parses Pip requirement files", "requirements-tools": "Scripts for working with Python requirements.", "requirementslib": "A tool for converting between pip-style and pipfile requirements.", "requires": "BDD testing for Python", "requires.io": "Requires.io API", "resampy": "Efficient signal resampling", "reserved": "Check usernames for reserved email addresses, subdomains, or Unix usernames.", "resolvelib": "Resolve abstract dependencies into concrete ones", "resolver": "Resolve specially formated statements to Python objects.", "resource": "A Python library concentrated on the Resource layer of RESTful APIs.", "resource-api-http-client": "UNKNOWN", "resources": "Resource centered REST API clients", "respect": "A command-line tool to interact with the Github API.         Getting to know software developers you Respect.", "resplendent": "A reStructuredText plugin filter for pyspelling.", "responder": "A sorta familiar HTTP framework.", "response": "Your handy frequency and impulse response processing object", "responses": "A utility library for mocking out the `requests` Python library.", "rest-client": "RESTful Client for tornado", "rest-pandas": "Serves up pandas dataframes via the Django REST Framework for client-side(i.e. d3.js) visualizations", "rest-social-auth": "Django rest framework resources for social auth", "rest_condition": "Complex permissions flow for django-rest-framework", "restclient": "convenient library for writing REST clients", "restful": "UNKNOWN", "restkit": "Python REST kit", "restless": "A lightweight REST miniframework for Python.", "restricted_pkg_ext": "A simple setup.py helper for private repositories", "restrictedpython": "RestrictedPython is a defined subset of the Python language which allows to provide a program input into a trusted environment.", "restructuredtext-lint": "reStructuredText linter", "restview": "ReStructuredText viewer", "result": "A rust-like result type for Python", "results": "Don't get mad, get results", "resumable-urlretrieve": "Small library to fetch files over HTTP and resuming their download", "rethinkdb": "Python driver library for the RethinkDB database server.", "retrieve": "Retrieve pre-trained models and cache it locally", "retry": "Easy to use retry decorator.", "retry_decorator": "Retry Decorator", "retrying": "Retrying", "return": "The return function in the steroids", "reverse": "Reverse a file", "review": "upload script for Rietveld code review tool", "reviewboard": "Review Board, a fully-featured web-based code and document review tool made with love <3", "revision": "Static assets revisioning library.", "revisions": "Mock Python Requests with versioned cache control.", "revscoring": "A set of utilities for generating quality scores for MediaWiki revisions", "rfc": "View RFCs in the terminal", "rfc3339": "Format dates according to the RFC 3339.", "rfc3986": "Validating URI References per RFC 3986", "rfc3987": "Parsing and validation of URIs (RFC 3986) and IRIs (RFC 3987)", "rfc5424-logging-handler": "An up-to-date, RFC5424-Compliant syslog handler for the Python logging framework", "rfc6266": "Parse and generate Content-Disposition headers", "rfidiot": "RFID IO tools", "rfk101py": "RFK101 Proximity card reader over Ethernet", "rflink": "Library and CLI tools for interacting with RFlink 433MHz transceiver.", "riak": "Python client for Riak", "riakasaurus": "Riakasaurus is a Twisted client library for Riak", "rich": "Render rich text, tables, syntax highlighting, markdown and more to the terminal", "riemann-client": "A Riemann client and command line tool", "riggerlib": "An event hook framework", "rinoh-typeface-dejavuserif": "DejaVu Serif typeface", "rinoh-typeface-texgyrecursor": "TeX Gyre Cursor typeface", "rinoh-typeface-texgyreheros": "TeX Gyre Heros typeface", "rinoh-typeface-texgyrepagella": "TeX Gyre Pagella typeface", "rinohtype": "The Python document processor", "riotwatcher": "RiotWatcher is a thin wrapper on top of the Riot Games API for League of Legends.", "rise": "Reveal.js - Jupyter/IPython Slideshow Extension", "ritassist": "RitAssist API Access", "rivescript": "A Chatterbot Scripting Language", "rjpl": "Interface with Rejseplanen API", "rjsmin": "Javascript Minifier", "rlp": "A package for Recursive Length Prefix encoding and decoding", "rlr": "Case weighted L2 regularized logistic regression", "rms": "", "ro": "Collection of utilities including general algorithms, astronomical transformations and Tkinter widgets", "robobrowser": "Your friendly neighborhood web scraper", "robotframework": "Generic automation framework for acceptance testing and robotic process automation (RPA)", "robotframework-appiumlibrary": "Robot Framework Mobile app testing library for Appium Client Android & iOS & Web", "robotframework-databaselibrary": "Database utility library for Robot Framework", "robotframework-debuglibrary": "RobotFramework debug library and an interactive shell", "robotframework-faker": "Robot Framework wrapper for faker, a fake test data generator", "robotframework-requests": "Robot Framework keyword library wrapper around requests", "robotframework-selenium2library": "Web testing library for Robot Framework", "robotframework-seleniumlibrary": "Web testing library for Robot Framework", "robotframework-sshlibrary": "Robot Framework test library for SSH and SFTP", "robotpy-ctre": "Binary wrappers for the CTRE Phoenix library", "robotpy-hal-base": "WPILib Hardware Abstration Layer base", "robotpy-hal-sim": "WPILib HAL layer for simulations", "robotpy-installer": "Installation utility program for RobotPy", "robotpy-navx": "Python wrapper for KauaiLabs NavX sensor", "robotpy-wpilib-utilities": "Useful utility functions/objects for RobotPy", "robotsuite": "Robot Framework test suite for Python unittest framework", "rocket": "Modern, multi-threaded and extensible web server.", "rocket-errbot": "Modern, Multi-threaded, Comet-Friendly WSGI Web Server", "rocketchat-api": "Python API wrapper for Rocket.Chat", "rocketchat-py-sdk": "A easy way to connect and interact with Rocket.Chat", "rogue": "A devious little programming language", "roku": "Client for the Roku media player", "roles": "Role based development", "rollbar": "Easy and powerful exception tracking with Rollbar. Send messages and exceptions with arbitrary context, get back aggregates, and debug production issues quickly.", "rolodexer": "Parse rolodex data and output JSON", "roman": "Integer to Roman numerals converter", "room": "A framework of stream data maining for smart home", "roombapy": "Python program and library to control Wi-Fi enabled iRobot Roomba vacuum cleaners", "root": "UNKNOWN", "root-numpy": "The interface between ROOT and NumPy", "rootpy": "A pythonic layer on top of the ROOT framework's PyROOT bindings.", "rope": "a python refactoring library...", "rope_py3k": "a python refactoring library...", "ropemacs": "An emacs mode for using rope python refactoring library", "ropemode": "ropemode, a helper for using rope refactoring library in IDEs", "ropevim": "A vim plugin for using rope python refactoring library", "ropgadget": "This tool lets you search your gadgets on your binaries to facilitate your ROP exploitation.", "roscreate": "Creational templates for RoS", "rosdep": "rosdep package manager abstraction tool for ROS", "rosdistro": "A tool to work with rosdistro files", "rosinstall": "The installer for ROS", "rosinstall-generator": "A tool for generating rosinstall files", "roslib": "Reserve names for currrent development items until release.", "rospkg": "ROS package library", "rouge": "Full Python ROUGE Score Implementation (not a wrapper)", "router": "A simple yet extensible URL routing library for Python", "routes": "Routing Recognition and Generation Tools", "routing": "request routing, that's it", "rova": "API wrapper for ROVA calendar", "rows": "A common, beautiful interface to tabular data, no matter the format", "rpc4django": "Handles JSONRPC and XMLRPC requests easily with Django", "rpcudp": "Asynchronous RPC via UDP", "rpi.gpio": "A module to control Raspberry Pi GPIO channels", "rpio": "Advanced GPIO for the Raspberry Pi. Extends RPi.GPIO with PWM, GPIO interrups, TCP socket interrupts, command line tools and more", "rply": "A pure Python Lex/Yacc that works with RPython", "rpm": "Placeholder pending proper publication of RPM Python bindings", "rpmfile": "Read rpm archive files", "rpy2": "Python interface to the R language (embedded R)", "rpyc": "Remote Python Call (RPyC), a transparent and symmetric RPC library", "rq": "RQ is a simple, lightweight, library for creating background jobs, and processing them.", "rq-dashboard": "rq-dashboard is a general purpose, lightweight, web interface to monitor your RQ queues, jobs, and workers in realtime.", "rq-scheduler": "Provides job scheduling capabilities to RQ (Redis Queue)", "rqopen-client": "rqopen-client", "rrdtool": "Python bindings for rrdtool", "rs": "", "rsa": "Pure-Python RSA implementation", "rst": "Module to create reStructuredText documents through code.", "rst.linker": "Tools for adding metadata and hyperlinks to reStructuredText", "rst2html5": "Generates (X)HTML5 documents from standalone reStructuredText sources", "rst2pdf": "Convert reStructured Text to PDF via ReportLab.", "rstcheck": "Checks syntax of reStructuredText and code blocks nested within it", "rstobj": "Construct RestructuredText markup and directives from Python Code.", "rstr": "Generate random strings in Python", "rtimulib": "richards-tech IMU Sensor Fusion Library", "rtmapi": "API package for rememberthemilk.com", "rtmbot": "A Slack bot written in python that connects via the RTM API.", "rtree": "R-Tree spatial index for Python GIS", "rtsimple": "A Python wrapper for the Rotten Tomatoes API v1.0", "rtslib-fb": "API for Linux kernel SCSI target (aka LIO)", "rtyaml": "All the annoying things to make YAML usable in a source controlled environment.", "ru": "Python package for Rust", "ruamel.base": "common routines for ruamel packages", "ruamel.ordereddict": "a version of dict that keeps keys in insertion resp. sorted order", "ruamel.yaml": "ruamel.yaml is a YAML parser/emitter that supports roundtrip preservation of comments, seq/map flow style, and map key order", "ruamel.yaml.clib": "C version of reader, parser and emitter for ruamel.yaml derived from libyaml", "rubicon-objc": "A bridge between an Objective C runtime environment and Python.", "rubymarshal": "Read and write Ruby-marshalled data", "ruffus": "Light-weight Python Computational Pipeline Management", "rule": "A rule engine written in python.", "rules": "Awesome Django authorization, without the database", "rumps": "Ridiculously Uncomplicated MacOS Python Statusbar apps.", "run": "Python Process Run Control", "runcython": "compile and run cython in one line", "runestone": "Sphinx extensions for writing interactive documents.", "runipy": "Run IPython notebooks from the command line", "runner": "Simple command runner", "running": "User-friendly running pace calculator", "runscript": "Simple script launcher", "runsnakerun": "GUI Viewer for Python profiling runs", "russound": "Python API for select Russound RNET commands to provide Russound support within home-assistant.io", "rw": "Generate random words (e.g. for passwords)", "rwproperty": "Read & write properties", "rx": "Reactive Extensions (Rx) for Python", "rxjson": "JSON RX Schema validation tool", "rxv": "Automation Library for Yamaha RX-V473, RX-V573, RX-V673, RX-V773 receivers", "ryan": "Common Python Tools", "ryu": "Component-based Software-defined Networking Framework", "s2": "Python bindings for S2, a hierarchical square geospatial indexing system.", "s2clientprotocol": "StarCraft II - client protocol.", "s2sphere": "Python implementation of the S2 Geometry Library", "s3cmd": "Command line tool for managing Amazon S3 and CloudFront services", "s3fs": "Convenient Filesystem interface over S3", "s3transfer": "An Amazon S3 Transfer Manager", "s_core": "UNKNOWN", "sa": "Python split annotations package", "sabyenc": "yEnc Module for Python modified for SABnzbd", "sacrebleu": "Hassle-free computation of shareable, comparable, and reproducible BLEU scores", "sacred": "Facilitates automated and reproducible experimental research", "sacremoses": "SacreMoses", "sadisplay": "SqlAlchemy schema display script", "sae-python-dev": "SAE Python development server", "safe": "Is your password safe?", "safet": "Python library for communicating with the Archos Safe-T mini (Trezor compatible) Hardware Wallets", "safety": "Safety checks your installed dependencies for known security vulnerabilities.", "safygiphy": "API Wrapper for the online Gif library, Giphy", "sahara": "Sahara project", "sailthru-client": "Python client for Sailthru API", "salib": "Tools for sensitivity analysis. Contains Sobol, Morris, and FAST methods", "salt": "Portable, distributed, remote execution and configuration management system", "salt-pepper": "A CLI front-end to a running salt-api system", "saltpylint": "Required PyLint plugins needed in the several SaltStack projects.", "salttesting": "Required testing tools needed in the several SaltStack projects.", "same": "same shell client", "sample": "", "sampledata": "Helper class for generate sample data", "samsungctl": "Remote control Samsung televisions via TCP/IP connection", "sanction": "A simple, lightweight OAuth2 client", "sand": "SAND: System Architecture as a Network of Dependencies", "sandesh": "sandesh - a simple app to send messages on slack", "sanic": "A web server and web framework that's written to go fast. Build fast. Run fast.", "sanic-cors": "A Sanic extension adding a decorator for CORS support. Based on flask-cors by Cory Dolphin.", "sanic-jinja2": "Jinja2 support for sanic", "sanic-jwt": "JWT oauth flow for Sanic", "sanic-openapi": "Easily document your Sanic API with a UI.", "sanic-plugins-framework": "Doing all of the boilerplate to create a Sanic Plugin, so you don't have to.", "sanic-session": "Provides server-backed sessions for Sanic using Redis, Memcache and more.", "sanpera": "Image manipulation library, powered by ImageMagick", "sarge": "A wrapper for subprocess which provides command pipeline functionality.", "sas7bdat": "A sas7bdat file reader for Python", "sasl": "Cyrus-SASL bindings for Python", "sass": "Python bindings for libsass", "sastrawi": "Library for stemming Indonesian (Bahasa) text", "satchless": "An e-commerce framework", "satchmo": "The webshop for perfectionists with deadlines.", "sauce": "SAUCE record parser", "sauceclient": "Python client library for Sauce Labs API.", "savalidation": "Active Record like validation on SQLAlchemy declarative model objects", "savreaderwriter": "Read and write SPSS files", "saw": "SAW, a Python SimFin API Wrapper", "sawtooth-sdk": "Sawtooth Python SDK", "sawtooth-signing": "Sawtooth Signing Library", "say": "print and format on steroids", "says": "A CLI for the norwegian dictionary", "sb": "A simple printer of neaster lists", "sbp": "Python bindings for Swift Binary Protocol", "sc": "Easily control SuperCollider sound server from python", "sc.contentrules.groupbydate": "A Plone content rules action that creates a chronological archive.", "sc.contentrules.metadata": "Content Rules Action: Set layout for a content item", "sc.embedder": "This packages contains a Dexterity-based content type that", "sc.social.like": "Social networks integration for Plone.", "scales": "Stats for Python processes", "scandir": "scandir, a better directory iterator and faster os.walk()", "scanpy": "Single-Cell Analysis in Python.", "scapy": "Scapy: interactive packet manipulation tool", "scapy-python3": "Packet crafting/sending/sniffing, PCAP processing tool, based on scapy with python3 compatibility", "scgi": "A Python package for implementing SCGI servers.", "schedule": "Job scheduling for humans.", "schema": "Simple data validation library", "schema-salad": "Schema Annotations for Linked Avro Data (SALAD)", "schematic": "The worst schema versioning system, ever?", "schematics": "Python Data Structures for Humans", "scheme": "A declarative schema framework.", "schiene": "schiene is a Python library for interacting with Bahn.de", "scholdocfilters": "Utilities for writing Scholdoc filters in Python", "scikit-bio": "Data structures, algorithms and educational resources for bioinformatics.", "scikit-build": "Improved build system generator for Python C/C++/Fortran/Cython extensions", "scikit-cuda": "Python interface to GPU-powered libraries", "scikit-fmm": "An extension module implementing the fast marching method", "scikit-fuzzy": "Fuzzy logic toolkit for SciPy", "scikit-image": "Image processing routines for SciPy", "scikit-learn": "A set of python modules for machine learning and data mining", "scikit-mdr": "Multifactor Dimensionality Reduction (MDR)", "scikit-neuralnetwork": "Deep neural networks without the learning cliff! A wrapper library compatible with scikit-learn.", "scikit-optimize": "Sequential model-based optimization toolbox.", "scikit-plot": "An intuitive library to add plotting functionality to scikit-learn objects.", "scikit-surprise": "An easy-to-use library for recommender systems.", "scikit-video": "Video Processing in Python", "scikits.audiolab": "A python module to make noise from numpy arrays", "scikits.learn": "A set of python modules for machine learning and data mining", "scikits.samplerate": "A python module for high quality audio resampling", "scikits.statsmodels": "Statistical computations and models for use with SciPy", "scikits.talkbox": "Talkbox, a set of python modules for speech/signal processing", "scimath": "scientific and mathematical calculations", "scipy": "SciPy: Scientific Library for Python", "scons": "Open Source next-generation build tool.", "scoop": "Scalable COncurrent Operations in Python", "scope": "Template library for multi-language code generation", "scott": "", "scour": "Scour SVG Optimizer", "scp": "scp module for paramiko", "scrapelib": "a library for scraping things", "scrapely": "A pure-python HTML screen-scraping library", "scraperwiki": "Local version of ScraperWiki libraries", "scrapinghub": "Client interface for Scrapinghub API", "scrapinghub-entrypoint-scrapy": "Scrapy entrypoint for Scrapinghub job runner", "scrapy": "A high-level Web Crawling and Web Scraping framework", "scrapy-crawlera": "Crawlera middleware for Scrapy", "scrapy-deltafetch": "Scrapy middleware to ignore previously crawled pages", "scrapy-djangoitem": "Scrapy extension to write scraped items using Django models", "scrapy-dotpersistence": "Scrapy extension to sync `.scrapy` folder to an S3 bucket", "scrapy-fake-useragent": "Use a random User-Agent provided by fake-useragent for every request", "scrapy-mongodb": "Pipeline to MongoDB for Scrapy. Supports MongoDB replica sets", "scrapy-pagestorage": "Scrapy extension to store info in storage service", "scrapy-proxies": "Scrapy Proxies: random proxy middleware for Scrapy", "scrapy-random-useragent": "Scrapy Middleware to set a random User-Agent for every Request.", "scrapy-redis": "Redis-based components for Scrapy.", "scrapy-splash": "JavaScript support for Scrapy using Splash", "scrapyd": "A service for running Scrapy spiders, with an HTTP API", "scrapyd-client": "A client for scrapyd", "scrapyjs": "JavaScript support for Scrapy using Splash", "scrapylib": "Scrapy helper functions and processors", "screed": "", "screen": "Screen width and so on", "screeninfo": "Fetch location and size of physical screens.", "script": "Help for writing shell scripts in Python", "scriptine": "python shell scripts made easy", "scripts": "Various shell scripts", "scripttest": "Helper to test command-line scripts", "scrollphat": "Scroll pHAT Driver", "scrollphathd": "Scroll pHAT HD Driver", "scrypt": "Bindings for the scrypt key derivation function library", "scs": "scs: splitting conic solver", "scs-sdk": "Python SDK For \u65b0\u6d6a\u4e91\u5b58\u50a8", "scsgate": "A Python module to interact with SCSGate", "scspell3k": "A conservative interactive spell checker for source code.", "scss": "Python-scss is SCSS compiler for Python. See http://sass-lang.com for more information about scss syntax.", "scutils": "Utilities for Scrapy Cluster", "sd": "A Docker and AWS utility package", "sdb": "A socket-based remote debugger for Python", "sdnotify": "A pure Python implementation of systemd's service notification protocol (sd_notify)", "se": "A Python stream editor for command-line calls or integration  into Python programs.", "seaborn": "seaborn: statistical data visualization", "seacucumber": "A Django email backend for Amazon Simple Email Service, backed by celery.", "search": "a simple project for searching filenames by guzhen", "search-engine-parser": "scrapes search engine pages for query titles, descriptions and links", "seawater": "Seawater Library for Python", "sebastian": "symbolic music analysis and composition library in Python", "secp256k1": "FFI bindings to libsecp256k1", "secretstorage": "Python bindings to FreeDesktop.org Secret Service API", "section": "hottopic knowledge section", "security": "UNKNOWN", "sedate": "Date/time helper functions used by various Seantis packages.", "see": "dir for humans", "seed": "A utility for easily creating and releasing Python packages", "seed-isort-config": "Statically populate the `known_third_party` `isort` setting.", "seekwell": "SQL for Data Analysts", "seen": "Supported JavaScript Web crawling framework for everyone.", "segments": "", "segtok": "sentence segmentation and word tokenization tools", "seldon-core": "Seldon Core client and microservice wrapper", "select": "CSS selectors for parsing html on the command line", "selection": "API to extract content from HTML & XML documents", "selector": "WSGI request delegation. (AKA routing.)", "selectors2": "Back-ported, durable, and portable selectors", "selenium": "Python bindings for Selenium", "selenium-requests": "Extends Selenium WebDriver classes to include the request function from the Requests library, while doing all the needed cookie and request headers handling.", "self": "@self decorator makes method return self (jQuery-like chaining)", "selinon": "an advanced dynamic task flow management on top of Celery", "selinonlib": "a simple tool to visualize, check and generate Python code from a YAML configuration file for Selinon dispatcher for Celery", "semantic": "Common Natural Language Processing Tasks for Python", "semantic-version": "A library implementing the 'SemVer' scheme.", "semaphore": "A python library to access sentry relay functionality.", "semver": "Python helper for Semantic Versioning (http://semver.org/)", "send2trash": "Send file to trash natively under Mac OS X, Windows and Linux.", "sendgrid": "Twilio SendGrid library for Python", "sendgrid-django": "SendGrid Backend for Django", "sense-emu": "The Raspberry Pi Sense HAT Emulator library", "sense-hat": "Python module to control the Raspberry Pi Sense HAT used in the Astro Pi mission", "sensible": "A simple and sensible logging config", "sentaku": "variadic ux implementation for testing", "sentencepiece": "SentencePiece python wrapper", "sentinels": "Various objects to denote special meanings in python", "sentinelsat": "Utility to search and download Copernicus Sentinel satellite images", "sentry": "A realtime logging and aggregation server.", "sentry-flake8": "Sentry's custom flake8 checker plugin.", "sentry-flowdock": "A Sentry extension which integrates with Flowdock.", "sentry-github": "A Sentry extension which integrates with GitHub.", "sentry-sdk": "Python client for Sentry (https://getsentry.com)", "sentry-slack": "A Sentry extension which posts notifications to Slack (https://slack.com/).", "seqdiag": "seqdiag generates sequence-diagram image from text", "seqeval": "Testing framework for sequence labeling", "serial": "A framework for serializing/deserializing JSON/YAML/XML into python class instances and vice versa", "series": "", "serious": "Easily serialize dataclasses to and from JSON", "seriously": "A Python-based golfing language", "serpent": "Serialization based on ast.literal_eval", "serpy": "ridiculously fast object serialization", "server": "UNKNOWN", "serverfiles": "An utility that accesses files on a HTTP server and stores them locally for reuse.", "serverlessrepo": "A Python library with convenience helpers for working with the AWS Serverless Application Repository.", "service": "Easy Implementation of Background Services", "service-configuration-lib": "Start, stop, and inspect Yelp SOA services", "service_factory": "JSON RPC service factory for Python.", "service_identity": "Service identity verification for pyOpenSSL & cryptography.", "servicenow_rest": "ServiceNow REST API Client", "services": "A Python package for helpful tooling.", "setools": "Speech Enhancement Tools Packages", "setoptconf": "A module for retrieving program settings from various sources in a consistant method.", "setproctitle": "A Python module to customize the process title", "setting": "", "setuptools": "Easily download, build, install, upgrade, and uninstall Python packages", "setuptools-git": "Setuptools revision control system plugin for Git", "setuptools-lint": "Setuptools command for pylint", "setuptools-markdown": "[Deprecated] Use Markdown for your project description", "setuptools-pep8": "pep8 command for setuptools", "setuptools-rust": "Setuptools rust extension plugin", "setuptools-scm": "the blessed package to manage your versions by scm tags", "seven": "Python 2.5 compatibility wrapper for Python 2.7 code.", "sexpdata": "S-expression parser for Python", "sflock": "Sample staging and detonation utility", "sg": "UNKNOWN", "sgf": "Python library for reading and writing Smart Game Format", "sgp4": "Track earth satellite TLE orbits using up-to-date 2010 version of SGP4", "sh": "Python subprocess replacement", "sha256": "sha256 library with midstate", "sha3": "SHA-3 implementation for Python", "shade": "Simple client library for interacting with OpenStack clouds", "shadowsocks": "A fast tunnel proxy that help you get through firewalls", "shamir-mnemonic": "SLIP-39 Shamir Mnemonics", "shannon": "Compute entropy, Shannon's information and several related quantities", "shap": "A unified approach to explain the output of any machine learning model.", "shapely": "Geometric objects, predicates, and operations", "sharding": "Ethereum Sharding Manager Contract", "share": "shared files in lan", "sharedarray": "Share numpy arrays between processes", "sharp": "Wrapper for the libsharp spherical harmonics transofrm library", "sharp_aquos_rc": "Control Sharp Aquos SmartTVs through the IP interface.", "sheepdog": "Shepherd GridEngine", "shell": "A better way to run shell commands in Python.", "shell_command": "Tools for easy invocation of system shell commands", "shellescape": "Shell escape a string to safely use it as a token in a shell command (backport of cPython shlex.quote for Python versions 2.x & < 3.3)", "shellingham": "Tool to Detect Surrounding Shell", "shellphish-qemu": "A pip-installable set of qemus.", "shiboken": "Shiboken generates bindings for C++ libraries using CPython source code", "shiboken2": "Python / C++ bindings helper module", "shield": "A permissions framework built around declarative rules.", "shiftpy": "Tools for Python Apps on OpenShift Red Hat Cloud", "shim": "Vim for Python", "shmooze": "Framework for processed-backed web applications", "shodan": "Python library and command-line utility for Shodan (https://developer.shodan.io)", "shopifyapi": "Shopify API for Python", "shortuuid": "A generator library for concise, unambiguous and URL-safe UUIDs.", "shotgun": "Shotgun package", "should": "assert with should", "shove": "Generic dictionaryish object storage frontend", "shovel": "Not Rake, but Shovel", "show": "Debug print statements, done right. E.g. show(x)", "shub": "Scrapinghub Command Line Client", "shutilwhich": "shutil.which for those not using Python 3.3 yet.", "shyaml": "YAML for command line", "si": "Module to represent SI units", "sickle": "A lightweight OAI client library for Python", "sign": "inherit **kwargs from another fucntion in the signature. ", "signal": "Send SMS messages via ADB and your Android phone. Comes with a CLI.", "signalr-client": "Simple SignalR client for Python", "signing_clients": "Applications signature/manifest manipulator and receipt verifier", "signxml": "Python XML Signature library", "sigopt": "SigOpt Python API Client", "sigtools": "Utilities for working with inspect.Signature objects.", "sijax": "An easy to use AJAX library based on jQuery.ajax", "silva.core.conf": "Configuration machinery for Silva CMS", "silva.core.editor": "Support for the WYSIWYG editor CKEditor in the Silva CMS", "silva.core.interfaces": "Define Zope interfaces used in Silva", "silva.core.layout": "Layout and theme engine for Silva CMS", "silva.core.references": "Define a reference engine usable by Silva content", "silva.core.services": "Configuration services for Silva CMS", "silva.core.smi": "Silva Management Interface", "silva.core.views": "View rendering for Silva CMS", "silva.core.xml": "Support to export Silva content into XML", "silva.fanstatic": "Integration of fanstatic in Silva CMS", "silva.translations": "Translations files in many languages for the Silva CMS", "silva.ui": "Components for the user-interface to manage Silva CMS", "silx": "Software library for X-ray data analysis", "simab": "Simple Multi-Armed Bandit Simulator", "simhash": "A Python implementation of Simhash Algorithm", "similar": "A similar text finder written in Python", "simple": "simple.gui - Simplified GUI generation using Tkinter", "simple-crypt": "Simple, secure encryption and decryption for Python 2.7 and 3", "simple-pbkdf2": "A simple and straightforward implementation of pbkdf2.  Also copy/pasteable", "simple-salesforce": "A basic Salesforce.com REST API client.", "simple-settings": "A simple way to manage your project settings", "simple-translation": "This is a translation app/plugin with support for django-cms 2.1 plugins in the admin", "simpleaudio": "Simple, asynchronous audio playback for Python 3.", "simplecosine": "Simple cosine distance", "simplecv": "Make Computers See with SimpleCV, the Python Framework for Machine Vision", "simpleeval": "A simple, safe single expression evaluator library.", "simpleflake": "Twitter snowflake compatible super-simple distributed ID generator.", "simpleflock": "Simple flock-based file locking, using the `with` syntax", "simplegeneric": "Simple generic functions (similar to Python's own len(), pickle.dump(), etc.)", "simplehmmer": "SimpleHMMER", "simpleitk": "SimpleITK is a simplified interface to the Insight Toolkit (ITK) for image registration and segmentation", "simplejson": "Simple, fast, extensible JSON encoder/decoder for Python", "simplekml": "A Simple KML creator", "simplekv": "A key-value storage for binary data, support many backends.", "simplemediawiki": "Extremely low-level wrapper to the MediaWiki API", "simplenlp": "Simple, multilingual natural language tools.", "simplepam": "An interface to the Pluggable Authentication Modules (PAM) library on linux, written in pure python (using ctypes)", "simpleparse": "A Parser Generator for Python (w/mxTextTools derivative)", "simplepush": "Simplepush python library", "simples3": "Simple, quick Amazon AWS S3 interface", "simplesqlite": "SimpleSQLite is a Python library to simplify SQLite database operations: table creation, data insertion and get data as other data formats. Simple ORM functionality for SQLite.", "simplewebsocketserver": "A Simple Websocket Server written in Python", "simplisafe-python": "A Python3, async interface to the SimpliSafe API", "simply": "Test applications and packages in any Linux context", "simpy": "Event discrete, process based simulation for Python.", "simuvex": "A compatibility layer for simuvex's removal.", "sinaweibopy": "Sina Weibo OAuth 2 API Python SDK", "singer-python": "Singer.io utility library", "single": "Ensure single instance of a command without leaving stale lock files.", "singledispatch": "This library brings functools.singledispatch from Python 3.4 to Python 2.6-3.3.", "sip": "A Python bindings generator for C/C++ libraries", "siphashc": "Python module (in c) for siphash-2-4", "sisa": "SISA APIs tools", "sisynala": "Sisynala Web Log Analyser", "sisyphus-control": "Control your Sisyphus kinetic art tables (sisyphus-industries.com)", "sites": "", "six": "Python 2 and 3 compatibility utilities", "sixpack-client": "Python client for Sixpack, an A/B testing framework under active development at SeatGeek", "size": "This module manages sizes as they are reported by various UNIX commands.", "sk": "Utilities for scikit-learn to quickly build and experiment with machine learning models.", "sk-video": "Video Processing in Python", "skew": "A flat address space for all your AWS resources.", "skimage": "Dummy package that points to scikit-image", "sklearn": "A set of python modules for machine learning and data mining", "sklearn-crfsuite": "CRFsuite (python-crfsuite) wrapper which provides interface simlar to scikit-learn", "sklearn-pandas": "Pandas integration with sklearn", "skrebate": "Relief-based feature selection algorithms", "skybellpy": "An Skybell HD Python library running on Python 3.", "skyfield": "Elegant astronomy for Python", "skype4py": "Skype API wrapper for Python.", "skywriter": "Skywriter HAT Driver", "sl": "Python SDK for running code using the sourceLair API", "slackclient": "Slack API clients for Web API and RTM API", "slacker": "Slack API client", "slackeventsapi": "Python Slack Events API adapter", "slacksocket": "Slack RTM API Websocket client", "slackweb": "slack bot for incomming webhook", "slate": "Extract text from PDF documents easily.", "sleekxmpp": "SleekXMPP is an elegant Python library for XMPP (aka Jabber, Google Talk, etc).", "sleepyq": "SleepIQ API for Python", "slider": "Utilities for working with osu! files and data", "slidingwindow": "Sliding Window library for image processing in Python", "slim": "github: https://github.com/fy0/slim", "slimit": "SlimIt - JavaScript minifier", "slimmer": "HTML,XHTML,CSS,JavaScript optimizer", "slip": "SLIP: a Simple Library for Image Processing", "slixmpp": "Slixmpp is an elegant Python library for XMPP (aka Jabber, Google Talk, etc).", "slowaes": "implementation of AES in Python", "slugid": "Base64 encoded uuid v4 slugs", "slugify": "A generic slugifier.", "slumber": "A library that makes consuming a REST API easier and more convenient", "sm": "ssh host command manager tool", "smac": "SMAC3, a Python implementation of 'Sequential Model-based Algorithm Configuration'.", "small": "A Python package - small", "smap": "sMAP standard library and drivers", "smappy": "A python API wrapper for Smappee", "smart-open": "Utils for streaming large files (S3, HDFS, gzip, bz2...)", "smarthab": "This package allows controlling devices in a SmartHab-powered home.", "smartmin": "Scaffolding system for Django object management.", "smarturls": "A URL construction helper for Django.", "smartypants": "Python with the SmartyPants", "smbus": "Python bindings for Linux SMBus access through i2c-dev", "smbus-cffi": "This Python module allows SMBus access through the I2C /dev interface on Linux hosts. The host kernel must have I2C support, I2C device interface support, and a bus adapter driver.", "smbus2": "smbus2 is a drop-in replacement for smbus-cffi/smbus-python in pure Python", "smhasher": "Python extension for smhasher hash functions", "smhi-pkg": "Gets the weather forecast data from Swedish weather institute", "smile": "smile-python is a modern absl-like python library for SMILE lab.", "smmap": "A pure git implementation of a sliding window memory map manager", "smmap2": "A pure Python implementation of a sliding window memory map manager", "smoke-zephyr": "This project provides a collection of miscellaneous Python utilities.", "smtpapi": "Simple wrapper to use SendGrid SMTP API", "sn": "sn", "sn3218": "A module to drive the sn3218 i2c LED controller", "snakebite": "Pure Python HDFS client", "snakefood": "Dependency Graphing for Python", "snakemake": "Snakemake is a workflow management system that aims to reduce the complexity of creating workflows by providing a fast and comfortable execution environment, together with a clean and modern specification language in python style. Snakemake workflows are essentially Python scripts extended by declarative code to define rules. Rules describe how to create output files from input files.", "snakeviz": "A web-based viewer for Python profiler output", "snapcast": "Control Snapcast.", "snappy": "Studying the topology and geometry of 3-manifolds, with a focus on hyperbolic structures.", "snapshottest": "Snapshot Testing utils for Python", "snaptime": "Transform timestamps with a simple DSL", "sniffer": "An automatic test runner. Supports nose out of the box.", "sniffio": "Sniff out which async library your code is running under", "snowballstemmer": "This package provides 26 stemmers for 25 languages generated from Snowball algorithms.", "snowflake-connector-python": "Snowflake Connector for Python", "snowflake-sqlalchemy": "Snowflake SQLAlchemy Dialect", "snownlp": "Python library for processing Chinese text", "snowplow_analytics_sdk": "Snowplow Analytics Python SDK", "snuggs": "Snuggs are s-expressions for Numpy", "so": "<\u9879\u76ee\u7684\u7b80\u5355\u63cf\u8ff0>", "soaplib": "A simple library for writing soap web services", "soappy": "SOAP Services for Python", "soccerpy": "A python wrapper for API Football-data (api.football-data.org)", "social": "Social is a python package for social data analysis and exploitation", "social-auth-app-django": "Python Social Authentication, Django integration.", "social-auth-core": "Python social authentication made simple.", "socialbladeclient": "Social Blade Unofficial Client", "socialoauth": "Python Package For SNS sites with OAuth2 support", "socketio-client": "A socket.io client library", "socketio-client-nexus": "A socket.io client library", "socketio-server": "Quick and dirty socketio server for django", "socketpool": "Python socket pool", "sockjs-tornado": "SockJS python server implementation on top of Tornado framework", "socksipy-branch": "A Python SOCKS module", "soco": "SoCo (Sonos Controller) is a simple library to control Sonos speakers.", "socorrolib": "the common library of the socorro crash reporter", "sodapy": "Python library for the Socrata Open Data API", "softlayer": "A library for SoftLayer's API", "softlayer_messaging": "SoftLayer Message Queue Client", "solar-theme": "Theme for Python Sphinx", "solaredge": "A python API wrapper for Solaredge monitoring service", "solaredge-local": "API wrapper to communicate locally with SolarEdge Inverters", "solaris": "CosmiQ Works Geospatial Machine Learning Analysis Toolkit", "solax": "Solax inverter API client", "solgema.contextualcontentmenu": "Solgema Contextual Content Menu", "solgema.fullcalendar": "A complete implementation of Adam Shaw FullCalendar into Plone.", "solidfire-sdk-python": "SolidFire Python SDK", "solrpy": "Client for the Solr search service", "some": "More than less; less than more.", "somecomfort": "A client for Honeywell's US-based cloud devices", "something": "a simple package", "sometimes": "Stop being so black & white. Mix things up a bit and execute code sometimes.", "somewhere": "Locates files like the Windows 'where' or the *nix 'which' utilities.", "somfy-mylink-synergy": "Python API to utilise the Somfy Synergy JsonRPC API", "soon": " Worker decorator for background tasks re-using ThreadPoolExecutor.", "sopel": "Simple and extensible IRC bot", "sorl-thumbnail": "Thumbnails for Django", "sorry": "", "sort": "All variants of sorts", "sortable": "An app to add drag-and-drop to Grappelli admin to reorder instances of models.", "sortedcollections": "Python Sorted Collections", "sortedcontainers": "Sorted Containers -- Sorted List, Sorted Dict, Sorted Set", "sos": "Script of Scripts (SoS): an interactive, cross-platform, and cross-language workflow system for reproducible data analysis", "sos-notebook": "Script of Scripts (SoS): an interactive, cross-platform, and cross-language workflow system for reproducible data analysis", "soundcloud": "A friendly wrapper library for the Soundcloud API", "sounddevice": "Play and Record Sound with Python", "sounder": "An intent recognition algorithm.", "soundfile": "An audio library based on libsndfile, CFFI and NumPy", "soupsieve": "A modern CSS selector implementation for Beautiful Soup.", "source": "A simple printer of source list", "sourcemap": "Parse JavaScript source maps.", "sources": "a command-line script for getting/updating source dirs from a config file giving SCC URLs", "south": "South: Migrations for Django", "sox": "Python wrapper around SoX.", "spacy": "Industrial-strength Natural Language Processing (NLP) in Python", "spake2": "SPAKE2 password-authenticated key exchange (pure python)", "spambayes": "Spam classification system", "spanner": "An accumulation of utilities / convenience functions for python", "spark": "A Super-Small, Super-Fast, and Super-Easy web framework", "spark-parser": "An Earley-Algorithm Context-free grammar Parser Toolkit", "sparkmagic": "SparkMagic: Spark execution via Livy", "sparkpost": "SparkPost Python API client", "sparql-client": "Python API to query a SPARQL endpoint", "sparqlwrapper": "SPARQL Endpoint interface to Python", "speakers": "Simple signal system for python", "speaklater": "implements a lazy string for python useful for use with gettext", "spec": "Specification-style output for nose", "spec_cleaner": "RPM .spec files cleaner", "specific": "Specific - spec-first web framework", "specification": "Python implementaion of the `Specification` pattern", "specify": "A spec tool to describe your classes", "spectral": "Spectral Python (SPy) is a Python module for hyperspectral image processing.", "spectrum": "Spectrum Analysis Tools", "specutils": "Package for spectroscopic astronomical data", "speech": "A clean interface to Windows speech recognition and text-to-speech capabilities.", "speechrecognition": "Library for performing speech recognition, with support for several engines and APIs, online and offline.", "speed": "", "speedtest-cli": "Command line interface for testing internet bandwidth using speedtest.net", "spglib": "This is the spglib module.", "spglm": "sparse generalized linear models", "spherical-geometry": "Python based tools for spherical geometry", "spherogram": "Spherical diagrams for 3-manifold topology", "sphinx": "Python documentation generator", "sphinx-3dr-theme": "3D Robotics official Sphinx theme.", "sphinx-argparse": "A sphinx extension that automatically documents argparse commands and options", "sphinx-autoapi": "Sphinx API documentation generator", "sphinx-autobuild": "Watch a Sphinx directory and rebuild the documentation when a change is detected. Also includes a livereload enabled web server.", "sphinx-autodoc-annotation": "Use Python 3 annotations in sphinx-enabled docstrings", "sphinx-autodoc-typehints": "Type hints (PEP 484) support for the Sphinx autodoc extension", "sphinx-automodapi": "Sphinx extension for auto-generating API documentation for entire modules", "sphinx-better-theme": "A nice-looking, customizable Sphinx theme", "sphinx-bootstrap-theme": "Sphinx Bootstrap Theme.", "sphinx-click": "Sphinx extension that automatically documents click applications", "sphinx-copybutton": "Add a copy button to each of your code cells.", "sphinx-csharp": "C# domain for Sphinx", "sphinx-epytext": "Sphinx \"epytext\" extension.", "sphinx-gallery": "A Sphinx extension that builds an HTML version of any Python script and puts it into an examples gallery.", "sphinx-git": "git Changelog for Sphinx", "sphinx-http-domain": "Sphinx domain to mark up RESTful web services in ReST", "sphinx-intl": "Sphinx utility that make it easy to translate and to apply translation.", "sphinx-issues": "A Sphinx extension for linking to your project's issue tracker", "sphinx-jinja": "includes jinja templates in a documentation", "sphinx-js": "Support for using Sphinx on JSDoc-documented JS code", "sphinx-markdown-builder": "sphinx builder that outputs markdown files", "sphinx-markdown-tables": "A Sphinx extension for rendering tables written in markdown", "sphinx-me": "Wraps your README-only projects in a dynamic Sphinx shell for hosting on http://readthedocs.org", "sphinx-notfound-page": "Sphinx extension to build a 404 page with absolute URLs", "sphinx-paramlinks": "Allows param links in Sphinx function/method descriptions to be linkable", "sphinx-patchqueue": "Sphinx extension for embedding sequences of file alterations", "sphinx-prompt": "", "sphinx-pypi-upload": "setuptools command for uploading Sphinx documentation to PyPI", "sphinx-readable-theme": "Sphinx Readable Theme", "sphinx-removed-in": "versionremoved and removed-in directives for Sphinx", "sphinx-rtd-theme": "Read the Docs theme for Sphinx", "sphinx-server": "simple wsgi sphinx server", "sphinx-sitemap": "Sitemap generator for Sphinx", "sphinx-tabs": "Tab views for Sphinx", "sphinx-testing": "testing utility classes and functions for Sphinx extensions", "sphinx2rst": "Convert Sphinx to rst", "sphinx_fontawesome": "add directive for fontawesome in sphinx", "sphinx_py3doc_enhanced_theme": "A theme based on the theme of https://docs.python.org/3/ with some responsive enhancements.", "sphinxcontrib-aafig": "aafig Sphinx extension", "sphinxcontrib-actdiag": "Sphinx \"actdiag\" extension", "sphinxcontrib-apidoc": "A Sphinx extension for running 'sphinx-apidoc' on each build", "sphinxcontrib-applehelp": "", "sphinxcontrib-asyncio": "sphinx extension to support coroutines in markup", "sphinxcontrib-autoprogram": "Documenting CLI programs", "sphinxcontrib-autorun": "Sphinx extension autorun", "sphinxcontrib-bayesnet": "BayesNet extension for Sphinx", "sphinxcontrib-bibtex": "A Sphinx extension for BibTeX style citations.", "sphinxcontrib-bitbucket": "Sphinx/BitBucket integration", "sphinxcontrib-blockdiag": "Sphinx \"blockdiag\" extension", "sphinxcontrib-chapeldomain": "Chapel domain for Sphinx", "sphinxcontrib-cheeseshop": "Sphinx extension cheeseshop", "sphinxcontrib-dashbuilder": "Sphinx builder extension to generate a 'Documentation Set' for `dash API browser`.", "sphinxcontrib-devhelp": "", "sphinxcontrib-docbookrestapi": "Extension to Sphinx for generating REST API documentation for http://api.openstack.org/", "sphinxcontrib-domaintools": "Sphinx extension for easy domain creation.", "sphinxcontrib-dotnetdomain": "Sphinx \"dotnetdomain\" extension", "sphinxcontrib-emacs": "Emacs documentation support for Sphinx", "sphinxcontrib-email": "Sphinx email obfuscation extension", "sphinxcontrib-embedly": "Sphinx \"embedly\" extension", "sphinxcontrib-fancybox": "Sphinx \"fancybox\" extension", "sphinxcontrib-fulltoc": "Include a full table of contents in your Sphinx HTML sidebar", "sphinxcontrib-golangdomain": "Sphinx extension sphinxcontrib-golangdomain", "sphinxcontrib-googleanalytics": "Sphinx extension googleanalytics", "sphinxcontrib-htmlhelp": "", "sphinxcontrib-httpdomain": "Sphinx domain for documenting HTTP APIs", "sphinxcontrib-httpexample": "Adds example directive for sphinx-contrib httpdomain", "sphinxcontrib-images": "Sphinx extension for thumbnails", "sphinxcontrib-inheritance": "Documentation inheritance functionality for Sphinx", "sphinxcontrib-inlinesyntaxhighlight": "Inline Syntax Highlighting for Sphinx", "sphinxcontrib-issuetracker": "Sphinx integration with different issuetrackers", "sphinxcontrib-jsmath": "A sphinx extension which renders display math in HTML via JavaScript", "sphinxcontrib-log-cabinet": "Organize changelog directives in Sphinx docs.", "sphinxcontrib-lunrsearch": "Instant search for Sphinx", "sphinxcontrib-mermaid": "Mermaid diagrams in yours Sphinx powered docs", "sphinxcontrib-napoleon": "Sphinx \"napoleon\" extension.", "sphinxcontrib-newsfeed": "News Feed extension for Sphinx", "sphinxcontrib-nwdiag": "Sphinx \"nwdiag\" extension", "sphinxcontrib-openapi": "OpenAPI (fka Swagger) spec renderer for Sphinx", "sphinxcontrib-paverutils": "Sphinx/Paver integration", "sphinxcontrib-pecanwsme": "A Sphinx extension for documenting APIs built with Pecan and WSME", "sphinxcontrib-plantuml": "Sphinx \"plantuml\" extension", "sphinxcontrib-programoutput": "Sphinx extension to include program output", "sphinxcontrib-qthelp": "", "sphinxcontrib-restbuilder": "Sphinx extension to output reST files.", "sphinxcontrib-robotdoc": "Sphinx extension to embed Robot Framework test cases and user keywords into Sphinx documents", "sphinxcontrib-seqdiag": "Sphinx \"seqdiag\" extension", "sphinxcontrib-serializinghtml": "", "sphinxcontrib-shellcheck": "Sphinx extension to lint shell code blocks", "sphinxcontrib-svg2pdfconverter": "Sphinx SVG to PDF converter extension", "sphinxcontrib-tikz": "TikZ extension for Sphinx", "sphinxcontrib-trio": "Make Sphinx better at documenting Python functions and methods", "sphinxcontrib-versioning": "Sphinx extension that allows building versioned docs for self-hosting.", "sphinxcontrib-wavedrom": "A sphinx extension that allows generating wavedrom diagrams based on their textual representation", "sphinxcontrib-websupport": "Sphinx API for Web Apps", "sphinxcontrib-zopeext": "Sphinx extension zopeext", "sphinxcontrib.datatemplates": "Sphinx extension for rendering data files as nice HTML", "sphinxcontrib.youtube": "embedding gist to sphinx", "sphinxcontrib_github_alt": "Link to GitHub issues, pull requests, commits and users from Sphinx docs.", "sphinxfeed": "Sphinx extension for generating RSS feeds", "sphinxit": "Lite and powerful SphinxQL query constructor", "sphinxjp.themecore": "A sphinx theme plugin support extension. #sphinxjp", "sphinxjp.themes.basicstrap": "A sphinx theme for Basicstrap style. Using Twitter Bootstrap. #sphinxjp", "sphinxjp.themes.revealjs": "A sphinx theme for generate reveal.js presentation. #sphinxjp", "sphinxjp.themes.sphinxjp": "A sphinx theme for sphinx-users.jp site.", "sphinxmapxrefrole": "Sphinx mapping role", "sphinxmark": "A Sphinx extension that enables watermarks for HTML output.", "sphinxprettysearchresults": "Decently styled search results for sphinx-doc projects", "spidermonkey": "A standalone executable Spidermonkey JavaScript shell, and a Python utility module to run it.", "spiderpy": "Python wrapper for the Spider API, a way to manage your Spider installation", "spidev": "Python bindings for Linux SPI access through spidev", "spinners": "Spinners for terminals", "spinnfrontendcommon": "Common SpiNNaker Front end functions", "spinnmachine": "Representation of a SpiNNaker Machine", "spinnman": "Interaction with a SpiNNaker Machine", "splinter": "browser abstraction for web acceptance testing", "splunk-sdk": "The Splunk Software Development Kit for Python.", "spongemock": "Mock some text like spongebob would. mOCk SoMe TexT lIKe SpONGebOb wOuLd.", "spoofmac": "Easily spoof your MAC address in OS X, Windows & Linux.", "spotcrime": "Provides basic API to spotcrime.com.", "spotipy": "A light weight Python library for the Spotify Web API", "spotipy-homeassistant": "simple client for the Spotify Web API", "spreg": "PySAL Spatial Econometrics Package", "spritemapper": "A suite for merging multiple images and generate corresponding CSS in one go", "sprox": "A package for creation of web widgets directly from database schema.", "spruce": "", "spur": "Run commands and manipulate files locally or over SSH using the same interface", "sputnik": "Data package manager library", "spyder": "The Scientific Python Development Environment", "spyder-kernels": "Jupyter kernels for Spyder's console", "spyne": "A transport and architecture agnostic rpc library that focuses on", "sql": "DB API 2.0 for Humans", "sqlacodegen": "Automatic model code generator for SQLAlchemy", "sqlagg": "SQL aggregation tool", "sqlalchemy": "Database Abstraction Library", "sqlalchemy-citext": "A sqlalchemy plugin that allows postgres use of CITEXT.", "sqlalchemy-continuum": "Versioning and auditing extension for SQLAlchemy.", "sqlalchemy-fulltext-search": "Provide FullText for MYSQL & SQLAlchemy model", "sqlalchemy-migrate": "Database schema migration for SQLAlchemy", "sqlalchemy-redshift": "Amazon Redshift Dialect for sqlalchemy", "sqlalchemy-searchable": "Provides fulltext search capabilities for declarative SQLAlchemy models.", "sqlalchemy-utc": "SQLAlchemy type to store aware datetime values", "sqlalchemy-utils": "Various utility functions for SQLAlchemy.", "sqlcmd": "A cross-platform, cross-database SQL command line tool", "sqlite3dbm": "sqlite-backed dictionary", "sqlitedict": "Persistent dict in Python, backed up by sqlite3 and pickle, multithread-safe.", "sqlobject": "Object-Relational Manager, aka database wrapper", "sqlparse": "Non-validating SQL parser", "sqlsoup": "A one step database access tool, built on the SQLAlchemy ORM.", "squaremap": "Hierarchic data-visualisation control for wxPython", "squarify": "Pure Python implementation of the squarify treemap layout algorithm", "sr": "Console utility for search and replace in files", "src": "UNKNOWN", "srp": "Secure Remote Password", "srpenergy": "An unofficial Python module for interacting with Srp Energy data", "srsly": "Modern high-performance serialization utilities for Python", "ssdb": "Python client for SSDB", "ssdeep": "Python wrapper for the ssdeep library", "sse": "Server-Sent Events protocol implemetation.", "sseclient": "Python client library for reading Server Sent Event streams.", "sseclient-py": "SSE client for Python", "ssh": "SSH2 protocol library", "ssh-import-id": "Authorize SSH public keys from trusted online identities", "sshpubkeys": "SSH public key parser", "sshtunnel": "Pure python SSH tunnels", "ssl": "SSL wrapper for socket objects (2.3, 2.4, 2.5 compatible)", "sslyze": "Fast and powerful SSL/TLS server scanning library", "st": "Sf Tools for Python3 Development", "stable-baselines": "A fork of OpenAI Baselines, implementations of reinforcement learning algorithms.", "stage": "Configuration over convention.", "stagpy": "Tool for StagYY output files processing", "stand": "IP\u4ee3\u7406\u6c60", "standard": "Standard Library for Python", "stanfordcorenlp": "Python wrapper for Stanford CoreNLP.", "star": "import star", "starbase": "Python client for HBase Stargate REST server", "starlette": "The little ASGI library that shines.", "starlingbank": "An unofficial python package that provides access to parts of the Starling bank API. Designed to be used for personal use (i.e. using personal access tokens).", "start": "Very simple command to start a single process from a Procfile", "started": "Subprocess-based lib for integration tests", "state": "UNKNOWN", "states": "state machine for python classes", "static": "Serve static or templated content via WSGI or stand-alone.", "static3": "A really simple WSGI way to serve static (or mixed) content.", "staticgenerator": "StaticGenerator for Django", "staticjinja": "jinja based static site generator", "statistics": "A Python 2.* port of 3.4 Statistics Module", "statprof": "Statistical profiling for Python", "statsd": "A simple statsd client.", "statsmodels": "Statistical computations and models for Python", "status": "HTTP status code reporting for GET and POST requests", "stdeb": "Python to Debian source package conversion utility", "stdlib-list": "A list of Python Standard Libraries (2.6-7, 3.2-8).", "steadymark": "Markdown-based test runner for python. Good for github projects", "steam": "Module for interacting with various Steam features", "steamodd": "High level Steam API implementation with low level reusable core", "steelscript.netprofiler": "Python module for interacting with Riverbed NetProfiler with SteelScript", "steem": "Official python steem library.", "stellar-base": "Conservative Version of library for managing Stellar.org blockchain transactions and accounts using stellar-base in python. Allows full functionality interfacing with the Horizon front end. Code is audited. See https://www.stellar.org/developers/ for more info", "stem": "Stem is a Python controller library that allows applications to interact with Tor (https://www.torproject.org/).", "stemming": null, "step": "Performs steps", "stestr": "A parallel Python test runner built around subunit", "stevedore": "Manage dynamic plugins for Python applications", "still": "", "stix": "An API for parsing and generating STIX content.", "stix-ramrod": "STIX and CybOX upgrade API and utilities.", "stix-validator": "APIs and scripts for validating STIX and CybOX documents.", "stockstats": "DataFrame with inline stock statistics support.", "stomp.py": "Python STOMP client, supporting versions 1.0, 1.1 and 1.2 of the protocol", "stompest": "STOMP library for Python including a synchronous client.", "stop": "Scratch to Python converter and creator", "stop-words": "Get list of common stop words in various languages in Python", "stopit": "Timeout control decorator and context managers, raise any exception in another thread", "storage": "Libraries to interact with Enterprise Storage Arrays, FC Switches and Servers.", "store": "simple storage library", "storm": "Storm is an object-relational mapper (ORM) for Python developed at Canonical.", "stormpath": "Official Stormpath SDK, used to interact with the Stormpath REST API.", "storops": "Python API for VNX and Unity.", "str": "", "straight.plugin": "A simple namespaced plugin facility", "straitjacket": "Another Uncompromising Code Formatter for Python.", "stravalib": "Python library for interacting with Strava v3 REST API", "strawberry": "links bookmarking service", "strawpy": "Strawpy is a python wrapper for the strawpoll API.", "streamlabswater": "Unofficial Python library for the Streamlabs Water API", "streamlit": "Frontend library for machine learning engineers", "streamparse": "streamparse lets you run Python code against real-time streams of data. Integrates with Apache Storm.", "streql": "Constant-time string comparison", "strict": "Type and subject matter checks for functions and classes.", "strict-rfc3339": "Strict, simple, lightweight RFC3339 functions", "strictyaml": "Strict, typed YAML parser", "stringcase": "String case converter.", "stringgenerator": "Generate randomized strings of characters using a template", "strings": "Python strings for humans.", "stripe": "Python bindings for the Stripe API", "structlog": "Structured Logging for Python", "structure": "The Structure CLI (Command-Line Tool).", "structures": "Declarative binary building and parsing: simple, fast and extensible", "stuf": "Normal, default, ordered, chained, restricted, counter, and frozen dictionaries with attribute-style access.", "stups-tokens": "Python library to manage OAuth access tokens", "sty": "", "style": "\ud83c\udf08 Terminal string styling", "style50": "This is style50, with which code can be checked against the CS50 style guide", "stylus": "A bridge to the Stylus css compiler", "sub": "Simple Tool to download Subtitles.", "subject": "Django Subject", "subliminal": "Subtitles, faster than your thoughts", "submit50": "This is submit50, with which you can submit solutions to problems for CS50.", "submitter": "Simple SGE job submitter.", "subprocess32": "A backport of the subprocess module from Python 3 for use on 2.x.", "subprocess32-ext": "A backport of the subprocess module from Python 3.2/3.3 for use on 2.x.", "subprocrunner": "A Python wrapper library for subprocess module.", "subscription": "Support for subscription management preview.", "substitute": "A friendly substitute for python mocking frameworks", "subvertpy": "Alternative Python bindings for Subversion", "success": "Python Success Stories", "sucks": "a library for controlling certain robot vacuums", "suds": "Lightweight SOAP client", "suds-jurko": "Lightweight SOAP client (Jurko's fork)", "suds-passworddigest-homeassistant": "adds Web Services Security PasswordDigest authentication to SUDS", "suds-py3": "Lightweight SOAP client", "suds_passworddigest": "adds Web Services Security PasswordDigest authentication to SUDS", "sugartensor": "A slim tensorflow wrapper that provides syntactic sugar for tensor variables.", "suit": "SUIT Framework (Scripting Using Integrated Templates)\nallows developers to define their own syntax for transforming templates by using rules.", "suitable": "Suitable is a thin wrapper around the Ansible API.", "suitcase-jsonl": "", "sum": "sum test", "summary": "Extractor to get main content from the web page.", "sumy": "Module for automatic summarization of text documents and HTML pages.", "sunburnt": "Python interface to Solr", "sunlight": "Unified Sunlight API bindings", "sunpy": "\"SunPy: Python for Solar Physics\"", "sunwatcher": "Binding to SolarLog HTTP API", "sup": "misc utils", "superjson": "Extendable json encode/decode library.", "superlance": "superlance plugins for supervisord", "supermercado": "Supercharged mercantile", "superset": "Superset has moved to apache-superset, as of 0.34.0 onwards, please pip install apache-superset", "supervisor": "A system for controlling process state under UNIX", "supervisor-stdout": "UNKNOWN", "supervisor-wildcards": "Implemenents start/stop/restart commands with both parallel and wildcard support for Supervisor.", "supplement": "Python code completion library", "support": "An evented server framework designed for building scalable and introspectable services. Built at PayPal, based on gevent.", "sure": "utility belt for automated testing in python for python", "surlex": "Simple URL expression translator: alternative to regular expressions for URL pattern matching and data extraction.", "surprise": "An easy-to-use library for recommender systems.", "surt": "Sort-friendly URI Reordering Transform (SURT) python package.", "sushy": "Sushy is a small Python library to communicate with Redfish based systems", "sv": "subversion wrapper to simplify the task of branching and merging", "svg": "svg", "svg.path": "SVG path objects and parser", "svg2rlg": "Convert SVG to Reportlab drawing", "svglib": "A pure-Python library for reading and converting SVG", "svgpathtools": "A collection of tools for manipulating and analyzing SVG Path objects and Bezier curves.", "svgutils": "Python SVG editor", "svgwrite": "A Python library to create SVG drawings.", "svn": "Intuitive Subversion wrapper.", "swag-client": "Cloud multi-account metadata management tool.", "swagger-parser": "Swagger parser giving useful informations about your swagger files", "swagger-spec-validator": "Validation of Swagger specifications", "swagger-ui-bundle": "swagger_ui_bundle - swagger-ui files in a pip package", "swampdragon": "SwampDragon is a powerful platform making it easy to build real time web applications, combining the power of Django and Tornado", "swampdragon-auth": "Access signed in django users in routers", "swapper": "The unofficial Django swappable models API.", "swift": "OpenStack Object Storage", "swiglpk": "swiglpk - Simple swig bindings for the GNU Linear Programming Kit", "swingtix-bookkeeper": "A double-entry bookkeeping module for django", "swisshydrodata": "A library to fetch data from the Swiss federal Office for Environment FEON", "switch": "The missing switch statement", "switch2bill-common": "Common Django/Python helpers for Star2Billing projects", "sy": "Simple tools for system administration tasks", "symbolic": "A python library for dealing with symbol files and more.", "symboltype": "Simple \"symbol\" type, useful for enumerations or sentinels", "symposion": "A collection of Django apps for conference websites.", "sympy": "Computer algebra system (CAS) in Python", "synapseclient": "A client for Synapse, a collaborative compute space  that allows scientists to share and analyze data together.", "synology-srm": "Synology SRM API", "synopsis": "Source-code Introspection Tool", "synspark_logger": "Collect your security events to allow you to visualize it on Synspark.", "systemd-python": "Python interface for libsystemd", "systems": "Describe and run systems diagrams.", "sysv_ipc": "System V IPC primitives (semaphores, shared memory and message queues) for Python", "ta-lib": "Python wrapper for TA-Lib", "table": "Two-dimensional tables backed by Numpy with named rows and columns.", "tabledata": "tabledata is a Python library to represent tabular data. Used for pytablewriter/pytablereader/SimpleSQLite.", "tableprint": "Pretty console printing of tabular data", "tables": "Hierarchical datasets for Python", "tableschema": "A utility library for working with Table Schema in Python", "tableschema-sql": "Generate SQL tables, load and extract data, based on JSON Table Schema descriptors.", "tablib": "Format agnostic tabular data library (XLS, JSON, YAML, CSV)", "tabs": "Tabs - Import tables in a consistent, maintainable, and readable way", "tabula-py": "Simple wrapper for tabula-java, read tables from PDF into DataFrame", "tabulate": "Pretty-print tabular data", "tabulator": "Consistent interface for stream reading and writing tabular data (csv/xls/json/etc)", "tabutils": "A (tabular) data processing toolkit", "tacacs_plus": "A client for TACACS+ authentication", "tagging": "Generic tagging application for Django", "tags": "A toolkit to create HTML code with python", "tahoma-api": "Tahoma Api - Python connect to Tahoma REST API", "tailer": "Python tail is a simple implementation of GNU tail and head.", "take": "A DSL for extracting data from a web page.", "taken": "Random token generator", "talk": "Chat platform writen in Python", "tangible": "A Python library to convert data into tangible 3D models.", "tank_utility": "A smart propane tank monitor.", "tap.py": "Test Anything Protocol (TAP) tools", "tapsaff": "Provides an API for requesting information from taps-aff.co.uk", "tarantool": "Python client library for Tarantool 1.6 Database", "target": "a performance measurement stub", "task": "ask management based on python classes and django models", "taskcluster": "Python client for Taskcluster", "taskcluster-urls": "Standardized url generator for taskcluster resources.", "taskflow": "Taskflow structured state management library.", "taskforce": "Taskforce starts and restarts daemon processes.  It will detect executable and/or module changes and automatically restart the affected processes.", "tasks": "A simple personal task queue to track todo items", "taskw": "Python bindings for your taskwarrior database", "tatsu": "TatSu takes a grammar in a variation of EBNF as input, and outputs a memoizing PEG/Packrat parser in Python.", "tavern": "Simple testing of RESTful APIs", "tb-nightly": "TensorBoard lets you watch Tensors Flow", "tbb": "Intel(R) Threading Building Blocks", "tblib": "Traceback serialization library.", "tc": "Python bindings to the Tokyo Cabinet database library", "tcpwatch": "TCP monitoring and logging tool with support for HTTP 1.1", "td": "A non-offensive, per project ToDo manager.", "td-client": "Treasure Data API library for Python", "tdaemon": "Test Daemon", "teamcity-messages": "Send test results to TeamCity continuous integration server from unittest, nose, py.test, twisted trial, behave (Python 2.6+)", "technical": "Technical Indicators for financial analysis", "tekton": "Routing web apps by convention", "tel": "The tiny experiment library.", "telebot": "A Telegram bot library, with simple route decorators.", "telegram": "Telegram APIs", "telegraph": "Telegraph API wrapper", "telephus": "connection pooled, low-level client API for Cassandra in Twisted python", "telepot": "Python framework for Telegram Bot API", "telethon": "Full-featured Telegram client library for Python 3", "telethon-session-sqlalchemy": "SQLAlchemy backend for Telethon session storage", "tell": "Tell the user (via desktop notification) when a command completes.", "tellcore-net": "a Python module that allow to run tellcore over TCP/IP", "tellcore-py": "Python wrapper for Telldus' home automation library", "tellduslive": "Communicate with Telldus Live", "tellive-py": "Python wrapper for connecting to Telldus Live", "tells": "dpack", "temescal": "Python API for controlling LG speakers", "tempdir": "Tempdirs are temporary directories, based on tempfile.mkdtemp", "temperusb": "Reads temperature from TEMPerV1 devices (USB 0c45:7401)", "tempest": "OpenStack Integration Testing", "tempest-lib": "OpenStack Functional Testing Library", "tempita": "A very small text templating language", "template": "A CLI tool for generating files from Jinja2 templates and environment variables.", "template-python": "Python port of the Template Toolkit", "template-remover": "Remove the template markup from html files", "template_utils": "Template-related utilities for Django applications", "templates": "Python templating library with templates included.", "templer.buildout": "Templer system extensions for buildouts and buildout recipes", "templer.core": "Core functionality for the templer tool", "templer.localcommands": "Templer system framework for local commands", "templer.zope": "Templer system extensions for zope", "tempora": "Objects and routines pertaining to date and time (tempora)", "tempstorage": "A RAM-based storage for ZODB", "tenacity": "Retry code until it succeeds", "tenant-schemas-celery": "Celery integration for django-tenant-schemas and django-tenants", "tencentcloud-sdk-python": "Tencent Cloud SDK for Python", "tendo": "A Python library that extends some core functionality", "tensor2tensor": "Tensor2Tensor", "tensorboard": "TensorBoard lets you watch Tensors Flow", "tensorboard-pytorch": "Log TensorBoard events with pytorch", "tensorboard_logger": "Log TensorBoard events without Tensorflow", "tensorboardx": "TensorBoardX lets you watch Tensors Flow without Tensorflow", "tensorflow": "TensorFlow is an open source machine learning framework for everyone.", "tensorflow-datasets": "tensorflow/datasets is a library of datasets ready to use with TensorFlow.", "tensorflow-estimator": "TensorFlow Estimator.", "tensorflow-gan": "TF-GAN: A Generative Adversarial Networks library for TensorFlow.", "tensorflow-gpu": "TensorFlow is an open source machine learning framework for everyone.", "tensorflow-hub": "TensorFlow Hub is a library to foster the publication, discovery, and consumption of reusable parts of machine learning models.", "tensorflow-metadata": "Library and standards for schema and statistics.", "tensorflow-model-analysis": "A library for analyzing TensorFlow models", "tensorflow-probability": "Probabilistic modeling and statistical inference in TensorFlow", "tensorflow-serving-api": "TensorFlow Serving Python API.", "tensorflow-tensorboard": "TensorBoard lets you watch Tensors Flow", "tensorflow-transform": "A library for data preprocessing with TensorFlow", "tensorflowjs": "Python Libraries and Tools for TensorFlow.js", "tensorforce": "Tensorforce: a TensorFlow library for applied reinforcement learning", "tensorlayer": "High Level Tensorflow Deep Learning Library for Researcher and Engineer.", "tensorpack": "A Neural Network Training Interface on TensorFlow", "tentacle_pi": "Tentacles for the Raspberry Pi!", "termcolor": "ANSII Color formatting for output in terminal.", "terminado": "Terminals served to xterm.js using Tornado websockets", "terminal": "terminal\n    ~~~~~~~~\n\n    A terminal environment tools.\n\n    :copyright: (c) 2013 by Hsiaoming Yang.", "terminaltables": "Generate simple tables in terminals from a nested list of strings.", "termination": "A library for first-order term-rewriting", "terms": "A rule production system", "termstyle": "console colouring for python", "teslajsonpy": "A library to work with Tesla API.", "tesseract": "Tesselation based Recovery of Amorphous halo Concentrations", "tesseracttrainer": "A small framework taking over the manual tesseract training process described in the Tesseract Wiki", "tesserocr": "A simple, Pillow-friendly, Python wrapper around tesseract-ocr API using Cython", "testfixtures": "A collection of helpers and mock objects for unit tests and doc tests.", "testify": "Testing framework", "testil": "Utilities for writing tests with Python", "testinfra": "Test infrastructures", "testing": "The Python Testing Tools Taxonomy", "testing.common.database": "utilities for testing.* packages", "testing.mysqld": "automatically setups a mysqld instance in a temporary directory, and destroys it after testing", "testing.postgresql": "automatically setups a postgresql instance in a temporary directory, and destroys it after testing", "testpackage": "Test package.", "testpath": "Test utilities for code working with files and commands", "testrepository": "A repository of test results.", "testresources": "Testresources, a pyunit extension for managing expensive test resources", "tests": "UNKNOWN", "testscenarios": "Testscenarios, a pyunit extension for dependency injection", "testtools": "Extensions to the Python standard library unit testing framework", "testtube": "testtube is a Python based continuous test runner.\n\ntesttube's stir command can, based on a tube.py configuration file, monitor\na directory for file changes and execute a pre-configured set of tests when\nchanges occur.", "texext": "Sphinx extensions for working with LaTeX math", "text": "UNKNOWN", "text-unidecode": "The most basic Text::Unidecode port", "textacy": "NLP, before and after spaCy", "textblob": "Simple, Pythonic text processing. Sentiment analysis, part-of-speech tagging, noun phrase parsing, and more.", "textfsm": "Python module for parsing semi-structured text into python tables.", "textile": "Textile processing for python.", "textocat": "Unofficial Textocat Python SDK", "textract": "extract text from any document. no muss. no fuss.", "textrank4zh": "Extract keywords and abstract Chinese article", "textstat": "Calculate statistical features from text", "texttable": "module for creating simple ASCII tables", "textwrap3": "textwrap from Python 3.6 backport (plus a few tweaks)", "textx": "Meta-language for DSL implementation inspired by Xtext", "tf": "Randomised true or false values", "tf-agents": "TF-Agents: A Reinforcement Learning Library for TensorFlow", "tf-agents-nightly": "TF-Agents: A Reinforcement Learning Library for TensorFlow", "tf-estimator-nightly": "TensorFlow Estimator.", "tf-nightly": "TensorFlow is an open source machine learning framework for everyone.", "tf-nightly-2.0-preview": "TensorFlow is an open source machine learning framework for everyone.", "tf-nightly-gpu": "TensorFlow is an open source machine learning framework for everyone.", "tfds-nightly": "tensorflow/datasets is a library of datasets ready to use with TensorFlow.", "tflearn": "Deep Learning Library featuring a higher-level API for TensorFlow", "tfp-nightly": "Probabilistic modeling and statistical inference in TensorFlow", "tftpy": "Python TFTP library", "tg": "Tg", "tg.devtools": "", "tgcrypto": "Fast Telegram Crypto Library for Python", "tgext.admin": "Admin Controller add-on for basic TG identity model.", "tgext.crud": "Crud Controller Extension for TG2", "tgext.datahelpers": "Helpers to manage data and attachments on TurboGears", "tgext.pluggable": "Plug applications and extensions in a TurboGears2 project", "tgext.scss": "SCSS for TurboGears2, fast middleware to use SCSS for all your CSS", "thanks": "Finding ways to fund the packages you use.", "that": "The Anti-Zen of Python", "the": "rspec/should.js assertion style for python test", "theanets": "Feedforward and recurrent neural nets using Theano", "theano": "Optimizing compiler for evaluating mathematical expressions on CPUs and GPUs.", "theano-lstm": "Nano size theano lstm module", "thefuck": "Magnificent app which corrects your previous console command", "thegamesdb": "The Games DB API wrapper for Python", "thehive4py": "Python API client for TheHive.", "then": "When \"something\" THEN send email/sms/telegram/event/execute... or Whatever ", "therapist": "A lint suite runner with Git-aware capabilities and a smart pre-commit hook.", "there": "Print current file and line number", "therefore": "therefore", "these": "The Markov Zenerator.", "thinc": "Practical Machine Learning for NLP", "thingspeak": "Client library for the thingspeak.com API", "think": "Terminal Think Music", "thomas": "Thomas allows segmented downloads and is an alternative to Axel", "thonny": "Python IDE for beginners", "thoth-analyzer": "Analyzer library for project Thoht.", "thoth-common": "Shared code logic in the project Thoth.", "thoth-storages": "Storage and database adapters available in project Thoth", "threadloop": "Tornado IOLoop Backed Concurrent Futures", "threadpool": "Easy to use object-oriented thread pool framework.", "three": "An easy-to-use wrapper for the Open311 API", "thrift": "Python bindings for the Apache Thrift RPC system", "thrift-sasl": "Thrift SASL Python module that implements SASL transports for Thrift (`TSaslClientTransport`).", "thriftpy": "Pure python implementation of Apache Thrift.", "thru": "Command line pipes for python.", "thumbor": "thumbor is an open-source photo thumbnail service by globo.com", "thus": "thus", "tiddlyweb": "An optionally headless, extensible HTTP datastore for tiddlers: bits of stuff.", "tiddlywebplugins.utils": "Tools and methods for managing TiddlyWeb plugins", "tifffile": "Read and write TIFF(r) files", "tika": "Apache Tika Python library", "tikteck": "Python API for controlling Tikteck LED bulbs", "tilecache": "a web map tile caching system", "tilestache": "A stylish alternative for caching your map tiles.", "time": "Conversion of given time input into proper format", "timeago": "A very simple python library, used to format datetime with `*** time ago` statement. eg: \"3 hours ago\".", "timeconvert": "Time Convert for Humans\u2122", "timelib": "parse english textual date descriptions", "timeout-decorator": "Timeout decorator", "timermiddleware": "add timing instrumentation to WSGI applications", "times": "Times is a small, minimalistic, Python library for dealing with time conversions between universal time and arbitrary timezones.", "timestring": "Human expressed time to Dates and Ranges", "timezonefinder": "fast python package for finding the timezone of any point on earth (coordinates) offline", "timezones": "A Python library that provides better selection of common timezones, can output HTML and auto select the best timezone based on user's IP.", "timo": "", "tini": "Read simple .ini/configuration files.", "tinify": "Tinify API client.", "tinkerer": "Sphinx-based blogging engine", "tinycss": "tinycss is a complete yet simple CSS parser for Python.", "tinycss2": "Low-level CSS parser for Python", "tinydb": "TinyDB is a tiny, document oriented database optimized for your happiness :)", "tinydb-serialization": "Serialization for objects that TinyDB otherwise couldn't handle", "tinyec": "A tiny library to perform arithmetic operations on elliptic curves in pure python", "tinymongo": "A flat file drop in replacement for mongodb.  Requires Tinydb", "tinyrpc": "A small, modular, transport and protocol neutral RPC library that, among other things, supports JSON-RPC and zmq.", "tinys3": "A small library for uploading files to S3,With support of async uploads, worker pools, cache headers etc", "tinysegmenter": "Very compact Japanese tokenizer", "tinytag": "Read music meta data and length of MP3, OGG, OPUS, MP4, M4A, FLAC, WMA and Wave files", "titlecase": "Python Port of John Gruber's titlecase.pl", "tj": "A simple but powerful module that will provide you many useful methods.", "tk": "TensorKit is a deep learning helper between Python and C++.", "tkreadonly": "A set of Tkinter widgets to display readonly text and code.", "tl": "T I M E L I N E - RL events tracking software", "tld": "Extract the top-level domain (TLD) from the URL given.", "tldextract": "Accurately separate the TLD from the registered domain and subdomains of a URL, using the Public Suffix List. By default, this includes the public ICANN TLDs and their exceptions. You can optionally support the Public Suffix List's private domains as well.", "tls-parser": "Small library to parse TLS records.", "tlslite": "tlslite implements SSL and TLS.", "tlslite-ng": "Pure python implementation of SSL and TLS.", "tm": "Topic Maps", "tmdb3": "TheMovieDB.org APIv3 interface", "tmdbsimple": "A Python wrapper for The Movie Database API v3", "tmuxp": "tmux session manager", "to": "A trainer for PyTorch", "today": "don't forget an important day", "todo": "Print TODOs in a codebase", "todoist-python": "todoist-python - The official Todoist Python API library", "todos": "Command line lightweight todo tool with readable storage ,            written in Py", "toga": "A Python native, OS native GUI toolkit.", "toga-core": "A Python native, OS native GUI toolkit.", "toil": "Pipeline management software for clusters.", "tokage": "Async wrapper for the MyAnimeList API", "token": "Token client to REST Apis", "tokenlib": "Generic library for managing signed authentication tokens.", "tomd": "Convert HTML to Markdown.", "toml": "Python Library for Tom's Obvious, Minimal Language", "tomlkit": "Style preserving TOML library", "too": "A bundle of most common useful class.", "tools": "Set of tools for web scraping projects", "toolz": "List processing tools and functional utilities", "toonapilib": "A library to interact with eneco's \"Toon\" smart meter via their official api https://api.toon.eu", "toonlib": "A library to interact with Eneco's toon", "tooz": "Coordination library for distributed systems.", "top": "DaYu message api of Ali", "topia.termextract": "Content Term Extraction using POS Tagging", "toposort": "Implements a topological sort algorithm.", "torch": "Tensors and Dynamic neural networks in Python with strong GPU acceleration", "torchfile": "Torch7 binary serialized file parser", "torchnet": "an abstraction to train neural networks", "torchsummary": "Model summary in PyTorch similar to `model.summary()` in Keras", "torchtext": "Text utilities and datasets for PyTorch", "torchvision": "image and video datasets and models for torch deep learning", "tornadio2": "Socket.io 0.7+ server implementation on top of Tornado framework", "tornado": "Tornado is a Python web framework and asynchronous networking library, originally developed at FriendFeed.", "tornado-botocore": "Use tornado's AsyncHTTPClient inside botocore.", "tornado-celery": "Celery integration with Tornado", "tornado-cors": "CORS support for Tornado", "tornado-json": "A simple JSON API framework based on Tornado", "tornado-mysql": "Pure Python MySQL Driver for Tornado", "tornado-redis": "Asynchronous Redis client for the Tornado Web Server.", "tornado-smtpclient": "A non-blocking smtp client to work with tornado-based application", "torndb": "A lightweight wrapper around MySQLdb.  Originally part of the Tornado framework.", "toro": "Synchronization primitives for Tornado coroutines.", "toronado": "Fast lxml-based CSS stylesheet inliner.", "torrequest": "A simple interface for HTTP(s) requests over Tor", "tort": "Tort - Tornado framework helper functions", "torthrift": "Tornado asynchronous thrift server and client", "tortilla": "Wrapping web APIs made easy.", "tortoise-orm": "Easy async ORM for python, built with relations in mind", "tosca-parser": "Parser for TOSCA Simple Profile in YAML.", "toscawidgets": "Web widget creation toolkit based on TurboGears widgets", "total_connect_client": "Interact with Total Connect 2 alarm systems", "touchphat": "Python library for driving Pimoroni Touch pHAT", "tower": "Pull strings from a variety of sources, collapse whitespace, support context (msgctxt), and merging .pot files.", "towncrier": "Building newsfiles for your project.", "tox": "tox is a generic virtualenv management and test command line tool", "tox-battery": "Additional functionality for tox", "tox-pyenv": "tox plugin that makes tox use `pyenv which` to find python executables", "tox-travis": "Seamless integration of Tox into Travis CI", "tp-connected": "TP-Link LTE modem API", "tpdcclib": "Collection of Python modules to write DCC tools in a DCC agnostic way.", "tpl": "Render templates with data from various sources", "tplink": "Get the list of hosts connected to the router", "tpot": "Tree-based Pipeline Optimization Tool", "tppyutils": "Collection of Python utilities modules to work with Python and DCCs", "tpqtlib": "Collection of Python utilities modules to work with PySide/PyQt and DCCs", "tqdm": "Fast, Extensible Progress Meter", "tr": "tr", "trac": "Integrated SCM, wiki, issue tracker and project environment", "tracaccountmanager": "User account management plugin for Trac", "trace": "Python Web Scraping Utility.", "traceback2": "Backports of the traceback module", "traceroute": "Cross-platform traceroute for python.", "tracpermredirect": "Redirect users to the login screen on PermissionError.", "tracthemeengine": "Provide a modular interface to styling Trac", "trading-calendars": "trading_calendars is a Python library with securities exchange calendars used by Quantopian's Zipline.", "trafaret": "Validation and parsing library", "trafaret-config": "A configuration library for python using trafaret and yaml", "traitlets": "Traitlets Python config system", "traits": "Explicitly typed attributes for Python", "traitsui": "traitsui: traits-capable user interfaces", "traittypes": "Scipy trait types", "tran": "\u65b9\u4fbf\u5728\u7ec8\u7aef\u4e2d\u8bd1\u82f1\u548c\u82f1\u8bd1\u4e2d\u7684\u5c0f\u5de5\u5177", "transaction": "Transaction management for Python", "transcrypt": "Python to JavaScript transpiler, supporting multiple inheritance and generating lean, highly readable code", "transformers": "State-of-the-art Natural Language Processing for TensorFlow 2.0 and PyTorch", "transforms3d": "Functions for 3D coordinate transformations", "transifex-client": "A command line interface for Transifex", "transitfeed": "GTFS library and tools", "transitions": "A lightweight, object-oriented Python state machine implementation.", "translate": "This is a simple, yet powerful command line translator with google translate behind it. You can also use it as a Python module in your code.", "translate-toolkit": "Tools and API for translation and localization engineering.", "translationstring": "Utility library for i18n relied on by various Repoze and Pyramid packages", "translators": "Free & Easy translators for Python, such as Google, Alibaba, Tencent, NetEase(Youdao), etc.", "translitcodec": "Unicode to 8-bit charset transliteration codec", "transliterate": "Bi-directional transliterator for Python", "transmissionrpc": "Python module that implements the Transmission bittorent client RPC protocol.", "transmogrify.dexterity": "A transmogrifier blueprint for updating dexterity objects", "travertino": "Travertino is a set of constants and utilities for describing user interfaces", "travis": "Travis fake project", "travis-solo": "Local Travis build runner", "travis-sphinx": "Manages building sphinx documentation and deploying documentation to gh-pages via travis", "travispy": "Python API for Travis CI.", "tree": "A package for creating and drawing trees", "tree-format": "", "treebeard": "Tools for notebook hosting", "treeherder-client": "Python library to retrieve data from the Treeherder API", "treelib": "A Python 2/3 implementation of tree structure.", "trello": "Python library for interacting with the Trello API", "treq": "A requests-like API built on top of twisted.web's Agent", "trezor": "Python library for communicating with Trezor Hardware Wallet", "triangle": "Python binding to the triangle library", "tricircleclient": "Python client library for Tricircle", "trie": "Python implementation of the Ethereum Trie structure", "trigger": "Trigger is a framework and suite of tools for configuring network devices", "trimesh": "Import, export, process, analyze and view triangular meshes.", "trio": "A friendly Python library for async concurrency and I/O", "tripleo-common": "A common library for TripleO workflows.", "tripleo-image-elements": "Disk image builder elements for deploying OpenStack.", "trivup": "Trivially Up a cluster of programs, such as a Kafka cluster", "trollius": "Deprecated, unmaintained port of the asyncio module (PEP 3156) on Python 2", "trollsift": "String parser/formatter", "trolly": "Trello API Wrapper", "tron": "Job scheduling and monitoring system", "tropo-webapi-python": "Python library for building voice/SMS/IM/Twitter apps at Tropo.com", "troposphere": "AWS CloudFormation creation library", "trueskill": "The video game rating system", "trust": "A hierarchical database engine with read-only access to data, ideally used for cross-application settings and infrastructure description.", "trustme": "#1 quality TLS certs while you wait, for the discerning tester", "try": "test", "trytond": "Tryton server", "tsfresh": "tsfresh extracts relevant characteristics from time series", "tsne": "TSNE implementations for python", "tt": "Support for the Tensor Train (TT) format", "turbocheetah": "TurboGears plugin to support use of Cheetah templates", "turbogears": "Front-to-back, open-source, rapid web development framework", "turbogears2": "Next generation TurboGears", "turbojson": "Python template plugin that supports JSON", "turbokid": "Python template plugin that supports Kid templates", "turbomail": "TurboMail is a mail delivery subsystem and MIME message generation framework for Python.", "tushare": "A utility for crawling historical and Real-time Quotes data of China stocks", "tuyaha": "A Python library that implements a Tuya API endpoint that was specially designed for Home Assistant", "tuyapy": "A Python library for Tuya Device with Python 3+", "tv": "tv: text view images in your console using true color and unicode 9.0 characters", "tvdb_api": "Interface to thetvdb.com", "tw": "TorchWrapper is a deep learning helper.", "tw.forms": "Web Widgets for building and validating forms. (former ToscaWidgetsForms)", "tw2.core": "The runtime components for ToscaWidgets 2, a web widget toolkit.", "tw2.forms": "The basic form widgets for ToscaWidgets 2, a web widget toolkit.", "tw2.jqplugins.ui": "toscawidgets2 wrapper for jquery-ui", "tw2.jquery": "toscawidgets2 wrapper for jQuery", "tweepy": "Twitter library for python", "tweet-preprocessor": "Elegant tweet preprocessing", "tweetstream": "Simple Twitter streaming API access", "twentemilieu": "Asynchronous Python client for Twente Milieu API.", "twiggy": "a Pythonic logger", "twilio": "Twilio API client and TwiML generator", "twill": "twill Web browsing language", "twine": "Collection of utilities for publishing packages on PyPI", "twisted": "An asynchronous networking framework written in Python", "twisted-dev-tools": "Tools for twisted development", "twistedchecker": "A Twisted coding standard compliance checker.", "twitter": "An API and command-line toolset for Twitter (twitter.com)", "twitter-text-py": "A library for auto-converting URLs, mentions, hashtags, lists, etc. in Twitter text. Also does tweet validation and search term highlighting.", "twitter-text-python": "Twitter Tweet parser and formatter", "twitter.common.app": "Twitter's Python application lifecycle framework.", "twitter.common.collections": "twitter.common collections library.", "twitter.common.concurrent": "twitter.common basic concurrency utilities such as deadline() and defer().", "twitter.common.config": "twitter.common config parsing library.", "twitter.common.confluence": "Confluence utilities for twitter.", "twitter.common.contextutil": "twitter.common standard context managers.", "twitter.common.decorators": "twitter.common standard decorators.", "twitter.common.dirutil": "twitter.common path and directory library.", "twitter.common.exceptions": "twitter.common exception handlers.", "twitter.common.http": "twitter.common wrappers for bottle and simple diagnostics endpoints.", "twitter.common.lang": "twitter.common python language and compatibility facilities.", "twitter.common.log": "twitter.common logging handlers.", "twitter.common.metrics": "twitter.common metrics registry and collector.", "twitter.common.options": "twitter.common optparse wrapper.", "twitter.common.process": "twitter.common process management wrapper.", "twitter.common.quantity": "twitter.common quantity and unit classes.", "twitter.common.recordio": "twitter.common simple record reader/writer library", "twitter.common.string": "twitter.common string parsing utilities.", "twitter.common.testing": "twitter.common testing libraries.", "twitter.common.threading": "twitter.common python threading libs.", "twitter.common.util": "twitter.common commands wrapper.", "twitter.common.zookeeper": "Implementations of Twitter's service discovery libraries on top of Kazoo.", "twitterapi": "Minimal wrapper for Twitter's REST and Streaming APIs", "twittermetrics": "Twitter search for popular words and sentiment analysis", "twitterscraper": "Tool for scraping Tweets", "twittersearch": "A library to easily iterate tweets found by the Twitter API", "two": "\ud83d\ude0f\u968f\u673a\u4e00\u53e5\u300c\u4e2d\u4e8c\u300d\u7684\u53f0\u8bcd\uff01", "two1": "Buy and sell anything on the internet with bitcoin.", "twx.botapi": "Unofficial Telegram Bot API Library and Client", "twython": "Actively maintained, pure Python wrapper for the     Twitter API. Supports both normal and streaming Twitter APIs", "txaio": "Compatibility API between asyncio/Twisted/Trollius", "txamqp": "Python library for communicating with AMQP peers and brokers using Twisted", "txeffect": "Effect/Twisted integration", "txgithub": "GitHub API client implemented using Twisted.", "txjson-rpc": "Code for creating Twisted JSON-RPC servers and clients.", "txmongo": "Asynchronous Python driver for MongoDB <http://www.mongodb.org>", "txpostgres": "Twisted wrapper for asynchronous PostgreSQL connections", "txredis": "Python/Twisted client for Redis key-value store", "txredisapi": "non-blocking redis client for python", "txrequests": "Asynchronous Python HTTP for Humans.", "txrestapi": "Easing the creation of REST API services in Python", "txretry": "A Twisted class for retrying failing calls with a customizable back-off schedule.", "txrudp": "A Twisted extension implementing RUDP", "txsockjs": "Twisted SockJS wrapper", "txsocksx": "Twisted client endpoints for SOCKS{4,4a,5}", "txssmi": "Twisted library for Truteq's SSMI protocol", "txstatsd": "A network daemon for aggregating statistics", "txtorcon": "Twisted-based Tor controller client, with state-tracking and     configuration abstractions.     https://txtorcon.readthedocs.org     https://github.com/meejah/txtorcon", "txtwitter": "A Twisted-based client library for Twitter's API.", "txws": "Twisted WebSockets wrapper", "txyam2": "Yet Another Memcached (YAM) client for Twisted.", "txzmq": "Twisted bindings for ZeroMQ", "tyoi.oauth2": "Implements the client side of the OAuth 2 protocol", "typed-ast": "a fork of Python 2 and 3 ast modules with type comment support", "typeguard": "Run-time type checker for Python", "typepy": "typepy is a Python library for variable type checker/validator/converter at a run time.", "typeshed": "Collection of library stubs for Python, with static types", "typesystem": "A type system library for Python", "typical": "Typical: Take Typing Further.", "typing": "Type Hints for Python", "typing-extensions": "Backported and Experimental Type Hints for Python 3.5+", "typing-inspect": "Runtime inspection utilities for typing module.", "typogrify": "Filters to enhance web typography, including support for Django & Jinja templates", "tzlocal": "tzinfo object for the local timezone", "tzwhere": "Python library to look up timezone from lat / long offline", "u-msgpack-python": "A portable, lightweight MessagePack serializer and deserializer written in pure Python.", "ua-parser": "Python port of Browserscope's user agent parser", "uamqp": "AMQP 1.0 Client Library for Python", "ubcpi-xblock": "UBC Peer Instruction XBlock", "ubelt": "A Python utility belt containing simple tools, a stdlib like feel, and extra batteries.", "uber_rides": "Official Uber API Python SDK", "ucsmsdk": "Python SDK for Cisco UCS", "ucssdk": "Python SDK for Cisco UCS Manager", "udacity-pa": "CLI tool for Udacity's project assistant.", "udt4twisted": "An UDT4 integration package for twisted.", "uflash": "A module and utility to flash Python onto the BBC micro:bit.", "ufo2ft": "A bridge between UFOs and FontTools.", "ufolib": "A low-level UFO reader and writer.", "uiautomator": "Python Wrapper for Android UiAutomator test tool", "uiautomatorplug": "enhancement for the python wrapper of android uiautomator. provides image comparision method", "ujson": "Ultra fast JSON encoder and decoder for Python", "ukpostcodeparser": "UK Postcode parser", "uliweb": "Easy python web framework", "umalqurra": "Date Api that support Hijri Umalqurra calendar. Features: 1-Convert Gregorian to Hijri 2-Convert Hijri to Gregorian 3-give the arabic name of the hijri month 4-give the english name of the gregorian month 5-give the day name in Arabic and English 6-give the current day both in Hijri and Gregorian", "umap-learn": "Uniform Manifold Approximation and Projection", "umdh": "Tools for working with University of Michigan dining hall data", "umemcache": "Ultra fast memcache client written in highly optimized C++ with Python bindings", "uncertainties": "Transparent calculations with uncertainties on the quantities involved (aka error propagation); fast calculation of derivatives", "unchained": "Some helper functions for sharing between Django projects", "uncompyle2": "Python byte-code to source-code converter", "uncompyle6": "Python cross-version byte-code decompiler", "underthesea": "Vietnamese NLP Toolkit", "unicode-slugify": "A slug generator that turns strings into unicode slugs.", "unicodecsv": "Python2's stdlib csv module is nice, but it doesn't support unicode. This module is a drop-in replacement which *does*.", "unicodedata2": "Unicodedata backport for python 2/3 updated to the latest unicode version.", "unicore-cms": "JSON based CMS for Universal Core", "unicorn": "Unicorn CPU emulator engine", "unicornhathd": "Python library for driving Pimoroni Unicorn HAT HD", "unidecode": "ASCII transliterations of Unicode text", "unidiff": "Unified diff parsing/metadata extraction library.", "unifi": "API towards Ubiquity Networks UniFi controller", "unifiled": "Easily connect to Ubiquiti Unifi led devices", "uniform": "Form handling for Pyramid.", "unify": "Modifies strings to all use the same (single/double) quote where possible.", "unihan-etl": "Export UNIHAN to Python, Data Package, CSV, JSON and YAML", "unipath": "Object-oriented alternative to os/os.path/shutil", "unirest": "Simplified, lightweight HTTP client library", "units": "Python support for quantities with units", "unittest": "", "unittest-data-provider": "PHPUnit-like @dataprovider decorator for unittest", "unittest-mixins": "Helpful mixins for unittest classes", "unittest-xml-reporting": "unittest-based test runner with Ant/JUnit like XML reporting.", "unittest2": "The new features in unittest backported to Python 2.4+.", "unittest2py3k": "A Python 3 compatible version of unittest2", "unittestzero": "A simple Assertion Framework", "universe": "Universe: a software platform for measuring and training an AI's general intelligence across the world's supply of games, websites and other applications.", "unix": "Manage Unix-like systems.", "unknown": "UNKNOWN", "unqlite": "Fast Python bindings for the UnQLite embedded NoSQL database.", "unrar": "Wrapper for UnRAR library, ctypes-based.", "untangle": "Convert XML documents into Python objects", "untokenize": "Transforms tokens into original source code (while preserving whitespace).", "up": "Up - A next generation status monitor", "upcloud-api": "UpCloud API Client", "update": "", "update-copyright": "Automatically update copyright blurbs in versioned source.", "update_checker": "A python module that will check for package updates.", "updates": "Check for updated packages in the PyPI", "uplink": "A Declarative HTTP Client for Python.", "uproot": "ROOT I/O in pure Python and Numpy.", "upsmychoice": "Python 3 API for UPS My Choice, a way to track packages.", "uptick": "Command line tool to interface with the BitShares network", "uptime": "Cross-platform uptime library", "upyun": "UpYun Storage SDK for Python", "urban-async": "An async Python API wrapper for Urban Dictionary", "urbandict": "CLI client and a library for urbandictionary.com", "urbandictionary": "Simple Python wrapper for Urban Dictionary API.", "uri": "A type to represent, query, and manipulate a Uniform Resource Identifier.", "uricore": "URI Parsing for Humans.", "uritemplate": "URI templates", "uritemplate.py": "URI templates", "uritools": "URI parsing, classification and composition", "url": "URL Parsing", "url-normalize": "URL normalization for Python", "urlarchiver": "url-archiver is a simple library to fetch and archive URL on the file-system.", "urldecode": "URLDecode is to decode an encoded url", "urlextract": "Collects and extracts URLs from given text.", "urlfetch": "An easy to use HTTP client", "urlgrabber": "A high-level cross-protocol url-grabber", "urllib2_file": "urllib2 extension which permit multipart file upload", "urllib3": "HTTP library with thread-safe connection pooling, file post, and more.", "urllib5": "Just increment the number and create a new lib. Never fix the original one.", "urlnorm": "Normalize a URL to a standard unicode encoding", "urlobject": "A utility class for manipulating URLs.", "urlopen": "A simple printer of automated lists", "urlparse2": "urlparse for humans.", "urltools": "Some functions to parse and normalize URLs.", "urwid": "A full-featured console (xterm et al.) user interface library", "us": "US state meta information and other fun stuff", "usa": "Django app!", "usaddress": "Parse US addresses using conditional random fields", "usage": "Usage", "uscisstatus": "USCIS Status Checker", "use": "A Library For Dynamically Importing Modules. Inspired By **Node.js** `require` Function.", "useful": "Everyday use utilities for writing Python code or Django projects.", "user-agents": "A library to identify devices (phones, tablets) and their capabilities by parsing (browser/HTTP) user agent strings", "user-messages": "a reusable private user messages application for Django", "user_agent": "User-Agent generator", "userprofile": "A packaged user application, leveraging python-social-auth.", "users": "", "usersettings": "Portable Local Settings Storage", "uservoice": "UserVoice Python library", "ushlex": "Replacement for shlex (that works with unicode) for Python 2.X.", "uszipcode": "USA zipcode programmable database, includes up-to-date census and geometry information.", "utidylib": "Wrapper for HTML Tidy at http://tidy.sourceforge.net", "utilitybelt": "Generally useful tools. A python utility belt.", "utils": "A grab-bag of utility functions and objects", "utm": "Bidirectional UTM-WGS84 converter for python", "uuid": "UUID object and generation functions (Python 2.3 or higher)", "uvcclient": "A remote control client for Ubiquiti's UVC NVR", "uvicorn": "The lightning-fast ASGI server.", "uvloop": "Fast implementation of asyncio event loop on top of libuv", "uw-restclients-core": "Core code for clients of a variety of RESTful web services at the University of Washington", "uw-restclients-pws": "A library for connecting to the Person Web Service at the University of Washington", "uw-restclients-sws": "A library for connecting to the SWS at the University of Washington", "uwsgi": "The uWSGI server", "uwsgidecorators": "uwsgidecorators standalone package", "uwsgitop": "uWSGI top-like interface", "uz": "uz extracts files of all sorts", "v": "A placeholder for a future project.", "v4l2": "Python bindings for the v4l2 userspace api.", "va": "CryoEM validation toolkit", "vadersentiment": "VADER Sentiment Analysis. VADER (Valence Aware Dictionary and sEntiment Reasoner) is a lexicon and rule-based sentiment analysis tool that is specifically attuned to sentiments expressed in social media, and works well on texts from other domains.", "validate_email": "Validate_email verify if an email address is valid and really exists.", "validation": "A library for runtime type checking and validation of python values", "validator.py": "A library for appling schemas to data structures.", "validators": "Python Data Validation for Humans\u2122.", "validictory": "general purpose python data validator", "vallox-websocket-api": "Vallox WebSocket API", "value": "Implementation of Value Object pattern", "values": "values.get(input) - create list from input", "varevents": "Python module to create variables that can raise custom events.", "variable": "Forward and Backward Variable Selection", "varint": "Simple python varint implementation", "vat_moss": "Tools for VAT MOSS and Norway VAT on digital services.", "vatnumber": "[UNMAINTAINED] Python module to validate VAT numbers", "vboxapi": "Python interface to VirtualBox", "vc": "a library for create verification-code", "vcab": "Bridge tool to connect VCP and absinthe", "vcrpy": "Automatically mock your HTTP interactions to simplify and speed up testing", "vcrpy-unittest": "Python unittest integration for vcr.py", "vcstools": "VCS/SCM source control library for svn, git, hg, and bzr", "vcversioner": "Use version control tags to discover version numbers", "vdf": "Library for working with Valve's VDF text format", "vdm": "A versioned domain model framework.", "vdom": "VDOM for Python", "vector": "Vector classes and utilities", "vectorformats": "geographic data serialization/deserialization library", "vega": "A Jupyter widget for Vega 5 and Vega-Lite 4", "vega-datasets": "A Python package for offline access to Vega datasets", "velruse": "Simplifying third-party authentication for web applications.", "vendor": "Vendor provides an AWS service API for building binary Python packages for use in Lambda functions.", "venstarcolortouch": "Interface Library for Venstar ColorTouch Thermostat API v5", "venusian": "A library for deferring decorator actions", "venv-update": "quickly and exactly synchronize a large project's virtualenv with its requirements", "verboselogs": "Verbose logging level for Python's logging module", "verify": "A painless assertion and validation library for Python.", "verlib": "A new version comparison tool for distutils.", "version": "Implementation of semantic version", "versioneer": "Easy VCS-based management of project version strings", "versioning": "Python version sorting tool and MySQL version manager", "versions": "Package version handling library", "versiontools": "Smart replacement for plain tuple used in __version__", "vertex": "Divmod Vertex is the first implementation of the Q2Q protocol, which is a peer-to-peer communication protocol for establishing stream-based communication between named endpoints.", "vertica-python": "A native Python client for the Vertica database.", "vertica-sqlalchemy-0.2": "Vertica dialect for sqlalchemy", "vext": "Use system python packages from a virtualenv", "vext.gi": "Use system python packages in a virtualenv", "vg": "Linear algebra for humans: a very good vector-geometry and linear-algebra toolbelt", "vi": "ms", "via": "initialize your repos", "view": "View images and gifs in iTerm2", "vigilancemeteo": "python API python to get active weather alerts fromhttp://vigilance.meteofrance.com/", "viivakoodi": "Create standard barcodes with Python. No external modules needed (optional PIL support included).", "vim-debug": "a plugin for vim that creates an integrated debugging environment", "vim-vint": "Lint tool for Vim script Language", "vincent": "A Python to Vega translator", "vincenty": "Calculate the geographical distance between 2 points with extreme accuracy.", "vine": "Promises, promises, promises.", "virtual-less": "Install lessc into your virtualenv", "virtual-node": "Install node.js into your virtualenv", "virtualbmc": "Create virtual BMCs for controlling virtual instances via IPMI", "virtualchain": "A library for constructing virtual blockchains within a cryptocurrency's blockchain", "virtualenv": "Virtual Python Environment builder", "virtualenv-clone": "script to clone virtualenvs.", "virtualenvwrapper": "Enhancements to virtualenv", "virtualenvwrapper-win": "Port of Doug Hellmann's virtualenvwrapper to Windows batch scripts", "virustotal-api": "Virus Total Public/Private/Intel API", "visdom": "A tool for visualizing live, rich data for Torch and Numpy", "vishap": "Generate embed (HTML) code of services like Youtube or Vimeo from URLs given. Rules are specified in the plugins.", "vision": "", "visitor": "A tiny pythonic visitor implementation.", "vispy": "Interactive visualization in Python", "vistir": "Miscellaneous utilities for dealing with filesystems, paths, projects, subprocesses, and more.", "viz": "Data visualization in the terminal", "vk": "vk.com API Python wrapper", "vk-api": "Python \u043c\u043e\u0434\u0443\u043b\u044c \u0434\u043b\u044f \u043d\u0430\u043f\u0438\u0441\u0430\u043d\u0438\u044f \u0441\u043a\u0440\u0438\u043f\u0442\u043e\u0432 \u0434\u043b\u044f \u0441\u043e\u0446\u0438\u0430\u043b\u044c\u043d\u043e\u0439 \u0441\u0435\u0442\u0438 \u0412\u043a\u043e\u043d\u0442\u0430\u043a\u0442\u0435 (vk.com) (API wrapper)", "vk-music": "Synchronize music with vk.com", "vkontakte": "vk.com (aka vkontakte.ru) API wrapper", "vmemclient": "Violin Memory Client Interface Library", "vmware-nsx": "VMware NSX library for OpenStack projects", "vmware-nsxlib": "A common library that interfaces with VMware NSX", "vn": "a command line lightweight todos tool.", "vobject": "A full-featured Python package for parsing and creating iCalendar and vCard files", "void": "Void object in Python", "voidpp-web-tools": "UNKNOWN", "volatility": "Volatility -- Volatile memory framwork", "volkszaehler": "Python Wrapper for interacting with the Volkszahler API.", "voluptuous": "# Voluptuous is a Python data validation library", "voluptuous-serialize": "Convert voluptuous schemas to dictionaries", "volvooncall": "Communicate with VOC", "vpnotebook": "pip installable VPython kernel for Jupyter Notebook", "vpython": "VPython for Jupyter Notebook", "vsts-cd-manager": "Python wrapper around some of the VSTS APIs", "vsure": "Read and change status of verisure devices through mypages.", "vtjp": "V\u00e4sttrafik API.", "vtk": "VTK is an open-source toolkit for 3D computer graphics, image processing, and visualization", "vu": "", "vulndb": "Provides access to the vulndb information", "vultr": "Vultr.com API Client", "vulture": "Find dead code", "vumi": "Super-scalable messaging engine for the delivery of SMS, Star Menu and chat messages to diverse audiences in emerging markets and beyond.", "vunit": "Vunit is a python package that relies on pysphere\n      library to provide tests for the Vmware Esxi and Vcenter environment.\n      With this tool, system admins can verify impacts on environments before or\n      after a maintenance.", "vvv": "A convenience utility for software source code validation and linting", "w1thermsensor": "This little pure python module provides a single class to get the temperature of a w1 sensor", "w3lib": "Library of web-related functions", "wadeqin_nestor": "UNKNOWN", "wadllib": "Navigate HTTP resources using WADL files as guides.", "wadofstuff-django-serializers": "Extended serializers for Django.", "wafw00f": "", "wagalytics": "Show Google Analytics data in Wagtail.", "wagtail": "A Django content management system.", "wagtailfontawesome": "Add FontAwesome icons to StreamField.", "wagtailmenus": "An app to help you manage menus in your Wagtail projects more consistently.", "waiting": "Utility for waiting for stuff to happen", "waitress": "Waitress WSGI server", "wakeonlan": "A small python module for wake on lan.", "wallabag_api": "Wallabag API to add every pages you want to your Wallabag account", "walrus": "walrus", "wand": "Ctypes-based simple MagickWand API binding for Python", "wandb": "A CLI and library for interacting with the Weights and Biases API.", "want": "Download images from website.", "wapiti": "A Wikipedia API client for humans and elk.", "waqiasync": "asyncio-friendly python API for aqicn.org", "warc": "Python library to work with ARC and WARC files", "warcio": "Streaming WARC (and ARC) IO library", "warctools": "Command line tools and libraries for handling and manipulating WARC files (and HTTP contents)", "warg": "A package for easing return of multiple values", "warlock": "Python object model built on JSON schema and JSON patch.", "warrant": "Python class to integrate Boto3's Cognito client so it is easy to login users. With SRP support.", "wasabi": "A lightweight console printing and formatting toolkit", "watchdog": "Filesystem events monitoring", "watchgod": "Simple, modern file watching and code reload in python.", "watchtower": "Python CloudWatch Logging", "water": "Apply watermarks to images", "waterfurnace": "Python interface for waterfurnace geothermal systems", "watermark": "IPython magic function to print date/time stamps andvarious system information.", "watson-developer-cloud": "Client library to use the IBM Watson Services", "wave": "Whole Architecture Verification", "wazeroutecalculator": "Calculate actual route time and distance with waze api.", "wchartype": "Retrieves character types of double-byte characters.", "wcsaxes": "WCSAxes: a framework for plotting astronomical and geospatial data", "wcwidth": "Measures number of Terminal column cells of wide-character codes", "wdb": "An improbable web debugger through WebSockets (client only)", "we": "", "weakrefmethod": "A WeakMethod class for storing bound methods using weak references.", "weasyprint": "The Awesome Document Factory", "web": "Web modules for CGI and WSGI web programming", "web-fragments": "Web fragments", "web.py": "web.py: makes web apps", "web3": "Web3.py", "webapp2": "Taking Google App Engine's webapp to the next level!", "webargs": "Declarative parsing and validation of HTTP request objects, with built-in support for popular web frameworks, including Flask, Django, Bottle, Tornado, Pyramid, webapp2, Falcon, and aiohttp.", "webassets": "Media asset management for Python, with glue code for various web frameworks", "webcolors": "A library for working with color names and color values formats defined by HTML and CSS.", "webcord": "A Discord Webhook API Wrapper", "webcouturier.dropdownmenu": "Dropdown menus for global navigation in Plone", "webdav": "WebDAV client library", "webdriver-manager": "Library provides the way to automatically manage drivers for different browsers", "webencodings": "Character encoding aliases for legacy web content", "weberror": "Web Error handling and exception catching", "webexteamssdk": "Community-developed Python SDK for the Webex Teams APIs", "webflash": "Portable flash messages for WSGI apps", "webhelpers": "Web Helpers", "webhelpers2": "WebHelpers2", "webkit-server": "a Webkit-based, headless web client", "weblib": "Set of tools for web scraping projects", "weblogo": "WebLogo3 : Sequence Logos Redrawn", "webob": "WSGI request and response object", "webpack": "Python bindings to Webpack", "webrtcvad": "Python interface to the Google WebRTC Voice Activity Detector (VAD)", "webserver": "Simple to use CLI for setting up nginx webserver in Docker Swarm and adding websites' configs, proxies and static files", "websocket": "Websocket implementation for gevent", "websocket-server": "A minimal websocket server that works for both Python2 and Python3", "websocket_client": "WebSocket client for Python. hybi13 is supported.", "websockets": "An implementation of the WebSocket Protocol (RFC 6455 & 7692)", "websockify": "Websockify.", "webtest": "Helper to test WSGI applications", "webtest-plus": "An extension of WebTest with useful extras, including requests-style authentication.", "webunit": "Unit test your websites with code that acts like a web browser.", "wechat-python-sdk": "\u5fae\u4fe1\u516c\u4f17\u5e73\u53f0Python\u5f00\u53d1\u5305", "wechat-sdk": "\u5fae\u4fe1\u516c\u4f17\u5e73\u53f0Python\u5f00\u53d1\u5305", "wechatpy": "WeChat SDK for Python", "weighwords": "Python library for creating word weights/word clouds from text", "welcome": "A Python package - welcome", "went": "Tools for implementing a webmention enpoint.", "wepay": "A Python SDK for our WePay API.", "weppy": "The web framework for humans", "werkzeug": "The comprehensive WSGI web application library.", "werobot": "WeRoBot: writing WeChat Offical Account Robots with fun", "wf": "wf", "wfastcgi": "An IIS-Python bridge based on WSGI and FastCGI.", "wfdb": "The WFDB Python Toolbox", "wfuzz": "Wfuzz - The web fuzzer", "wget": "pure python download utility", "what": "A helper for testing process output", "whatever": "Easy way to make anonymous functions by partial application of operators.", "wheel": "A built-package format for Python", "wheezy.caching": "A lightweight caching library", "wheezy.captcha": "A lightweight captcha library", "wheezy.core": "A lightweight core library", "wheezy.html": "A lightweight html rendering library", "wheezy.http": "A lightweight http request-response library", "wheezy.routing": "A lightweight path routing library", "wheezy.security": "A lightweight security/cryptography library", "wheezy.template": "A lightweight template library", "wheezy.validation": "A lightweight object validation library", "wheezy.web": "A lightweight, high performance, high concurrency WSGI web framework with the key features to build modern, efficient web", "when": "psychic strptime", "when-changed": "Make when-changed cross-platform", "where": "Locates absolute file paths like the Windows 'where' or the Linux 'which' utility.\nMakes use of the PATH variable and the current directory.", "whereto": "Test Apache redirect rules.", "which": "a portable GNU which replacement implemented in Python", "whichcraft": "This package provides cross-platform cross-python shutil.which functionality.", "whisper": "Fixed size round-robin style database", "white": "Black, but White instead (PEP8 line\u2013lengths).", "whitenoise": "Radically simplified static file serving for WSGI applications", "whither": "Desktop application SDK for creating Universal Linux Applications.", "who": "Who are you", "whois": "Python package for retrieving WHOIS information of domains.", "whoops": "WebHDFS client", "whoosh": "Fast, pure-Python full text indexing, search, and spell checking library.", "why": "A simple printer of nested lists", "wicked": "wicked is a compact syntax for doing wiki-like content linking and creation in zope and plone", "widgetsnbextension": "IPython HTML widgets for Jupyter", "wifi": "Command line tool and library wrappers around iwlist and\n/etc/network/interfaces.", "wiki": "A wiki system written for the Django framework.", "wikiapi": "A basic python library enabling access to Wikipedia.org's search results and article content.", "wikipedia": "Wikipedia API for Python", "wikitools": "Python package for interacting with a MediaWiki wiki", "will": "A friendly python hipchat bot", "willow": "A Python image library that sits on top of Pillow, Wand and OpenCV", "wilos-cli": "What's it like outside? - Weather for hackers", "win-inet-pton": "Native inet_pton and inet_ntop implementation for Python on Windows (with ctypes).", "win10toast": "An easy-to-use Python library for displaying Windows 10 Toast Notifications", "win32gui": "Python for Window Extensions", "win_unicode_console": "Enable Unicode input and display when running Python from Windows console.", "wincertstore": "Python module to extract CA and CRL certs from Windows' cert store (ctypes based).", "windows": "This package name is reserved by Microsoft Corporation", "windows-curses": "Support for the standard curses module on Windows", "winkerberos": "High level interface to SSPI for Kerberos client auth", "winpdb": "A platform independent GPL Python debugger.", "winrandom-ctypes": "Winrandom equivalent using ctypes.", "winshell": "Windows shell functions", "wired": "An inversion-of-control (IoC) container for building decoupled, configurable, pluggable applications.", "wireless": "A dead simple, cross-platform Python library to connect to wireless networks.", "wirelesstagpy": "Simple python wrapper over wirelesstags REST API", "wiringpi": "A python interface to WiringPi 2.0 library which allows for easily interfacing with the GPIO pins of the Raspberry Pi. Also supports i2c and SPI.", "wish": "Selectable Return Values for Python", "wit": "Wit SDK for Python", "witchhazel": "A dark & feminine color scheme for Pygments", "with": "A shell context manager", "withings-api": "Library for the Withings API", "wkhtmltopdf": "Simple python wrapper for wkhtmltopdf", "wled": "Asynchronous Python client for WLED.", "wmctrl": "A tool to programmatically control windows inside X", "wmi": "Windows Management Instrumentation", "wmi-client-wrapper": "Linux-only wrapper around wmi-client for WMI (Windows)", "wokkel": "Twisted Jabber support library", "wolframalpha": "Wolfram|Alpha 2.0 API client", "woocommerce": "A Python wrapper for the WooCommerce REST API", "wooper": "FrisbyJS-inspired REST API testing helpers and steps for 'behave' behavior-driven development testing library", "word2number": "Convert number words eg. three hundred and forty two to numbers (342).", "word2vec": "Wrapper for Google word2vec", "wordcloud": "A little word cloud generator", "wordfreq": "wordfreq is a Python library for looking up the frequencies of words in many", "wordnik": "Wordnik API for Python", "wordpress": "Wordpress API client", "words": "Tool to get a large collection of words.", "work": "Agile work time tracker", "workalendar": "Worldwide holidays and working days helper and toolkit.", "workdays": "Workday date utility functions to extend python's datetime", "workerpool": "Module for distributing jobs to a pool of worker threads.", "workflow": "Simple workflows for Python", "working": "Makes spawning processes enjoyable.", "wpilib": "Binary wrapper for FRC WPILib", "wptools": "Wikipedia tools (for Humans)", "wptserve": "Python webserver intended for in web browser testing", "wrapcache": "Short for wraps cache. A method cache system base on method Decorators.", "wrapping": "Python Wrapping", "wrapt": "Module for decorators, wrappers and monkey patching.", "ws": "Efficient asyncio based web crawler", "ws4py": "WebSocket client and server library for Python 2 and 3 as well as PyPy", "wsaccel": "Accelerator for ws4py and AutobahnPython", "wsgi-intercept": "wsgi_intercept installs a WSGI application in place of a real URI for testing.", "wsgi-request-logger": "Apache-like combined logging for WSGI Web Applications", "wsgi-statsd": "WSGI middleware for statsd timing", "wsgiauth": "WSGI authentication middleware", "wsgidav": "Generic and extendable WebDAV server based on WSGI", "wsgilog": "WSGI logging and event reporting middleware", "wsgiproxy": "HTTP proxying tools for WSGI apps", "wsgiproxy2": "A WSGI Proxy with various http client backends", "wsgiref": "WSGI (PEP 333) Reference Library", "wsgiutils": "WSGI Utils are a collection of useful libraries for use in a WSGI environnment.", "wsme": "Simplify the writing of REST APIs, and extend them with additional protocols.", "wsproto": "WebSockets state-machine based protocol implementation", "wsql": "Asynchronous Python interface to MySQL", "wstool": "workspace multi-SCM commands", "wstools": "WSDL parsing services package for Web Services for Python.", "wtf": "Post-mortem PDB handler", "wtf-peewee": "WTForms integration for peewee models", "wtform": "WTForm is an extension to the django newforms library.", "wtforms": "A flexible forms validation and rendering library for Python web development.", "wtforms-alchemy": "Generates WTForms forms from SQLAlchemy models.", "wtforms-components": "Additional fields, validators and widgets for WTForms.", "wtforms-json": "Adds smart json support for WTForms. Useful for when using WTForms with RESTful APIs.", "wtforms-recaptcha": "Custom WTForms field that handles reCaptcha display and validation", "wtforms-sqlalchemy": "SQLAlchemy tools for WTForms", "wtforms-tornado": "WTForms extensions for Tornado.", "wunderpy2": "A Python library for the Wunderlist 2 REST API", "wurlitzer": "Capture C-level output in context managers", "wxpy": "\u5fae\u4fe1\u673a\u5668\u4eba / \u53ef\u80fd\u662f\u6700\u4f18\u96c5\u7684\u5fae\u4fe1\u4e2a\u4eba\u53f7 API", "wxpython": "Cross platform GUI toolkit for Python, \"Phoenix\" version", "wxpython-common": "Cross platform GUI toolkit for Python", "x11_hash": "Binding for X11 proof of work hashing.", "xacro": "", "xadmin": "Drop-in replacement of Django admin comes with lots of goodies, fully extensible with plugin support, pretty UI based on Twitter Bootstrap.", "xai": "XAI - An industry-ready machine learning library that ensures explainable AI by design", "xapian-haystack": "A Xapian backend for Haystack", "xarray": "N-D labeled arrays and datasets in Python", "xattr": "Python wrapper for extended filesystem attributes", "xbee": "Python tools for working with XBee radios", "xbee-helper": "This project offers a high level API to an XBee device running an up-\nto-date version of the ZigBee firmware. It builds upon the existing\nXBee project by abstracting more functionality into methods.", "xblock": "XBlock Core Library", "xblock-utils": "Various utilities for XBlocks", "xboxapi": "A wrapper library for XboxAPI.com", "xcffib": "A drop in replacement for xpyb, an XCB python binding", "xcs": "XCS (Accuracy-based Classifier System)", "xdg": "Variables defined by the XDG Base Directory Specification", "xdis": "Python cross-version byte-code disassembler and marshal routines", "xdoctest": "A rewrite of the builtin doctest module", "xdot": "Interactive viewer for Graphviz dot files", "xenapi": "XenAPI SDK, for communication with Citrix Hypervisor.", "xenon": "Monitor code metrics for Python on your CI server", "xerox": "Simple Copy + Paste in Python.", "xfinity-gateway": "Query an Xfinity Gateway", "xfl": "UNKNOWN", "xgboost": "XGBoost Python Package", "xhtml2pdf": "PDF generator using HTML and CSS", "xjpath": "JSON like structure data lookup library. A fast alternative to XPath and JsonPath.", "xkcdpass": "Generate secure multiword passwords/passphrases, inspired by XKCD", "xknx": "An Asynchronous Library for the KNX protocol. Documentation: http://xknx.io/", "xlib": "Python X Library", "xlrd": "Library for developers to extract data from Microsoft Excel (tm) spreadsheet files", "xlsx2csv": "xlsx to csv converter", "xlsxwriter": "A Python module for creating Excel XLSX files.", "xlutils": "Utilities for working with Excel files that require both xlrd and xlwt", "xlwings": "Make Excel fly: Interact with Excel from Python and vice versa.", "xlwt": "Library to create spreadsheet files compatible with MS Excel 97/2000/XP/2003 XLS files, on any platform, with Python 2.6, 2.7, 3.3+", "xlwt-future": "Library to create spreadsheet files compatible with MS Excel 97/2000/XP/2003 XLS files, on any platform, with Python 2.6 to 3.3", "xml-utils": "XML utils for the curator core project", "xmlbuilder": "pythonic way to create xml/(x)html files. Updated version with fixes, unicode support and cleaned API.", "xmljson": "Converts XML into JSON/Python dicts/arrays and vice-versa.", "xmlrunner": "PyUnit-based test runner with JUnit like XML reporting.", "xmlschema": "An XML Schema validator and decoder", "xmlsec": "Python bindings for the XML Security Library", "xmltodict": "Makes working with XML feel like you are working with JSON", "xmlunittest": "Library using lxml and unittest for unit testing XML.", "xmodem": "XMODEM protocol implementation.", "xmpppy": "XMPP-IM-compliant library for jabber instant messenging.", "xpinyin": "translate chinese hanzi to pinyin by python", "xray": "N-D labeled arrays and datasets in Python", "xrootdpyfs": "XRootDPyFS is a PyFilesystem interface to XRootD.", "xs1-api-client": "A library to get and set values of the EZcontrol XS1 Gateway", "xstatic": "XStatic base package with minimal support code", "xstatic-angular": "Angular 1.5.8 (XStatic packaging standard)", "xstatic-angular-bootstrap": "Angular-Bootstrap 2.2.0 (XStatic packaging standard)", "xstatic-angular-cookies": "Angular-Cookies 1.2.1 (XStatic packaging standard)", "xstatic-angular-fileupload": "Angular-FileUpload 12.0.4 (XStatic packaging standard)", "xstatic-angular-gettext": "Angular-Gettext 2.3.8 (XStatic packaging standard)", "xstatic-angular-lrdragndrop": "Angular-lrdragndrop 1.0.2 (XStatic packaging standard)", "xstatic-angular-mock": "Angular-Mock 1.2.1 (XStatic packaging standard)", "xstatic-angular-schema-form": "Angular-Schema-Form 0.8.13 (XStatic packaging standard)", "xstatic-angular-ui-router": "XStatic-angular-ui-router\n-------------------------\n\nangular-ui-router javascript library packaged for setuptools (easy_install) / pip.\n\nThis package is intended to be used by **any** project that needs these files.\n\nIt intentionally does **not** provide any extra code except some metadata\n**nor** has any extra requirements. You MAY use some minimal support code from\nthe XStatic base package, if you like.\n\nYou can find more info about the xstatic packaging way in the package\n`XStatic`.", "xstatic-anywikidraw": "AnyWikiDraw 0.14 (XStatic packaging standard)", "xstatic-autosize": "autosize 1.17.2 (XStatic packaging standard)", "xstatic-bootstrap": "Bootstrap 4.1.3 (XStatic packaging standard)", "xstatic-bootstrap-datepicker": "Bootstrap-Datepicker 1.3.1 (XStatic packaging standard)", "xstatic-bootstrap-scss": "Bootstrap-SCSS 3.3.7 (XStatic packaging standard)", "xstatic-bootswatch": "bootswatch 3.3.7 (XStatic packaging standard)", "xstatic-ckeditor": "CKEditor 3.6.4 (XStatic packaging standard)", "xstatic-d3": "D3 3.5.17 (XStatic packaging standard)", "xstatic-font-awesome": "Font-Awesome 4.7.0 (XStatic packaging standard)", "xstatic-hogan": "Hogan 2.0.0 (XStatic packaging standard)", "xstatic-jasmine": "Jasmine 2.4.1 (XStatic packaging standard)", "xstatic-jquery": "jQuery 3.3.1 (XStatic packaging standard)", "xstatic-jquery-file-upload": "jQuery-File-Upload 9.23.0 (XStatic packaging standard)", "xstatic-jquery-migrate": "JQuery-Migrate 1.2.1 (XStatic packaging standard)", "xstatic-jquery-ui": "jquery-ui 1.12.1 (XStatic packaging standard)", "xstatic-jquery.bootstrap.wizard": "JQuery.Bootstrap.Wizard 1.0.0 (XStatic packaging standard)", "xstatic-jquery.quicksearch": "JQuery.quicksearch 2.0.3 (XStatic packaging standard)", "xstatic-jquery.tablesorter": "JQuery.TableSorter 2.14.5 (XStatic packaging standard)", "xstatic-jsencrypt": "JSEncrypt 2.3.1 (XStatic packaging standard)", "xstatic-json-js": "JSON-js 40f3377a63 (XStatic packaging standard)", "xstatic-magic-search": "Magic-Search 0.2.5 (XStatic packaging standard)", "xstatic-mdi": "mdi 1.6.50 (XStatic packaging standard)", "xstatic-objectpath": "objectpath 1.2.1 (XStatic packaging standard)", "xstatic-pygments": "Pygments 2.2.0 (XStatic packaging standard)", "xstatic-qunit": "QUnit 1.14.0 (XStatic packaging standard)", "xstatic-rickshaw": "Rickshaw 1.5.0 (XStatic packaging standard)", "xstatic-roboto-fontface": "roboto-fontface 0.5.0 (XStatic packaging standard)", "xstatic-smart-table": "smart-table 1.4.13 (XStatic packaging standard)", "xstatic-spin": "Spin 1.2.5 (XStatic packaging standard)", "xstatic-svg-edit-moin": "svg-edit-moin 2012.11.27 (XStatic packaging standard)", "xstatic-svgweb": "svgweb 2011.2.3 (XStatic packaging standard)", "xstatic-term.js": "term.js 0.0.7 (XStatic packaging standard)", "xstatic-tv4": "tv4 1.2.7 (XStatic packaging standard)", "xstatic-twikidraw-moin": "TWikiDraw-moin 2004.10.23 (XStatic packaging standard)", "xtermcolor": "Python module for colorizing output with xterm 256 color support", "xtraceback": "An extended traceback formatter", "xunitmerge": "Utility for merging multiple XUnit xml reports into a single xml report.", "xunitparser": "Read JUnit/XUnit XML files and map them to Python objects", "xvfbwrapper": "run headless display inside X virtual framebuffer (Xvfb)", "xxhash": "Python binding for xxHash", "xxtea": "xxtea is a simple block cipher", "yacs": "Yet Another Configuration System", "yagmail": "Yet Another GMAIL client", "yahoo-finance": "Python module to get stock data from Yahoo! Finance", "yahooweather": "a Python module that provides an interface to the Yahoo! Weather RSS feed.", "yajl": "A CPython module for Yet-Another-Json-Library", "yalesmartalarmclient": "Interact with Yale Smart Alarm systems", "yamale": "A schema and validator for YAML.", "yamlconf": "Yaml-based configuration file reader.", "yamllint": "A linter for YAML files.", "yamllintbear": "'YAMLLintBear' bear for coala (http://coala.rtfd.org/)", "yamlordereddictloader": "YAML loader and dump for PyYAML allowing to keep keys order.", "yamole": "A YAML parser that resolves JSON references", "yampy": "The official Python client for Yammer's API", "yampy2": "The (un)official Python client for Yammer's API", "yanc": "Yet another nose colorer", "yandex.translate": "Python library for Yandex.Translate API.", "yapf": "A formatter for Python code.", "yappi": "Yet Another Python Profiler", "yapsy": "Yet another plugin system", "yaql": "YAQL - Yet Another Query Language", "yara": "Compile YARA rules to test against files or strings", "yara-python": "Python interface for YARA", "yarg": "A semi hard Cornish cheese, also queries PyPI (PyPI client)", "yarl": "Yet another URL library", "yasfb": "Yet Another Sphinx Feed Builder", "yaspin": "Yet Another Terminal Spinner", "yattag": "Generate HTML or XML in a pythonic way. Pure python alternative to web template engines.Can fill HTML forms with default values and error messages.", "yaycl": "YAML Config Autoloader", "yaycl-crypt": "YAML Config Autoloader Encryption Support", "yeelight": "A Python library for controlling YeeLight RGB bulbs.", "yeelightsunflower": "Python package for interacting with Yeelight Sunflower bulbs", "yellowbrick": "A suite of visual analysis and diagnostic tools for machine learning.", "yelp": "Python Clientlib for Yelp Public API", "yelp-clog": "A package which provides logging and reading from scribe.", "yelp-meteorite": "A small example package", "yelpapi": "yelpapi is a pure Python implementation of the Yelp Fusion API.", "yep": "A module for profiling compiled extensions", "yes": "a validation lib", "yessssms": "YesssSMS let's you send SMS via yesss.at's website.", "yg.lockfile": "Lockfile object with timeouts and context manager", "yoctopuce": "Yoctopuce python API", "yolk": "Command-line tool for querying PyPI and Python packages installed on your system.", "yolk3k": "Command-line tool for querying PyPI and Python packages installed on your system.", "yorm": "Automatic object-YAML mapping for Python.", "you": "My next dumb thing.", "youtube_dl": "YouTube video downloader", "yowsup2": "The WhatsApp lib", "yoyo-migrations": "Database migrations with SQL", "yq": "Command-line YAML/XML processor - jq wrapper for YAML/XML documents", "ystockquote": "retrieve stock quote data from Yahoo Finance", "yt": "An analysis and visualization toolkit for volumetric data", "yubico-client": "Library for verifying Yubikey One Time Passwords (OTPs)", "yuicompressor": "YUI Compressor packaged for Python", "yurl": "Yurl is alternative url manipulation library", "z3-solver": "an efficient SMT solver library", "z3c.autoinclude": "Automatically include ZCML", "z3c.caching": "Caching infrastructure for web apps", "z3c.flashmessage": "A package for sending `flash messages` to users.", "z3c.form": "An advanced form and widget framework for Zope 3", "z3c.formui": "A set of initial UI components for z3c.form.", "z3c.formwidget.query": "A source query widget for z3c.form.", "z3c.jbot": "Drop-in template overrides.", "z3c.layer.pagelet": "Pagelet layer setup for Zope 3", "z3c.macro": "Simpler definition of ZPT macros.", "z3c.menu.ready2go": "A ready to go menu for Zope3", "z3c.objpath": "Generate and resolve paths to to objects.", "z3c.pagelet": "Pagelets are way to specify a template without the O-wrap.", "z3c.pt": "Fast ZPT engine.", "z3c.ptcompat": "Zope-compatible page template engine based on Chameleon.", "z3c.recipe.sphinxdoc": "Use Sphinx to build documentation for zope.org.", "z3c.relationfield": "A relation field framework for Zope 3.", "z3c.rml": "An alternative implementation of RML", "z3c.saconfig": "Minimal SQLAlchemy ORM session configuration for Zope", "z3c.schema": "Additional schema fields for Zope 3", "z3c.template": "A package implementing advanced Page Template patterns.", "z3c.testsetup": "Easier test setup for Zope 3 projects and other Python packages.", "z3c.traverser": "Pluggable Traversers And URL handling utilities", "z3c.unconfigure": "Disable specific ZCML directives in other package's configuration", "z3c.zcmlhook": "Easily hook into the ZCML processing machinery", "zabbix": "Python module to work with zabbix.", "zake": "A python package that works to provide a nice set of testing utilities for the kazoo library.", "zalgo-text": "\u0316\u0318A \u0361\u035c\u0329\u033cs\u0341\u031b\u033a\u0326\u0303m\u0321\u0325\u032ba\u031b\u0333\u0339l\u0335\u0337\u0350\u036al \u0336\u032bl\u031e\u0306\u0307i\u0348\u032bbr\u0358\u032e\u0317a\u0347\u0357\u030cr\u035c\u035c\u031d\u0368y \u033c\u0345\u0303t\u0341\u0334\u0331\u032f\u0352\u0369o \u0337\u0318c\u0341\u036br\u0355\u030e\u0346e\u0341\u034ba\u031b\u035c\u0333\u0348\u0357t\u036b\u036ee \u0361\u0335\u0333\u0357\u030dz\u0334\u0347\u0317a\u032e\u0339\u036cl\u031b\u0352\u0310g\u0327\u030fo \u0341\u0361\u0345s\u031c\u0357\u0302t\u035f\u0362\u0319\u032cy\u0336\u0341\u0339l\u032ae\u0327\u0360\u034d\u0353\u0304\u033ed \u0335\u0337\u0320\u030ct\u0338\u0362\u0348\u0316\u0301\u030ee\u0338\u0343\u0343x\u032e\u036et.", "zanshin": "High-level library for HTTP, WebDAV and CalDAV operations", "zappa": "Server-less Python Web Services for AWS Lambda and API Gateway", "zarr": "An implementation of chunked, compressed, N-dimensional arrays for Python.", "zato-common": "Constants and utils common across the whole of Zato ESB and app server (https://zato.io)", "zbar": "read barcodes from images or video", "zbar-py": "zbar package", "zbarlight": "A simple zbar wrapper", "zbase32": "base32 encoder/decoder", "zbox": "Get cytoolz or toolz, whatever's around", "zc.buildout": "System for managing development buildouts", "zc.catalog": "Extensions to the Zope 3 Catalog", "zc.lockfile": "Basic inter-process locks", "zc.metarecipe": "============", "zc.queue": "Queues that are optimized for persistency via the ZODB.", "zc.recipe.cmmi": "ZC Buildout recipe for configure/make/make install", "zc.recipe.egg": "Recipe for installing Python package distributions as eggs", "zc.recipe.testrunner": "ZC Buildout recipe for creating test runners", "zc.relation": "Index intransitive and transitive n-ary relationships.", "zc.resourcelibrary": "Post-rendering Resource Inclusion", "zc.table": "Zope table", "zc.zk": "Service registration and discovery with ZooKeeper", "zconfig": "Structured Configuration Library", "zcons": "Zimmermann's SCons wrapper", "zdaemon": "Daemon process control library and tools for Unix-based systems", "zdesk": "Zendesk API generated directly from developer.zendesk.com", "zeam.form.silva": "Integration of the Grok-based Zeam Form system into Silva", "zeam.utils.batch": "Generic Batch support for Zope", "zeep": "A modern/fast Python SOAP client based on lxml / requests", "zendesk": "Python API Wrapper for Zendesk", "zengge": "Python API for controlling Zengge LED bulbs", "zenlog": "Logging for the lazy", "zenodo-accessrequests": "Zenodo module for providing access request feature.", "zenpy": "Python wrapper for the Zendesk API", "zensend": "ZenSend python bindings", "zeo": "ZEO - Single-server client-server database server for ZODB", "zero": "Linear circuit simulator", "zeroc-ice": "Ice is a comprehensive RPC framework with support for Python, C++, .NET, Java, JavaScript and more.", "zeroconf": "Pure Python Multicast DNS Service Discovery Library (Bonjour/Avahi compatible)", "zerorpc": "zerorpc is a flexible RPC based on zeromq.", "zest.releaser": "Software releasing made easy and repeatable", "zetup": "Zimmermann's Extensible Tools for Unified Project_setups", "zexceptions": "zExceptions contains common exceptions used in Zope.", "zfec": "An efficient, portable erasure coding tool", "zha-quirks": "Library implementing Zigpy quirks for ZHA in Home Assistant", "zhmcclient": "A pure Python client library for the IBM Z HMC Web Services API.", "zhon": "Zhon provides constants used in Chinese text processing.", "zict": "Mutable mapping tools", "ziggo-mediabox-xl": "Python interface to Ziggo's Mediabox XL", "zigpy": "Library implementing a ZigBee stack", "zigpy-deconz": "A library which communicates with Deconz radios for zigpy", "zigpy-homeassistant": "Library implementing a ZigBee stack", "zigpy-xbee": "A library which communicates with XBee radios for zigpy", "zigpy-xbee-homeassistant": "A library which communicates with XBee radios for zigpy", "zigpy-zigate": "A library which communicates with ZiGate radios for zigpy", "zinnia-theme-bootstrap": "Bootstrap theme for django-blog-zinnia", "zipline": "A backtester for financial algorithms.", "zipp": "Backport of pathlib-compatible object wrapper for zip files", "zipstream": "Zipfile generator", "zlib_wrapper": "Wrapper around zlib with custom header crc32.", "zlog": "A general logging facility", "zm-py": "A loose python wrapper around the ZoneMinder REST API.", "zmq": "You are probably looking for pyzmq.", "zodb": "ZODB, a Python object-oriented database", "zodb3": "ZODB3 - Meta release for ZODB, persistent, BTrees and ZEO", "zodbpickle": "Fork of Python 2 and 3 pickle module.", "zodburi": "Construct ZODB storage instances from URIs.", "zone": "Asynchronous RPC framework based on Apache Avro and Trollius", "zookeeper": "A small library for managing deep learning models, hyper parameters and datasets", "zoom": "Distributed project management", "zope": "Zope application server / web framework", "zope.annotation": "Object annotation mechanism", "zope.app.applicationcontrol": "Zope application control", "zope.app.appsetup": "Zope app setup helper", "zope.app.authentication": "Principals and groups management for the pluggable authentication utility", "zope.app.basicskin": "Zope ZMI Basic Skin", "zope.app.broken": "Zope Broken (ZODB) Object Support", "zope.app.catalog": "Management pages for Zope Catalog", "zope.app.component": "Local Zope Component Support", "zope.app.container": "Zope Container", "zope.app.content": "Zope Content Type", "zope.app.debug": "Zope Debug Mode", "zope.app.dependable": "Simple Dependency API", "zope.app.error": "Error reporting utility management UI for Zope3", "zope.app.exception": "Zope 3 exception views", "zope.app.folder": "Folder Content Type for Zope 3", "zope.app.form": "The Original Zope 3 Form Framework", "zope.app.generations": "ZMI UI for zope.generations", "zope.app.http": "HTTP Behavior for the Zope Publisher", "zope.app.i18n": "Persistent translation domains and message catalogs", "zope.app.intid": "ZMI views for Integer Id Utility", "zope.app.keyreference": "Object key references", "zope.app.locales": "Zope locale extraction and management utilities", "zope.app.pagetemplate": "PageTemplate integration for Zope 3", "zope.app.principalannotation": "Bootstrap subscriber and browser menu item for zope.principalannotation", "zope.app.publication": "Zope publication", "zope.app.publisher": "Implementations and means for configuration of Zope 3-style views and resources.", "zope.app.rotterdam": "Rotterdam -- A Zope 3 ZMI Skin", "zope.app.schema": "Component Architecture based Vocabulary Registry", "zope.app.security": "ZMI Views For Zope3 Security Components", "zope.app.securitypolicy": "ZMI-based management views for zope.securitypolicy", "zope.app.session": "Zope session", "zope.app.testing": "Zope Application Testing Support", "zope.app.wsgi": "WSGI application for the zope.publisher", "zope.app.zcmlfiles": "Zope application server ZCML files", "zope.app.zopeappgenerations": "Zope Application ZODB Update Generations", "zope.authentication": "Definition of authentication basics for the Zope Framework", "zope.broken": "Zope Broken Object Interfaces", "zope.browser": "Shared Zope Toolkit browser components", "zope.browsermenu": "Browser menu implementation for Zope.", "zope.browserpage": "ZCML directives for configuring browser views for Zope.", "zope.browserresource": "Browser resources implementation for Zope.", "zope.cachedescriptors": "Method and property caching decorators", "zope.catalog": "Cataloging and Indexing Framework for the Zope Toolkit", "zope.component": "Zope Component Architecture", "zope.componentvocabulary": "Component vocabularies", "zope.configuration": "Zope Configuration Markup Language (ZCML)", "zope.container": "Zope Container", "zope.contentprovider": "Content Provider Framework for Zope Templates", "zope.contenttype": "Zope contenttype", "zope.copy": "Pluggable object copying mechanism", "zope.copypastemove": "Copy, Paste and Move support for content components.", "zope.datetime": "Zope datetime", "zope.deferredimport": "zope.deferredimport allows you to perform imports names that will only be resolved when used in the code.", "zope.deprecation": "Zope Deprecation Infrastructure", "zope.dottedname": "Resolver for Python dotted names.", "zope.dublincore": "Zope Dublin Core implementation", "zope.error": "An error reporting utility for Zope3", "zope.errorview": "Basic HTTP and Browser exception views.", "zope.event": "Very basic event publishing system", "zope.exceptions": "Zope Exceptions", "zope.fanstatic": "Fanstatic integration for Zope.", "zope.filerepresentation": "File-system Representation Interfaces", "zope.formlib": "Form generation and validation library for Zope", "zope.generations": "Zope application schema generations", "zope.globalrequest": "Global way of retrieving the currently active request.", "zope.hookable": "Zope hookable", "zope.i18n": "Zope Internationalization Support", "zope.i18nmessageid": "Message Identifiers for internationalization", "zope.index": "Indices for using with catalog like text, field, etc.", "zope.interface": "Interfaces for Python", "zope.intid": "Integer Id Utility", "zope.keyreference": "Key References", "zope.lifecycleevent": "Object life-cycle events", "zope.location": "Zope Location", "zope.login": "Login helpers for zope.publisher / authentication.", "zope.minmax": "Homogeneous values favoring maximum or minimum for ZODB conflict resolution", "zope.pagetemplate": "Zope Page Templates", "zope.password": "Password encoding and checking utilities", "zope.principalregistry": "Global principal registry component for Zope3", "zope.processlifetime": "Zope process lifetime events", "zope.proxy": "Generic Transparent Proxies", "zope.ptresource": "Page template resource plugin for zope.browserresource", "zope.publisher": "The Zope publisher publishes Python objects on the web.", "zope.ramcache": "Zope RAM Cache", "zope.schema": "zope.interface extension for defining data schemas", "zope.security": "Zope Security Framework", "zope.securitypolicy": "Default security policy for Zope3", "zope.sendmail": "Zope sendmail", "zope.sequencesort": "Sequence Sorting", "zope.server": "Zope Server (Web and FTP)", "zope.session": "Client identification and sessions for Zope", "zope.site": "Local registries for zope component architecture", "zope.size": "Interfaces and simple adapter that give the size of an object", "zope.sqlalchemy": "Minimal Zope/SQLAlchemy transaction integration", "zope.structuredtext": "StructuredText parser", "zope.tal": "Zope Template Application Language (TAL)", "zope.tales": "Zope Template Application Language Expression Syntax (TALES)", "zope.testbrowser": "Programmable browser for functional black-box tests", "zope.testing": "Zope testing helpers", "zope.testrunner": "Zope testrunner script.", "zope.traversing": "Resolving paths in the object hierarchy", "zope.viewlet": "Zope Viewlets", "zope2": "Zope application server / web framework", "zopeskel": "Templates and code generator for quickstarting Plone / Zope projects.", "zopeundo": "ZODB undo support for Zope2.", "zserver": "Zope ZServer.", "zsi": "Zolera SOAP Infrastructure", "zstandard": "Zstandard bindings for Python", "zstd": "ZSTD Bindings for Python", "zulip": "Bindings for the Zulip message API", "zxcvbn": "", "zxcvbn-python": ""}